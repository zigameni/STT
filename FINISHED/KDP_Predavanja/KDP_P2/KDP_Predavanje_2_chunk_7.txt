 Zato se to desilo. I lovo radi, ajde sad ponovat. I ja ovo smo da transformišem u while lock skip lock je true 3.0-ci sa kritičnog sekcija lock je false smem ili nesmem odgovor je nesmem zašto nesmem ista situacija isti scenario kao maločas dva procesa dođu do while pročitaju lock, lock je jednako false neće ući u skip iskočića iz whilea, kaže uslov nije ispunjen i doćiće na lock jednog u true i oba će ući u kredičnu sekciju tako da ovo ovde ovako napisan o... nerati a sad, kako onda ovo razrješiti? po sad, možemo da mozgamo neko rešenje ali oni su ljudi uzeli, ok ajde mi da se oslonimo na pomoć architekture radžunara ajde, oni kad prave već gomilu, tih instrukcija u procesu ajde da nam naprave jednu instrukciju to je instrukcija koja se naziva test and set šta radi ta instrukcija test and set? pročita staru vrednost postav je negde a upiše novu vrednostu tu promenjivo se neko možete bide čekaj ko bi pravi ovo je glupa instrukcija? koja me to treba? je to ikde postoje postoje, ovako instrukcija možda ste jednu instrukciju sa sličim efektom čak je koristili na ustore nije možda, sigurno ste koristili na prednetu architektura ar. a to je bilo instrukcija increment gde uvećevate neku promenjivu koja se nalazi naprim. increment pa kašte sa lokacije inc, memadara šta radi inc memadara? učita promenjivu sa lokacije memadara uveće za jedan i upiše ponovno na tu lokaciju memadara a u akumulatoru ostane stara vrednost koji smo imali u promenjivu memadara šta sam ja sad reko da se desi? reko sam da postoji atomska instrukcija koja će da pročita vrednost da smestivu u akumulator i da stavi novu vrednost tamo su ti je bilo novovrednost plus 1 a ako distrukcija test nset novovrednosti biti jednakatru i evo ovde se to već radi ako vas zanima, da li ovakva instrukcija postoje? da, ovakva instrukcija već postoje, viste već ovakva instrukcija već koristili evo ovde jedne takva instrukcija test nset šta radi? ovva ovde instrukcija test nset pročita stara vrednost vidite ovdje što piše buljen je jednako i nišao od lock to pročitate, stavite ovakumulator vrednost a na ovde lock upišete vrednost 1 ču? i onda vratite ritornije kroz akumulatoru ovde nije funcija ovde je instrukcija procesora da se zove test nset na svakom procesoru ili je to realizovanu kroz swap instrukciju to je sada već pitanje šta nam konkretna arhitektura nudi ali arhitekture računara nude ovakve instrukcije gde šta veš radi? ovoj instrukcije da ponemim ušedom pročita stara vrednost pročita na stara vrednost u promenljivu postavljimo na neku novog vrednost imamo test nset da obijemo stara vrednost ghet i oprisali smo novog vrednost set ako uzmete neka da gledate imaćete instrukcije ghet nset add ghet ned to ćemo videti kada budemo radili i progrmski jazik java za neke promenljive koji su oznočili kao atomske videte ćemo kako su to opravi kako se to označava i koji je od čudnih zavkusti misli ovoj glupost nije glupost svanu se koristi izmnogu u brzava izvršavanje nekih delova dobra šta ćemo odravedimo s ovim test nset ako imamo jednu ovakvu instrukciju i sada je pitanje da li to možemo da izkoristimo ovde unutar našeg progrmskog segmenta o suštini možemo šta ćemo mi ovde odraditi ovaj del ćemo mi moći da zamenimo sa test nset odlock tako da će ovo ovde sada glasiti while test nset odlock ovde se piše kao funcija a inoče je to najobične instrukcije skip tri tačkice nema ovog relara rock jednog tru šta smo mi ovde odradili ako smo pročiteli staru vrednost promenjive lock koja je jednaka false a mi možemo da predvijemo na sledčiji red a šta smo odradili još u međuvremenu s ovim instrukcijem test nset u promenjivo lock smo upisali i na kraju ovde dole bi neko mogu da kaže opet ćemo mi sada iskoristimo neku takvu instrukciju ne ovde dole nema potrebe da koristite bilo koju specijalnu instrukciju a razlog jedan jedini proces radi nešto ako jedan jedini proces to radi nema synchronizacija ako bih se ovde stavili kao između veći manje nemoj to je to raditi znači da ne poznajte u ovšte program koji ste napisali to će da ti isti rezultat da ali ovde treba isti rezultat da se dobije što je moguće pree nema nepotrebnog kašnjenja procesa sećete se to je jedno stavki koja malo čas bila napomenu tako bitna stvar na ovom predmetu tu to je nema nepotrebnog zakašnjavanja procesa isto tako ovde nema potrebe za nepotrebnim zakašnjavanja al to morate napišiti ako tražiši se neko dasrešenje bi morate napišiti zašto ste to odradili ok, lak je jednako falsa to smo sad već bideli u ovom uavte rješenju i ovo ovde je prvi algoritm za ulaza u kritičnu sekciju koji ćemo mi videti na ovom predmetu to je algoritm koji se naziva test and set test and set algoritm videte vrlo jednostavano ima jednu while while test and set to block skip ne radi ništa, čeke uhatio i ostavio i zašto atomski i na kraju lak je jednako falsa vrlo jednostavano algoritm koji finorati šta radi je ponovno pročita je promenjivo lak upiši u tu promenjivo vrednostru ali sačuva i staro vrednost i ako je super ako je jedini proces prođi dalje ako neko već koristi i duži u skip proanulo to se odradi dobro sobina ovoga algoritma vrlo jednostavano i vrlo brzo možemo se napiši da se napri pod usnovu da postoje ovoj specijala instrukcija koja dnes na procesaru za sam predpostima da postoje takva instrukcija ali ovoj algoritm ima jednu lošu osobinu ako mislimu da ovo radim brzo aaaaaa ne radim brzo šta mi radimo u svakoj petlji svakom izvršavaju naše petlje čekanje na spilup na zaposlenom čekanju upiši vrednostu loku ako je log bio jednog tru vićemo kažemo log jednog tru log jednog tru vićemo opisivati stavnu u vrednost dobro nekoma možete kažem šta je prolo, što opisemo stavnu u vrednost e, sada treba da se svetite kako izgleda naš računerski sistem ja ću doprovam da nacrtam sada neku jednostavnu sličicu imamo cipju kor 1 kor 1 ću da stajem nije cipju kor 2 kaž jednog o, sada kaž memoria jednog kaž memoria drugog pa ona kaž memoria koja se nalazi kaž memoria zajednika šta se desi kad ovaj upiše vrednost tru, zamišimo da ovaj ovde želi da koristi kritičnu sekciju a da ovaj ovde koristi kritičnu sekciju ovaj ovde ne samo što će upisati vrednost u promenju u lok to je delje na promenju to će morati i u ovaj nivo kaž memoria da se upiše a verovatno i u ovom tuđu