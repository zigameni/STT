 Prvo nađemo šablon, ima dva polja, prvo polje string, drugo polje int, prvo polje ima vrednost barijer, drugo polje ima vrednost n. Čvirite, ovde nema znaka pitanja. Ako nema znaka pitanja, to znači da ja čekam konkretnu vrednost koja se nalazi u toj mojoj lokalnom promenju. Ako u toj mojoj lokalnom promenju je broj šest, ja čekam dok legoce je tačno šest, procesa ne pojavi na barijeri. Tačnu vrednost smo ovde specificirali, nema znaka pitanja. I barijera koji smo mi ovde napravili je ono tipa barijera koji smo mi videli pre, to je jednokrat na barijera. To je barijera koja može jednom da se iskoristi i postavi še ne može takva da se koristi. Kako se kori pokreće proces, pa kažemo eval. E sad, kod evala postoji moguistos možda da pokrenemo jednu ili više procedura. Mi ćemo koristiti jednu proceduru, znači za svaki od delova koji treba da pokrenemo koristitimo jedan eval. Sada sam reko procedura. A šta ako je funcija? A ako je funcija, mi onda eval možemo da iskoristimo u suštini i kao alt. Kada se završi izračunavanje te funcije, možemo da kažemo ovako eval, vrednost i to što budu povratne vrednosti to koji smo mi pustili u paralela i da se izvršava, će biti stavljeno. Kao da očekujemo, ono završila se nica svojim izvršavanjem, pa da chvatemo da je ta nit završena. Znači možete na taj način da realizujete to čekanje kraja. Kako možemo da realizujemo, ono što smo nekad imali kao ko-bigin, ko-bigin i jednako 1 to n, ovdje da se izvrši u paraleli, ekivalentan zapis bio, a fori jednako 1 i manje od n i plus plus eval. I šta smo mi odo odradili? Pa rekli smo da će u prostor torki, kad neko završi sa svojim izračunavanjem u neko polje a, sa nekim indexom i da ubaci vrednost tu koju je izračunan. Znači eval će da kaže, ovo ovde će se izvršiti u paraleli u nekom procesu ili nekoj niti trenutno neman poima, a povratna vrednost će ovde biti smeštena u našu promenjivu a. A ako samo želiti da pokrenete nit, da kažete f od i, ok, nema nikakvih problema, način nema nikakvih stvari koji treba da vraćemo, eval f od i. I na taj način smo mi pokrenuli to što treba da pokrenu. Ako bi smo mogli da simuliramo korišćenje kanala, koristići ovo ovde što imamo u nutar linde, out, kažemo kanal name kao string i onda stavimo to što hoćemo udubacimo. Kako radimo dohvatanje, pa isto kažemo taj kanal name i ovde ako hoćemo konkretnu vrednost, ako nam treba bilo koja vrednost, stajemo znak pitanja. I hajde da provom od urodimo jedan relativni primer. Provom da rešimo problem čitalaca i pisaca koristići biblioteku koja se zove linda. Ok. Sad nemoje vjeze da ćemo da naparimo readers prefered. Veratno ćemo napariti readers preferred delošt. Kada reader sme da čita? Znači sad hoćemo da naparimo isto ono rešenje kao nekad što smo imali sa sema formima. Možemo da kažemo... ...o čitovaca koji trebno... ...ko ćemo smestiti. Eko promenjimo... ...e n? Odježi, zato što sam ja preuzeo ovo iz prostoratorki. Ako je n i 1 konula, ja mogu da kaze... ...a kaze... ...read. Nije baš optimalna metoda, napravljismo readers preferred, ali samo želimo da vidimo kako bi smo ovo ovde mogli da realizujemo koristici biblioteku koja se zove Linda. Navrešmo ćete viditi kako možete realizovati ovo ovde malo lepše. Ajde, vidimo sad što treba da radimo... ...a čitanjem. Numer. Nije to smetno. A, opet smetno. Kako ti smo da možemo kaze? A, u sati ti... A, te ti? Numer. Ako bi izgledao kod za jedno kričitavce. Kako bi izgledao kod za jedno pista? Ajde, napravimo kod za jedno pista. Void. I d. Kada pisati? Da bili, ono što sam malo čas rekao, readers preferred, sološno. Ovde bila ideja samo da vidimo kako to može da se realizuje, da vidimo kako radaju ovo ovde ine naredva ili kako radi aut naredva. I da bi ovo moglo da... I neki jednit voj. I nek'o je nek'o. N. N. N. N. N. N. I treba da stajimo neki objekat u prostor torki da bi ovo moglo da funkcioniše. Da, da ovo ovde neće raditi ovako kako sam ja je napisao, dok legod nek'o ne inicijalizuje prostor torki. Inicijalizacija prostora torki, a u suštiri znači da se ovi početni objekti postave da budu deljeni. I da će ovaj ovde naš aut da dobije početnuveni. N. N. N. Od način a rešili problem čita oca i pisaca koristit ći readers prefer do rešenje i napravili smo i kompletnu inicijalizaciju. Nemojte zaboravite inicijalizaciju, bez toga vam rešenje u suštiri nisu validna. Možda radi i možda ne radi. Tek kada stavite kompletnu inicijalizaciju, to je početno stanje u prostor torki, a ovo ovde može da se smatra da je ispravno rešenje. Ovde smo videli in, videli smo aut i videli smo eval. Nismo videli kako se koriste in, pe ili read, pe ili... Šta još ima? Read.