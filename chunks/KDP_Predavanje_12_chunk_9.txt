 i srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom srbom sr sran lada ilisite davaWaitShop v slo оч MAN Kako prihvatamo aksep? Zakam, maločasno je kod onoga rapaca kod randevua, smo videli koristi se ključe na reća ni. Tamo se koristi. Preključe na reća aksep. Prifleti mu taj pozit. Zakražemo kako se izdjeva. Kako kljen tovo ovde pozivamo? Pozivio sotačka. Taj, taj, taj, taj, taj, taj, taj, taj, taj, taj, metoda. Mi je metoda, ali ona šta se u onom koncertu podara kao sveh umiljka, kao dne metoda. Taj, taj, taj, taj, taj, metoda. Ubeša ima šta od ova dva. Terverski proces deklarišuje spoj interface, tako sto da puni ovaj ovde svoj antrisekciji. Terverski proces ima prihvatanje poziva. Znači, serverska strana priima nešto, priima poruki. Tijenska strana poziva nekom tako stokovom. Kako izme da prim poruki. A ovde sada po toj, još je tako malo proširenje, šta svi možemo da privamo kao poruki. Imamo telekivno čekanje, uslovno čekanje i vremenesko ogranicevno čekanje. Podravmski jezik Ada kažem ima dosta tih nekih pićara koji se sanjimljivi za prograniranje, gde možemo da kažemo, na čemu čekamo da stajemo i uslov da ćemo još da čekamo, a možemo da kažemo još i čekamo u kopnu 10 sekundi. Pitanje sada, a šta ako nije da nije ispunjen, ili šta ako vniki mogu da bude ispunjeni, ali liš u sada, če imamo u službu čekanje, o, izgledam se čekam na jednom, ili čekam na drugom, ili čekam na dreć. Uprati ovaj sekund. Select, when, pa onda pijemo, select, when pa pijemo onda or, select, n-select, to je početak i kraj bloka, a onda u me stoni otvornu, zatvornu, uglasta zagranica, ovdje prosto je ključ zarebšt. Koji se naziva or. Da kraju, možemo da stajemo i ovnu podradi. U granu ako ništa nije ispunjeni. Imo jedno prime sada. Za kljen cervara. Dobre, vidite ćemo dva prime, ovo je pravi. Vidite ćemo posle i kako može da jedna arnavica. Kaj je dokvatamo na cenu, možemo da poveceamo cenu i kako to može da može da se razrešnja. Šta mi želimo ovde da napravimo? Šta želimo da napravimo? Serio se jednom aplikacijom. Use jednome toga. Kako bi smo to napravili kod nas koristići programski jezik, ada i u mogore treba u našem tasku. Prajmo za task a, srednog spostavnja ima task iz i imamo nakreju end a. Znači da se zna da to završamo taj task. One kada nazove, moraći da kaže a. Kada se zove kada se u mi da. Kod u checkpoint. Kada se ove deklarišimo ovdje interpis, kao kocih ovih klijen server, koji smo danas radili, moramo da deklarišimo interpis. Kako se ovde radi u toj entrepis? Kada dolazi task body, kada dolazi task body, kada dolazi task body, kada dolazi task body, kada dolazi task body, kada dolazi task body, kada dolazi task body, kada dolazi task body, na nekom mnesto ni možete da kažemo accept taj pozic, checkpoint, neki formuljer. Inticus Integer je al put U staradi ovo ovde naši cudo. U neku lokalu promenivamo stavi taj ulaz i kaže funcuju neku pozove, odradi neki posao i vranj. Ovo ovde je nješto što bi odvalalo serveru, Imo accept, primi, odradi posao vrati nazivno. Kako smo deklari saligore, entry stavili smo da se odradi posao. A šta će meni ovo kad je ovdje mogu da prevedam u osmogu? Dvije ću ja pisati programe. Ajde, videli smo gov, možda se prevodi. A videli smo, sad ono, oznih se neki koncepti koje zavise od konkretnu implementaciju. Ie, videli smo i jedan koncept za konkretnu implementaciju i za, da, pa, sad, to bi je oplodnjenski jez, kako je neko vreme čak zahtevo i poseban prevodilac. Znači nije dovoljno da se prevodi o nim standardnim java sa compilerom, da ti prevodi, njegovo je postao i nešto ko se zove, jer je m'a i compiler. Ako da akuzmete da pogledate, možda u onu vašem bim folderu. Da se nalazi java compilera koji imate, i da ka i stavljeno. E, nego nje je bilo, ja ovdje ga je oprih. A možda i danje može da se pronodži program koji se naziva pre compiler. A koji će da prevada, prepeva da, kaj zem, jednu takvu klasu u njenu proksijodiju. Ali sad da, s ovim novim verzijama jave koja neko napravio da može da radi odmak, ali ako imamo već prevedan u neku klasu, možemo da ponovno prevedemo tu klasu, da prilagodimo stvarnom iznašavom. Svasa mi svo je vrekao, prevedemo klasu, znači nije java file, nego klas file se, ako da se napravi proksijobjeka. Čisto da znate da postoji posljeno compiler, tu imati posljeno compiler zado, moskoski compiler, zado ako on to treba, možda dozmete najobični GCC compiler, GCC privodila cprevodi, programde i pisam. Ok, kako izgleda klijemska strana ovoj naše klijem server arhibi? Task B, task body B, ok, to koji ima neke proprise, sad dopisim. Task? Šta ta i task treba da radi? Obdena mi bitno, ovo je samo jednu vred, kajže A, imamo direktnu iminovanje, taj proces zovem, taj proces zove se A, znači moramo da radimo direktnu iminovanje na tu stranu, tačno moramo da kažem kog zove. A ovaj kad je reko A-Cet ili reko da primemo procesa B, no jok, nema toga, imamo imbirektno iminovanje na klijenskoj, na server'skoj strani, a imamo direktnu iminovanje procesa na klijenskoj strani. Server ima imbirektno iminovanje, klijent ima direktno. Če to? Ajde mi sada još jedan primjerčić, kako mozi izgleda jedna vrla jednostavna likaacija u prazom. Oda, imamo dve metode koje pružemo ostatni sveta, jedno metode je ko ko košta to, oda look at, da vidimo koliko košta ta... vidite da ovde promenjimo mogu da uvazne imi, u tečnu mi dobiti pomod, ne, mislim. Imo drugu metodu, a to je metoda koji kažem poveći cenu. Od metode poveći cenu moramo da znamo koji je proces koji je poveća ocenu, koji je postavio tu postavio cenu. Kad se pravi licitatije, moramo da znamo koji je povednik. Licitatije traje neko vremi sada prema, namo koji je povednik, koja je bila poslednja cenu. Pa radimo metoda, sad imamo opotje jedno veliki case, da možemo ovako napraviti, ali možemo, da li ovo dobro išenje pa vidite. Accept, raise bid i onda napisamo ko traži, za koliko se poveća. To to radi, znažujem, last, didder je jedna prom, ok, a šta je tekuća cena, tekuća cena, tekuća cena plus za koliko je, ovdje je tip, i ovdje je tip, petrol je, how about bidder id, koja godno da je to tip. Ovo ovdje je strogo, hipiziran programstvji jezik, za razlikod programstvji jezikom. Kaj mi to nešto dobaklimo? Pa su to nekako kastuje.