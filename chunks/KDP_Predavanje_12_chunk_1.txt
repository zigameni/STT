 i da se sve predavanje na predmetu koncentno preformiranje. O im danasnim časuima se ba biti triima različnjim svarima, učitak obarem predvijednje. Stvari je da vidim još jedan jezik, kog se nije svi i se svarimo koristi i nebalo da predstavlja pajenje onoga, što su mi radili do sada odnosili na programski jezik TSP i njegu način na programiranja sve se već i verovatno su uspe li to je najobičnije. Krativno programiranje, ali i lambda programeranje, odmah, slu lambda izgleda poje u nekim programski jezicima ka je gala sve biti. E, ovog ovdje sada je da vidimo prvo tako programski jezik, posled da vidimo način da ka... A ovaj naš jezik ima podršt u staraca komunikacijelnim kanalima. Ono što su mi do sada radili na ovom predve. Radili smo sa komunikacijelnim kanalima. Nekom može da nam poslede porup, sada vidimo tu porup, da radimo neste. U tomu vidici. Tako komunikacija o programstiku synchrona i asim. A vidićemo kako izgleda to. Pa trebao odraditi ako zvalimo synchronu, pa trebao odraditi... Zatimo da jezik podržava i nešto što se nazvali lagane nit. Pa niti koji je nato manji kontekst, ali koje se veoma, veoma jednostavno bih... Počemo da vidimo kako to može da se realizuje pozodini, a ko se ovo ovde koristi, kako je napravljena alternativna komanda. Značu, se sečete programstav jeziko CSP. U tom programstvom jeziku smo videli da postoji nešto što se naziva alternativna. E, ovi koji smo svedali i pravili programstvih jeziku GO, pozirite, ali mi isto one materijale koji mi koristi. Za programstvih jezik CSP i otušli se i implementirali su to, ali tako da ne bude možda onako kompleksno kao što postoje. Sve moguće varijante CSP. Znači, nekompletan CSP koje neko zamislio, nego bukolno onu podvarijantu koju mi razmatram ovdje. I onda koji ćemo da vidimo, kako izgleda ta jezik, koji predpravlja neku vešavinu programstvog jezika C, koja je imperativni programstvih jezika, onda nečega što su odgovora fukanalom programiranju i posto stvari iz programstvog jezika C SP, kao što su komunikacijone kanali, odnosno način komunikacije i alternativna komanda koja postoje. Kako izgledaju kanali? Ove nas u cestini prevaspodno zanima, kako izgleda ovoj del u koji se odnosi na naše programiranje, konkurence od ovoj programiranje. Znači, ne zanima nas. Možda kako se prave dobre lepe funkcije, ovom ovdje jezik, videti, među ovdje nam je prevaspodno cilj, da vidimo kako se radi, ono što su mi do tada videli da možete se radi. Kako su upisto je nešto u komanda kanali i kako se nešto datle. Programstvih jezika C SP je jezik da moramo da krejeremo ekstnici koji jezika C SP i kanala. I gore imamo, ako kažemo C je jednako make, ovo ovdje make moglo da odgovara nečimo da se odgovara kucnu reću nju i onda u zagrdi stoje chen, to je naš kanal i kažemo da ćemo kroz taj kanal primati celo brojne veličenje. Ako ovako samo kažemo, taj naš kanal će biti synchroniz. Sistim, koji će biti prihvatnik kroz koji možemo da razmenjujemo samo poroki. To znači da će komunikacija biti obavljena po principu randevua. Ona išto šalje poroku se blockira dok lego do neko primu poroku se prevozime datu poroku. Ako želimo da napravimo masivnih prominačnog imigracija u kustini koji posao je cincan, kažemo C, gotačka, jednako make i onda kažemo, želimo da napravimo komačnog imigracija kanal u kojemo možemo da suvamo do 10 porok. U kustini, ovo ovdje nije napravimo tako da možemo da pošelimo beskonacu, ili da primu beskonacu. A nego je napravimo da može da radi sa konacnim brojem poruka u ti. Tako da dok legoce ne dosegne da maksimalna vrednost broja poruku koji malo ovo se ponaša kao asimtron. Tako da je potpuno asimtron. To i kumrikacija i kanal koji beskonacu, jer ovo opet neki reaoam programstije moramo da ogranićimo sve toh koji se navazi kako se u sadje porok kažemo kanal a manje minus i onda pošelimo poroku u taj kumrikacijski kanal. Kanal broj 1 možemo po neku poroku. Kanal 1 obatvimo poroku x. Čitamo poruku tako što kažemo x je jednako da upišimo vrednju to programstje kažemo x je jednako isto znak kao maloča samo što je sada sa druge strane minus je jednako i sada te druge strane se navazi a to znači mi iskom počinu kanala čitamo neku poruku i steštamo u našu programstju x kanala se čita upisavljeneštje. Kožemo da stajemo mi sada samo manje minus i naziv kanala u kustini pročetili smo poroku i nismo nijegde smedali. Dao da smo posvalili na null device. Stamo smo je dohvatili da smo nepotrebno dohvatimo poroku ali nemoj njegde za beležen u vrednju. I poredovi islanjimo još jednu metodu i podležimo da se vrlo od tlouz kada otvaraće komunikacer. A la nakon toknutka mi nemožemo vidići da i sto. U kanala stavda vidimo kako se praje fungcija a fungcija a kažemo je pod iksiji onda napišemo sva radita fungcija a i u bičinu fungciju pišemo kada sada vidićemo ovaj ovde jezik i pythona a nemoj tačka zapetu koja nam određuje da se nalazimo možda i da prelazimo u null device ali dobro, koja je zanimarili nekih u pišem. Šta smo rekli? Ako chodimo da napravimo običnu sinfronu fungcija i izvršamo u našem tohu kontrole a onda kažemo od iksiji odradimo nekih ali isprind fungcija koji želimo da pozovemo da odradimo neki posao kao reč. Kog onda razmakima funkcija sa njenim argumentima koji se nalaze, a nismo efektivno pokrenuli nit. Nismo pustili da se nit izvršava u nezavisnom tohu kontrole. Napravili smo novone. Trivijelno je pokrenuti neku nit. Imate fungciju kažete go function na nezavisnom tohu. Ako se ova fungcija završi ranije. Znači ako se erojntijski proces završi ranije, ova go rutina koji smo sad napisali se automatski prekivaj. To vam je kao one demon skinity kojima u programstvom je zavak da ako se završi main thread demon skinity sve pre odnosno main thread, nego ako prestanu da pozvoje ne demon skinity sve demon skinity se gasa. Taj osimamo ovom objez. U suštini nešto nalik na finali gram. Možemo da kažemo defer i onda se to ponaša ako u suštini pukne neki izuzetak da to mi možemo tu da uplatimo i da odredimo neki posao. Ako se ovo ovde izrši onda odradi to tu čudo što je navedano. Ako ih ima više onda se izršavaju po live of tip. Če ono odakle pukno izuzetak pa idemo prvi, pa na drugi pa na treći i tako dokve god. Oprimera za jedu go routine. Kako izgleda ovoj nas programčić isprobaćemo sada ovaj ovde programčić ako da ga u suštini iskopiram. Neću da prekucam ali možemo da probamo da imamo kako ovo ovde fungdio. Šta imamo? Package main. Sve ćemo ovde ubaciti u taj osvoni package main. Imoš da imamo importujemo, importujemo otvore na mala zagrada poznacimo navoda, navrodimo pakjetek koje želim da učitamo učitamo pakjet za format nešto što bi odbija