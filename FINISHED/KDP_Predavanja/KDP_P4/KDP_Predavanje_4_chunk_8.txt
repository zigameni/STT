 A, dobro, a dobro šta to kaže? Ako su to potpuno odvojene kritične sekcije, onda ja mogu ovo da nazovim mutex producer i signal mutex producer, a ovo drugo mutex consumer, već i signal mutex consumer. Stavili smo dva mutexa, znači nije samo da jemo 7 for a full i empty, nego ćemo imati mutex producer koja je postavlja na vrednost 1 i mutex consumer koja je postavlja na 1. Svako za svoju kritičnu sekciju, proizvođači na mutex P, a potrošači na mutex C, rade synchronizaciju. Čekaj, čekaj, čekaj, čekaj, ali nije rir jedina promenjiva koji oni koriste. Koji drugu koriste ako nije samo rir? Koriste buffer. Da je ono da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da se da to smo realizowali koristići uslovnu synchronizaciju, tek kada se oslobodi ta lokacija, a taj semafor se postavlja dalje tako da stvarno možemo da realizujemo ovoj red, ovako kako smo napisali, nemože se desiti da dva pristupaju istom redu, zato što smo to resili kroz uslovnu synchronizaciju i postavljenje početnih vrednosti na dojima ovde semaforima tako da je dovoljno da imamo samo ova dva miotexa za dva različita kritična regiona, za kritične sekcije, zašto su različite koristići pristupaju različitim promeljivama pristup do ovog buffer od rear i buffer od front smo obezbedili na drugi način da ne može da se desi do iste lokacije da se doće i mi smo u nove način napravili naše rješenje, zašto su ovde nazivam miotex-d i miotex-f, nemam pojma a ne miotex-p i miotex-c kao što sam ja napisao, deravatno iz historijskih razloga imamo takvo je nasiv i vidite, na ovom ovde vrlo jednostavnom primjeru, smo mi videli dve osnovne tehnike koje smo razrađivali nismo mogli da primenimo samo međusobno iskjučivanje da bi ovo radilo nego smo morali da napravimo uslu no synchronizaciju sa full yamti onda smo mogli da podignemo da to radi sa bufferom alo veće kapaciteta tako što smo o koliko ima mesta inicializuvali na vrednosten, ali nam je to radilo samo za jednog prizvođača i jednog potrošača morali smo da ubacimo dodatne regione, odnosno dodatnu synchronizaciju kroz ova dva miotexa da bi smo mogli da obezbedimo da svaku pristupa tim svojim delovima, tim svojim promenivama i na ove način smo mi razrešili buffer konačno kapaciteta, krenuli smo od primene tehnike koje se zove razpodiljenje li binadnih semafori ako pogledat ovo resenje mi nema o razpodiljenjih binadnih semafori, ovo ove full yamti su enernih semafori ovo ove moglo se kaževo razpodiljenjih semafori, alo to neko tehnika ne postoji tako da ovde ne koristimo razpodiljenje binadnih semafori, videlite naše resenje iz evoluiralo, krenuli smo od razpodiljenjih binadnih semafori pa smo rekli da zbog povijecanja konkurentnosti možete bude sumata da semafora n, to je dobro ali samo ako imamo dva prozvođača, pa smo onda ubacili prvo jedan diotex, pa smo rekli da samo jedan možemo da stajemo dva, kad su ovo dva disjumtna, uslovna region, kredekritične sekcije i onda smo to razrešili, i to je bio prvi synchronizacijoni problem dafra, sleći synchronizacijoni problem je nešto sa čim ste se vidite, takođe upostnali ovoste videli na predmetu operativnih sistemi to je problem dining philosophers koji se razlikuje u odnosu na ovaj problem koji smo imali maločas maločas smo imali problem gde imali maločas, da imali maločas, da imali maločas maločas smo imali problem gde imamo ili ova strana ili ona strana ali nismo imali mogućnost da se ove strane možda takmiči za isti resurs kot problema dining philosophers, mi imamo en filozofa koji su raspoređeni uprste znači svaki filozof ima levog i desnog suseda izmiđu koji se nalazi resurs koji da dva filozofa dele a reko sam da su ovde se te raspoređeni uprsten, kad budemo razmatali jedan malo služeni i synchronizacijoni problem koji se nazivaju dining philosophers problem znači problem filozofa koji piju, ne ovih koji jedu vidjet ćemo da to neće biti prsten, nego će biti proizvoljena graf, dinamički graf ovde ćemo imati statički prsten što ovde važi da filozof može da jedne samo ako njegovi neposredni susedi ne jedu filozof što radi u svom životnom ciklusu filozofira i jedne i tu treba da obezvedimo synchronizaciju da ne mogu dva suseda no filozofa da jedno da mogu susedi filozofi da filozofiraju do mile volje ako žele isto vremenu kako glasi ovoj naš problem, znači to smo rekli, razmišljaj doklati vidjuške odnosno traži dozvolu, to je neki ulazni protokol, koristi resurs, imamo izlazni protokol samo što ovo ovde nije više rešenje gde mi imamo da samo jedan može u nekom trenutku da radi kod ovog našeg carteža, gde imamo pet filozofa, znači ne mora dining filozofar za bude za pet, možete bude za više a što može da se desi, možete da se desi da filozof nula i filozof dva istovremeno jedno znači to nije zabranjeno, dozvoljeno je da dva filozofa jedu istovremeno, samo ne smiju da budu susedi možete biti više, ali ne mogu biti susedni filozofi koju jedu istovremeno na jednostavne rešenje za dining filozofar, smjubilo wait miotex i oslobodi migliuške signal miotex i sada ako vi smo uzeli da analiziramo ovo rešenje dali ovo ovde rešenje radi, pa neće se zablokirati nikad imaćemo da filozofiraju, neko traži dozvu, taj neko dobije dozvu jedne, neko vrati, taj neko vrati dozvu što si to tiče ovo rešenje radi da ćemo imati izglednivanje, poverovatnoći ako imamo fit for semi for si filozofi doće na red tako da, što se stanuvište izglednivanje tiče, način nema dereloka, nema izglednivanja ali nema još nešto, a to je, nema konkurentnosti ovako napisan o rešenje, ako bi ja samo stavio wait miotex i signal miotex a nema konkurentnost, ubilismo konkurentnost, dozvoljeno da maksimala jedan filozof nešto u nekom trenutku rati a prema onome, kako sam ja maločas nacrtao i opisao dozvoljeno da ne susedni filozofi jedu isto vremeno postojmo guznu, znači nula i da tadava filozofa na primir mogu isto vremeno da jedu to ovako napisano rešenje sa wait miotex, signal miotex, ne obezbeđuje i ovne pitanje, a kako razrešiti taj naš synchronizacijoni problem jedno rešenje koje bi mogu da napisem, abi bilo da filozofi traže viliuške, daj mi prvo levu viliušku a onda desnu viliušku, ako bi ja se to nacrtao kao jedan crteš šta bi smo imali? imamo to sto, imamo naše filozofe imamo resurse koje se tu navaze to su te viliuške ako bi se svaki filozof ukvati o prvo za svoju levu viliušku filozof treba da se hvata za viliuško, a ne viliuško za filozofa