 Načišnji će tako izgledati komunik. Tako da ćemo mi videti neka centralizovanja, decentralizovanja i neka ibridna rešenja kod nekih sifronza. A vidjet ćemo i koncentrativni monitora koji treba sve podanom Ovo što smo rekli da ćemo mi praviti, praviti ćemo komunikacivne kanale kroz koji ste obavljene svaćem. A kako će on izgledati, pozadini to nas ne zanima. Kako se to prave, oni zbierali. Režoma na telekomunikacijama, nas to ne zanima. Kao što, razli ne zanimo oni, kako kompronirani monitori mi tislim. Pa je tamo najparija stvar. Koji? Ta ideo nas nije izanima. Zanima nas nije zanima. I ovdje fojćemo da posadimo poruka. I želim da ta poruka odvijene. Imo ti potru se ti. Odakle treba. A kako se sama poruka transportu, kaj ideo nas ne izgleda? A isputako kad bude videli vežnu, možete ti nas neki del malo zanimet. Tamo kad budemo mali kako izgledaju potru. Slučeno ne napravimo da se poruka buffer u rekodnoj atu lokalno i nikad ne hodeno onu drugu pravno da se napravimo. Jer ko distribuirano od programiranja, za razlik od konkurenciju programiranja, može se desiti veći broj nekih problemu. To se obnosi do toh ko od konkurenciju programiranja. A kako smo promeljili neku promenju, vi pristupili smo baš to je promenju. Od distribuiranoj programiranja, posto jedna velika razlika. Ako jedan del aplikacije radi, ne znači da radi drugi del aplikacija. Ako rade neki procesi, ne znači da rade i svi ostali. Ugasi u greskom ta je racunat. Ugasi učitavu aplikacije. Ako neko dođe i ugasi je racunat na kome se izvršava naša konkurenc na aplikacija, ugasi je čitavu aplikacije. Od distribuiranoj systema. Ako neko ugasi jedan od programa na kome se pršava naša distribuirana, a ne ugasi u čitavu aplikacije. Požda aplikacije može da se oporavi i da nastavi dalje kojim radom. Požda niko ne ugasi ni jedan del naša aplikacije, ali zatvorio komunikacijne kanale. Zatvori komunikacijne kanale, pa nekod je podigni firewall na nekomu tih radnikaara i zabrani komunikaciju izmigrdatih stačna. A ne postoji mogušnit rutiranje savraće, čakaj je jednostavno neko se spolni kabel i su pograziti kabel izmigrdat. I nema više kao stačke koja može da sprovede poru, šalje i ono. Pašto vesiti? A gdje mi nećemo baš toliko razmatrati, a šta treba raditi da se oporavi? O toga, algoritme za opora prego ovogaća, šta se ti... A koji se ti mi bavi, koja je na masnosti li je? Koja se bavi sistemi motor i motorstv. I kod neće se bavi tukaj ljub. Kovo je jednostavne tehnike, šta se radi, da bi neko se dači, a koristićemo samo kaminili šestrke koplje, ako bude. Vada mi premo jednu abstrakciju, koji se se zvati... Pa je komunikačniji. Ivati poruke, neka druge strana će čititi. U komunika. A vidite ćemo da ćemo metode, da vam oblučavaju slanje i tri poruk, kod ne ili jasnika. A tako da, prećemo sada sa slanjem poruk. Šta ćemo mi ovdje? U to slanje poruka, imaćemo ono košalje poruka. Sendo. Imaćemo ono ko prima poruku, primavac, koje risive. No, neka programa, koja se navaze tu u našem sistemu, jedan se slati poruku i primati. Imaćemo ko to komunikačnivno kanala. Deki osobine. A te poruke će se čuvati u redostvedu kako su pristizavlja. Dakle da, dosta često se ovo simulira, ako hoćete da cestirate jednim redom, pifom redom čekaj. Znači imate q u jedan, u koj mošnjih se dovatno te poruk. Pađivati. A ono što imamo, je atomstvji pristup do tog našeg buffera. Paćemo i dohvatam u poruke iz buffera atomz. Ako je metoda blokirevacja, a nema poruka, mi ćemo se blokirati. Ako metoda slanja blokirevacja, mi ćemo se blokirati. Mi stavite se zavisiti od toga kako izgledaju ono metode, ali ono ste mi garantovanu da nemožno se desi da uvacimo pola poruke i da se dobiti. Uvacili, čitali poruku ili nismo uvacili. A greške, mi moramo odvijetirati. E, samo da se vratim ponovom. Znači da je ono tamo pifom. Redo se do pristizanja poruke cisu cilet pifom. Znači redo sled pristizanje. To isko kao je redo sled slanja. Deško pitan. Ako nam je jedan proces poslo poruku A po poruku B. A, mi ćemo u tom našem pošlostom samdočeku. Poruku A po poruku B i to će nam biti garantovan. Re poruke biti poredjane u redo sledu kako je ona pava. Ali ako imamo poruke koje nam pristizu od većeg broja drugih procesa gremam pojima kako će se oni međusovno jedan u odnosu na drugi serializovacite. U svom redo sledu će poruke biti smješteni u našem. Jer ovo ovde se više neštađe s jednog računara pa da znamo a, to je taj absolut. Ne, sada svako može da pošloste svoju poruku. Ako svako može da pošloste poruku poruke sa toga računara koji se realizovan je ali međusovno mogu da budu nekako isprepletane neče obstanemo predstavu o protoku jezavistu vremenu tih računara. Ovo je naši kanali će voditi računama u greškama ako treba da se traži a ponovno slanje i prijem poruka tu će se oni odraditi za mi. Što mi o tome ne moramo ovde zaboditi. A poruka koja bude usana će biti garantovanu istaka o pohledu je prihvaća. Znači nekoc je druga. A osi slojba da bude ispunit. Pozicjoniram tako da može da nam transportuje. Nekoc je kurista. Proto kondara ne I koji ćemo da vidimo sada kato varijan. Ivo smo rekti, imamo dve tačke ko moh da komuniciraju i to je to. Ivo imamo taj komunikacili kanal koji se to može. Taj komunikacili kanal a vi mošite smaterte kao da vam je poštavstvo samiće vaš mailbox. Šta imate? A imate mogućno da primete poruk od razlištih koji smo vam poslali. Imate mogućnost 3. A imate mogućnost da suvate te poruke u nekom trenutku da dođete da ih preozvom. Ajca, da imamo kako izgledaju ti načinu izgledaju i kako će izgledati svi ovih ovde naši varijanti. Nećemo proći baš absolutnog koja se moguće kombinacija ovih varijanti a je da čisto da izbričamo šta sve postoji u ovom našem distribuciju. Prvo, s prva stvar koji ću u miru zmatri je synchrona i asynchrona komunikacija. A synchrona i asynchrona komunikacija znači, da li onaj što šalje poruku se blockera ili ne? Prima poruku se blockera ili ne? Da je obavljete tu operaciju koji prefekte. Prima ćemo dve varijanti, jedno će biti stvar. Stacija, drivi će biti. Sve će stvar koji ću imati, da li imamo statičko ili dinamičko imetavanje procesu sve? Kako statičko ili dinamičko imet? Kako možemo da imamo jedno i drivi? A naprimer, imate piknu topologiju mreže i tada ću uznate kome treba da pošalje. Staljemu poštostu s ovim sanjučom broj 6. Uznamo gdje se to nara. Dinamičko imetavanje to ćemo moći da radimo uštiskemi dinamički. Kako ide zašavanje naših prograna možemo se se privnihati novi čvorovi patirko kse to tu. Da pravilismo, tačno se zna koškim komunicira. Nema novi čvorova u našim rešnih. U dinamičkoj, a možemo se desi da neko nov doče. Pojavimo se neki nov čvor ko mi možemo dinamički da dodalimo ipi, da go obacimo u listu sako je dođete. Protoj informacija može biti objeccioni u jednu stranu ili na drugu stranu. Tada, dali kada proces A i B komuniciraju mogu da koriste isti komuniciraj. Oko ide otački, ja dotački veko spajatno, pa onda jedni mogu i dokuji. Ali kad čitaju, onda da znaju da nečiti u koju poroku. Ili će morati da koriste 2. Če na kanale. U programom što mi ježi koja.