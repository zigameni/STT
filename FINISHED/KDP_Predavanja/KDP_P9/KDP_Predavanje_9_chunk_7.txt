 19. vamanata. 19 nije stepen broja dva, znači vićemo morati ovde da stajemo neku strukturu, koja neće imati podnji nad broj ovih čvorova, znači neki će imati, šta je 5, neki će imati 4 kao dubino. Znači morat ćemo da pređemo do primi, znači ovdje mogu nekako veliki. 5, 5, 1, 2, 3, 4, ok. Ova dva može jedan dobrati, ova dva može dobrati jedan, ova dva bi mogli spojti, koo će odraditi ovaj ovde jedan i sada pošta mi treba još jedan čvor, ja mogu ovde staviti tako još jedan dodat i čvor. Ove ste dobili dve vrednosti, ovde dve i ovde još jedno. Znalebiš, potpuno asimetrična konfiguracija. Ova ima dubino jedan do svog izboza, a ovvić imati dubino 3. Moguće i tako povezati je lanaete. Znači 19, pa sada vi smislite kako bi mogu da izgleda neki graf, u kojom bi smo to sve mogli da povežemo. Ja nisa mogu za 5, na primer da na crtama manji nizlo do ovoga, kako sam na crta ovaj. Znači na crta drugi razvečite manjčine, ali ovo ovde je jedan mogući način povezivanja ovoga što treba da radi obradu. Pogledam da urodim, da ovaj ovde čvor prebacim tu, a da tu jednu vrednost prebacimo ovdje. Mogu sam i tako da na crtam. I opet bi to bila neka valima konfiguracije koja je imala 1, 2, 3, 4 čvora koja radi obradu. Ovi 5 elementa koja tu imamo i dobili bi smo opet isti rezultac. Veratno istim kašnije. Samo druga će bi izgleda o taj nastarteš. Šta je o ta dva bolje? A ne znam šta je o ta dva bolje i šta je bršet o zavisi od trajanja obrade i komunikacijunih troškova koji bi smo imali za tu nasu obradu. Mošte da ispravavate, zato što to ovu nekad bude u tekstu zadatka, datava mi dozina, dato da je binda doiliternanostablo i jedan od koraka je da na crtate to čudo. Znači da na crtate kako izgleda taj graf koji treba da radi obradu, tačno toliko elementa koliko imate. A ne obite zaboraviti, po svakom u dovi kanala mi ne dobijemo samo taj 1 element. Taj element plus ls. Sašto ne svemo da prosadimo dve vrednosti, a onda nećemo moći da garantujemo. Sve te dve vrednosti koje nam atreća, svojte svojte svojte svojte. Svartirane. Ovu usvartiravanje se zasniva na predpostavci da su uloznili elementi koje nam pristižu. Već svartirani. Ako nisu svartirani, onda ništa od celom ovom svartirani. Šta smo rekli? Imovo veći broj čvorova i svaki čvor želimo da bude identitivno. Iel moraju da budu svi čvorovji ovdji identični? Poželjno. Kad pravite neku obradu u distribuiranom programiranju, poželjno je da svi čvorovji budu identični. Ali se ponekada desava da ti čvorovji koji rade obradu nisu identični. A to je najčešći snučaj na ovom ovde početnom nivou, da se nekako podaci primaju. I na ovom ovde završnom nivou, kada podaci, možda treba da se prilagode daljem čvoru koji treba da prilagoda dalje te čvoru. Ako je moguće, bilo bi supr, da nam svi čvorovji budu identični. Ali ako već ne može da se napravi, onda bi mogli da razmatramo, aha, dali je ulazni stepen ili izlazni stepen ukupan ulazni ili izlazni stepen, ovaj mrež je se malo razlikuje od čvorov i da se malo razlikuje. Znači, kažem, postoji mogućnosti i tako nešto, ne moraju svi da budu identični. Ali ako je moguće, bilo bi dobro da budu identični, jer onda možemo masovno da izprizvodimo ovakve čvorove i kažemo samo radite, obradžite to što treba da so bravi. I hajde da vidimo, kako izgleda svaki od tih čvorova, kako izgleda kod svakom motivu. Ja neću kucati, imate kod koji mošte viditi, kako sam ja to... Oddine, sad nema potrebe da kucam, sam mogu samo da izkomentarišam rešenje. Znači, da smo reklji, kako izgleda to naše rešenje, imamo jedan čvor i pišemo kod za samo ta jedan čvor, ne zanima nas dalje šta postoje ostatku sveta. Taj čvor će imati dve pristupne tačke. Ulaze i jednu pristupnu tačku kao izlas. Ovo ćemo zvati in-1, ovo ćemo zvati in-2, ovo ćemo zvati out. I to je ono što mi znamo da postoji. Mi ne znamo, kako se ovaj ovde čvor naš povezuje sa ostatkom sveta. Značim, to nevamo pojma, nit nas zanima. A to je posto, nekako radi povezivanje i u jeziku koji mi nećemo razmatrati ove godine, ali koji imate tamo materialima, taj koje povezuje se ovdje se nazivio Configuration Manager. Kaže, taj je povezan sa tim i tim da bi ovo ovde moglo sve da funcjališ. Ni ćemo raditi to ostatitko povezivanje, nećemo koristiti poseban jezik da opišemo kako izgleda ta naša topologija. Ni ćemo jezostavno te naše čvorove dobijati najvjerojatnije koristice našu metodu, a kako je povezano, taj koja nam je dao čvorove nekvo odje računa. Šta smo rekli da treba da radimo? Primi vrednost po jednom kanalu, primi vrednost po drugom. I šta onda radimo? Dokle god je i jedna i druga vrednost. Različita od EOS, EOS je End of Stream. A mi radimo u sljedeću posao. A provjerimo koja o te dve vrednosti je manja. A ako je manja in jedan, onda na out pošalimo vrednost v1 i preko istog to kanala, preko kog smo nešto primili, prihvatimo sledeću vrednost. Prihvatimo vrednost manju pošali, ne všalimo posle veću, nego titamo u narednu vrednost po tom istom kanalu. Jer se može desiti da su tak, portirana ova dva niza, da možda treba prvih deset da preuzimo po jednom kanalu, pa te kod da da pošalimo jednom vrednost po onom drugom. Ovo je sad neko spučeno sortiranje, u kojoj mi ne ulazimo, ne znamo kako su nastali tipodaci, koje su tipodaci koji damo dobro. Šta radimo kad nam ostane samo jedan tok? Samo jedan tok? Priproverimo, da li je v1 jednako eos, a ako je v1 jednako eos, e onda, kažemo, dok le god ima neček po v2, primi pošali, primi pošali, primi pošali. To radimo ako je v1, a različi to od eos, to znači da smo po v2 u pretvolnom koraku primili eos i onda samo šanji, šanji, šanji, šanji, šanji, dok le god može to da se pošali. U sluštini možda bi smo mogli da napisamo to i bez ovog ovdje ifa, da napisamo samo v1, v1 različi to od eos, send v1, receive v1. Bilo bi malo kompatni kod, ali ništa brže ne bi radilo nego ovdje ovdje kod. Je zabora biti na kraju kompletnog slanja i još da pošaljete ovdje ovdje signal eos. On kaže, sortiran, niz, završen niz. Ovo ovde eos, kaže da je završeno slanje te naše sekvente. Šta smo sad rekao, završeno slanje oveše sekvente? Pozna možemo posledan napravo, da sortiram i neku sekventu. Možda bi smo mogli ovdje da stajemo sad jednu vile, še jednu zagradicu ovde i onda nakon svega ovoga da stajemo još jednu vile tru, ovo ovde je slučaj bi smo imali sortiranje većeg broja niz. Ovo ako smo napravili sortiranje jednog visa. A tako da vi proverite šta treba ododoriti, da li sortirate jedan ili sortirate više tih element. Jel eos obavezamo poslednji element? Najčešće je jesta. Jel mora? Ovo ovde je samo jedan specijalni znak, koji nam kaže šta smo postali. Vi možete napraviti rešenje, gdje ćete naprvi poslati eos, a poslati neku vredu, z kog kaže imamo šeste elementa ili tako nešto. Znači maločas, ako se svećete u materialima sa predkonu časa, je bila pričica, kako dobijemo koliko ima elementa. U konkretnom stucinu nas baš briga koliko ima elementa, ona i što je radio povezivanje grafa i je vodi o tome racune. Nas baš briga. A u koliko bi nas bila briga, u koliko bi smo morali da vodimo racune o tome koje elementi nam izu, šta bi smo onda radili? Ako bi smo će morali da vodimo racune o tome koje elementi nam predkonu i o tome koji nam predkonuči.