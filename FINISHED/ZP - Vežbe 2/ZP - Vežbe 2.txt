 Dobro. Evo sad se snimate. E, stup. Ok. U principu, već ste na predavanjima prešli ove algoritme sa nekohto orijskoj aspektu. Zbog čega su algoritmi odobri odnosno loši, zbog čega su prevaziđeni i prosto ovaj neki skup algoritama kroz koje ćemo na početku proći, predstavio neke jako jednostavne algoritme na koji su nastijeli na samom početku i koji su dakle zbog manja koje svaki od ovih pojedinačnog algoritama ima, naravno, evoluirali u neke naradne. Tipno, dakle, algoritmi kroz koje ćemo danas proći, se machu mišne nekoriste kao takli, međutim imaju neke dobre osobine, zbog čega su i dalje gradivni element i nekih služenijih algoritama i takve služenije algoritme krećemo već od sledeće nedlje nastjeve. Dobro, danas ćemo mi prosto proći kroz zadatke. Gdenim i cilj da se neke praktične strane vidimo, dakle, kako izgleda konkretna primena o ovih nekih jednostavnih algoritama i osim, dakle, samih ovih nekih uvodnih ilustrativnih zadataka, tako ćemo proći i kroz nekoliko zadataka koji su rase rani je javnili na kolokvima i ispitima, te, dakle, videte šta vas to očekuje u naradnom periodu. Prvi zadatak prektorija, kratak preglede, najjednostavnih kriptografskih algoritama i prosto taj pregled ćemo videti kroz šiprovanje neke poruke, dakle, iste za svaki od ovih algoritama. Poruka glasi, napadamo u podne ako ne bude vetra, a videte ćemo, dakle, kako izgleda sam proces šiprovanje za slučaj cezerovog algoritma, monoalphabetskog algoritma, play-fair-algoritma, rail-fence i row-transposition-algoritma. Prvi algoritm koji ćemo videti je cezerova šifra i to je, dakle, najjednostavnih način šiprovanja. Kao što ste videli na predavanjima, dakle, na osnovu neku ključa koji nam je dat, treba da uspostavimo, dakle, ovak u neku preslikavanja, kao što možete videti, gde šta mi to zapravo preslikaovalo? Dakle, preslikaovalo neki alfabe, to odnosno neke karaktire koje ćemo koristiti za šifru u samoj poruci, tako kao elementi poruke, preslikaovalo u neki skup karakter, odnosno, jedan na jedan, dakle, preslikaovalo slova. I ovdje, kao što možete videti, ono što bilo dato u postavci zadatka, jedan i sljučevo koristimo slova engleskog alfabeta, tako da imamo odada cec ta slova. I, dakle, sve što treba da vidimo je u šta se ta slova preslikaovali. Mošto tamo bilo zadatno da je ključ neki broj 3, taj ključ zapravo prekstavlja pomeraj, odnosno, dakle, kako rotiramo sam alfabet za koliko pozicija. Pošto je taj pomeraj 3, kao što vaki pokazaju, dakle, rotiraćemo, odnosno šiftova ćemo za 3 neka mesta, te će tako se a preslikaovali u d, b će se preslikaovali u e, c, u f i tako dađ. Naravno, dakle, ovo pomeranje za 3 pozicije se radi krugno, tako da nam nijedan karakter zapravo ne ispadne, već kao što vidite, abc se nam pojavljuju na kraju, kao preslikaavanja za slova x, y i c. Dakle, izuzetno, jednostavno preslikaavanje koje se radi fiksno za svakoslovo sa odgovarjevićim pomerem. Ako paćemo sada da vidimo, kako to izgleda na ovom konkretnom primeru, dakle, šifrujemo poruku, napadamo u podne ako ne bude vetra, krećemo da šifrujemo svaki karakter pojedinačno. Što znači, slovo na, preslikavamo u slovo q, slovo a, preslikavamo u slovo d, p preslikavamo u slovo s i tako nastavljamo do samog kraja. Kada smo šifruvali celu poruku, vidite kako ta poruka izgleda na kraju. E sada, ove algoritam jasno je izuzetno jednostava, najjednostavnijek koji postoji, među u tim logično, dakle, nije baš mnogo povzdano spok toga što, vidite da imamo, dakle, samo ovo šiftovanje za neku poziciju, tako da imamo ukuplno 26 različitih mogućnosti. I napošto smo odredili pomere za jedan karakter, mi smo zapravo odredili pomere za sve karaktere, te time, dakle, nemo mnogo različitih variacitih. Samim tim Cezarov u šifru je jako lako provaliti i ona danes ovako prikazu i sljučim u nekih storijske svrke, da bi smo jatvo videli kako izgledao taj razvoj različiti kriptografskih algoritama. Dobro, sljeliči primjer je monoalphabetska šifra, malo u napređen Cezarov algoritam, gde je dakle ponovno imamo ova piranje jednog karaktera na neki drugi karakter, u opštom slučaju dakle na bilom koji karakter, međutim, sada dakle, tomo piranje ne određujemo samo na osnovu slučivo jedne vrednosti, a sve druge su već predodređene tim jednim isporom, već, celom apriranje dakle je neka permutacija svih mogućih karaktera, koji se mogu javiti u toj povci. Dakle, ukoliko se sečete, ako se nesećate, evo ga, posednik ključ za ovako šifrovanje nam je upravo celog kupna ova permutacija, odnosno, caja ovoj drugi red koji vidite, zato što je za svaku slovo ovde potrebno pojedinočno naglasiti, u koji drugi karakter se on to slovo dakle preslikava. Ako bi smo sada videli kako izgleda na konkretnom primjeru preslikavanje, ovo ponovno je jedan klasičan algoritam za mene, što znači da svaki karakter preslikavate direktorno u one koji odgovera tom karakteru u samom ključu. Znači m se preslikava u f, a se preslikava u q, p se preslikava u h, a se ponovno preslikava u q i tako idemo dalje do kraja same porke. Dakle, ono što ovde vidimo, jedan, aravno, imamo više opcija, nego što smo to imali malo prez, zato što svakom apriranje je zasebno, međete, mi je u potkonosti nezavisno, je o tako u odnosu na druga apriranja, zato što naravno kada određamo preslikavanje za svaki sledeći karakter, moramo imati u vidu i preslikavanje koje su se predhodno desilate. Tako ako u konkretnom ovom primjeru vidite da smo a preslikali u q, to će značiti da recimo b ne smijemo preslikati u q, već da sada imamo za jednu opciju manj. Zbog toga, dakle, imamo od 26 faktorijel različitih preslikavanja, a razlog je što moramo imati prosto i jedinstveno preslikavanje, da bi naravno desifrovanje kao reverzna operacija bilo mogući uvraditi na jedinstven način. Oke, međutim, ovaj algoritm, i ako dakle bolje cezorove šifre, kao što ste već videli na predavanjima, ponovno, je o tako nije naračito pouzan, čak je ako ima više opcija u odnosu na cezorove algoritm. Zbog toga što kao klasičan algoritm zamene gde prosto imete preslikavanje jedno karaktera, koji se uvek na identično način preslikava u neki drugi karakter, dakle, bilo koje a u ovaj poroci će uvek biti preslikano u q, bilo koje b će uvek biti preslikano u duplove. Dakle, bez obzirana poziciju i na bilo šta drugo, uvek se preslikava u isti karakter i samim tim je moguša nešto što se zove kryptoanaliza, odnosno analiza same poruke na osnovu frekvencije dakle pojedinačnih ponavljanja. I to ste već prošli na predavanjem, ali u kratko, dakle poznačeno je da u razvečetim jezicima prosto pojevljivanje pojedinačnih slova nije naravno identično, već da postoje slova koja su noga učestalija, ali ja pokutracimo a i tako dalje. Dakle, bez oje slova koja su manje, odnosno slova koja su manje učestala i onda naravno i ako sada u ovom preslikavenju, to nisu identične vrednosti, dakle vi ne vidite a, nego vidite q, ali se broj pojavljivanja to karaktera zadržava u potpunosti u šifrovanoj poroci. Te dakle, ukoliko imate neku veliku poruku, gde je zapravo moguće analizirati tu poruku kao nešto što je prostečno slučaj za dati alfabet, vi naravno možete izvršiti tako analizu i spok toga ovoj algoritm nije post. Idemo na sledeći algoritm za šifrovanje u zadatla. Dakle, kako je napređenjem monoalfabetki šifara, odnosno jedno od ovna predđenja, jeste i algoritm play fair, kod koja je zapravo ostavna ideja da se jedan karakter ne preslika uveku jedan identičan karakter već da zavisi zapravo i od drugih karaktera. Na kolje način se to postiš? Na početku formiramo nešto što predstavlja ključ šifrovanja, a on se formira na osmogu zadate vrednosti koji imamo na početku i to je ovo vrednost vetrobran i dodatno dakle, dakle što ćemo formirati nekak u matricu kao što vidite na ovom slajda. Matric je formira na zaengleski alfabet gde imamo 26 slova, međutim ovo matric je 5 x 5, tako da imamo 25 nekih polja. U svaku polja se upisuje po 1 karakter, dakle međusobno razvečiti karakteri, ideje je da mapiramo sva slova nekog alfabeta. Da je naravno pošto znamo da imamo 26 slova engleskog alfabeta, a 25 polja matric nekadva ćemo morati da mapiramo identičnu lokaciju. U zadatku je datu, je su to slova idiot, što jeste najčešći sluša izbog svoj sličosti. Način u formiranju sva ve matricu ćemo pridiskutovati nešto kasnije, dakle...
 znašto baš 5 x 5 i kako to može da se prilagodžava različitima autobetima, ali hajde prvo da vidimo na primero u kako izgleda uopšta je samo šiprovanje, odnosno kako izgleda formiranje za početak tog ključe. Dakle, ovo vrednost koja je zadatak u zadatku kao ključ, krenemo da ređemo u matricu i idemo karakter po karakter, znači v, pa e, pa t, pa r, pa o, b i nakon to da kada stignemo do sledećeg r, njega nećemo dodati utabel. Razlog za to je što prosto želimo da imamo jedinstveno pojavljivanje karakter, da bi smo mogli da smestimo sva slova je o tako, a ne, ako ponovimo sada neka slova, onda naravno nećemo oči da smestimo sva, a sa druge strane imaćemo viša mapiranja za isti karakter te, neće biti nedvosmisleno je o tako samo šiprovanje. Tako da identično slova koje se mogu pojaviti u ključu preskačemu i ređemo preostala, a i n. Nakon toga potrebne dododemo i preostala slova iz alfabeto, koja proste nisto figuri sala u ključu, poradžemo ih ovako i krenemo lekko redom, međutim, naravno, ponovno ne dodajemo ona slova koja već posloje u ovoj našoj tabeli, a pojavila su se u samom ključu. Te tako kao što vidite, već slova a i b, izbog toga nećemo i ponovno dodavati u našom tabelu, već imo redom dodavati c, d, f, g i tako dalje sve do kraju. Kao što vidite i jok smo mapirali u istu lokaciju, to je prosto po nekoj konvenciju. Nakon što smo formirali ovako tabelu, krećemo sada da šifre. E sada, pošto smo rekli da je razlika u nosom na mono-octobetspo šiprovanje i bilo, kako dakle, preslikavanje 1 na 1, i prosto što ne želimo da svaki karakter uvek šiprovamo, odnosno mapiramo u identičnu vrednost, već želimo da figuriše više nekih parametara na to mapiranje, da ima utica i ozako. Što znači u ovom konkretnom algoritmom, ićemo zapravo u mestu pojedinačnih slova, uzimati parove karaktera i njih zajednički šiprovati i na taj način praktično ove ove vrednosti utiču na rezultujići šiprovanje vrednosti za ta dva simbola. Dakle, nekojedinačne vrednosti, nego parove vrednosti. Što znači da mi našu šipru, moramo da podelimo ovako na slovove, kao što vidite, dakle na slovove, dva slova praktično, i da svaki takav slog zapravo šifrojmo pojedinačne. Imamo nekoliko pravila za šifrovanje pojedinačnih dvoslovnih slovova, i koje ćemo pravilo primenivati, zavisi od toga kako su međusobno postavljena ova dva karaktera. Jedno mogući njihov raspored je da se nalaze u istoj vrsti, kao što je situacija na ovom ovde primjerom, drugi je da se nalaze u istoj poloni, a treće je da prosto ne važi ni jedno od stadba i za svako od ovih situacija ćemo videti kako izgleda konkretno baš na ovom primjeru koji sada gleda. Prvi naš par karaktera su slova n i a, i kao što vidimo ova dva karaktera, odnosno slova pripadanju identičnoj vrsti. Na koji način se šifroju pa svaki karakter se zameni prvim sa njegove desne strani. Što znači u ovom slučaju da slovo n menjamo slovom c a slovo a menjamo slovom n. Naravno u situacijama kada prosto recimo bi smo želili da šifrojimo karakter koji se nalazi krajnje desno, kao što recimo situacije sa karakterom d. Mi bi smo ga menjali prvim desno, ali kao u posmatronu u kružnom bakeru, dakle to bi bio karakter b. Što znači u ovom konkretnom slučaju, mi smo n a mapirali na c n. Idemo dalje. Pa, kao što vidimo, ne naleze sa uviste vrsti, ne naleze sa uviste kooni. Uto nama je posebna situacija. Tima ćemo zameniti ove pojedinočne karaktere, pa ove nali ćemo posmatrati kao neki provoga onik, kde mi imamo ovo p i a koje se nalaze na jednoj diagonali, n pa nama trebaju karakteri na drugoj diagonali, što znači m i n. Kojim redosledam, pa svaki od ovih karaktera menjamo onim karakterom koji se nalazi u istoj vrsti, što znači p preslikavamo u m, a a preslikavamo u n. Znači p a smo zamenili sa m, n. Dobro. I tako dalje, dakle, ove među situacije su bile identične kao ova dva slučaja koja smo imali da sada. Prva situacija koja nam se razliku je i je slučaj, kada treba da mapiramo slova o i d. I kao što vidimo, oni se nalaze u istoj koloni. U tom slučaju svaki pojedinočni karakter, menjemo prvim koji se nalazi ispod. Što znači ispod o je sluvo d, a ispod d je sluvo k, te ćemo o d zameniti sa d k. Inače, ovo je recimo dober baš situacija da primetimo odnosno, utvrdimo malo ono što smo retri da svaki pojedinočni karakter se neće viša mapirati uveku identičnu brednosti, uvek pozicio nozavisji od onog poradnjega. Pa kao što možete vidjeti, recimo baš sluvo d, pojavljuje se i u ovej grupaciji o d, ali takođe i u slugu da. Kada pobljedamo u šifrovanoj poroci, dakle, d se tu preslikalo u b, a opet na drugom mestu preslikalo se u k. Tako da dakle viša onakva kriptoanaliza na identična način, nije moguće, izbog toga je ove play-faire algoritm da kažem da to neki način popravio. Dobro, nadamno do kraja bi smo ovako kriptovali poruku i vidite, ovo je naša finalna poroka. E sada, dakle, sa način formiranja ove matrice, zašto smo mi baš ovako napravili matric? Zašto smo odebrali da to bude 5x5? Kako biramo ključeve? Nešto vište ćemo pričati malo kasnije o tome, kada budemo prošli nekoliko primera, koji su se predhodno pojavljivali na kolokvim modusna ispitima, a koji su se ticili baš dobro gizbora ključeva. Međutim, možete je dobro da nam pomenemo ovo momentu, zašto je matrica baš ovakog oblika? Dakle, za konkretno ovaj alfobed, da imamo 26 karaktire, bolji izbor bio uzjeti matricu, koje je 5x5, nego matricu koje je 2x13 ili 13x2 sve jedno, prosto zbognjenog obliku, koji na ovakam način daje vam prakčno što više različiti mogućnosti za sve ove tri opcije različitog šicrolaj. U slučaju, recimo, da imete matricu koje ima dominantno više kolona u odnosu na groj vrsta ili obrnuto, naravno, dakle, da je nogoverovatnije upravo tako neko šifrovanje, omsno, favorizovano šifrovanje po vrsti ili po koloni, a na ove neki način je prosto to nešto uniformiju. Ok. Recika narada. Aki vretimo? Ako menjam recimo sluvo h, sluvo h sa ovim, treba promnimo sa poljem i jot. Je ono da treba da mamo konsistentni u izboru slova i jot, ili možemo ikik budem menjamu sa i neki pucajot. Odvečno pitanje, ovako. U slušteni što se diče samog šifrovanja, to nije mnogo značeno, dakle, koja godu od ova dva karaktera da izaberete, matrica koja se koristi za dešifrovanja, a vidat ćemo kastniji primar dešifrovanja, će biti postavljena na identična način. Pa gde god prosto budemo pronašli i i jot, mi ćemo to da detektuemo kao ovo polje i na isti način ćemo umaciti doga dešifrovanja. Sa druge strane što se tiče baš samog dešifrovanja, dali birete i i jot pretrežno zavisji od smisla. Ako možete da detektujete smislenu poruku dešifrovanjem, što isto problem sam po sebi, o to mi ćemo takođe nešto malo kasnije pričati, ali ako možete da detektujete poruku koje ima smisla, vi ćete naravno prirodno znati šta da menjete. Ako ne možete prosto upotreba mi sklučivo ovog algoritma, to nije posebno od znakčaja, za to što će subek napirati na identičnom polje. Ok, jer li vam dolaži nekih pitanja od? Dobro, idemo daj. Railfans šifra u 3 reda, sada pripada jednoj i drugoj grupi algoritma. Algoritme koje smo videli da sada predstavljuju algoritme za mene, što znači da smo mi tipično svaki karakter menjeli u opštem slučaju nekim drugim karakterom. Railfans pripada prosto algoritmima permutacije, što znači da mi menjamo reda, sada ne i sami njihove vrednosti. Zaporoku napadamo u podne, ako ne bude vetra, trebuš da formiramo testarostu struktur. I to ćemo da radimo tako što krenemo da redžemo ovo slovo. Vašo ako vidite, prvo stavimo slovo n u prvi red, pa zatim a u stedeći redali saman u slovo, pa zatim a u stedeći redali saman u pomerem, prosto kao da vam je to naradno slovo u istom redu, samo što nije u istom redu, nego u redu isti. Nakon toga ide p, takođe po redali u još jednom redu isti, pošto imamo ukuplno 3 reda, prakutčno to je to, ali tako nemak dede dole, međutim testarostu sekvenca formiramo, nemoj na gora, a, ide,
 značim ponovno idemo dole a i m i tako sve dok ne poradjamo sva slova naše porke. Kako ćemo poruku da šifrovamo? Pa krenemo da čitamo po redovima, redom ili tako prikupljamo ove vrednosti i poradjamo ih u šifrovano poruku. Dakle, samo ih čitamo po redovima i to je naše šifrovano porko. Saj jedne strane, dakle, naravno ovde onakva kryptoanaliza ne može da se primenio zbog toga što praktično frevencije se naravno zadržavaju i frekvencije se takođe baziraju ponovno identičnim karakterima i pošto oni nisu promenjeni, međutim njihovo redoslad je promenjen. Sad naravno ako znamo koji algoritm je korišće nije teško rekonstruisati, dakle, samog poraku. Dobro, ovaj jedan i jednostavan algoritm. Imamo još jedan algoritm iz klasse permutacija i to je row transpozition algoritm, dakle, ponovno ne radi nikak u zamenu, već iz tučivo permutu je pojedinočne karaktere. Imamo poruku, napadamo u podnaku, ako ne bude vetra, a ključ je ovo što možece da vidite. Sad ključ se sastoji od celombranih vrednosti koje kreću od jedanu padu neke maksimalne vrednosti i ta maksimalna vrednost nam upravo određu je koliko različiti kolona ćemo imati u nekoj reprezentaciji ove naše ponake. Što to znači u nekoj reprezentaciji? Pa mi ćemo sad krenuti da ređemo po ovu našu poruku po vrstama, dakle, krenemo redom i maksimalno smo određeni sa tim maksimalnim brojep koji postoji u ključu. Dakle, to je sed. Tako da, porađemo prvi sedom karakter i onda nastavimo drugi red i treći red i tako sve do kraja. Kao što vidite, dakle, to smo uradili. Ja sad, ovo je ovdje jasno i da smo mi tačno imali sedom puta četiri sloven. Izbog toga smo mogli da formiramo jednu kompletnu matricu. To međutim nije problem bilo kom od ovih algoritama. Ako ne možete da formirate do kraja matricu ili sve jedno u playferu, ako ne možete da formirate do kraja parove, uvek možete da uradite neki pedimgo, odnosno dodobunite poslednju vrstu ili poslednji par ili šta god, nekim u napred do dogovoranim vrednostima. To će ovdje za nas najčešće biti slovo x, međutim moguće da bude, recimo, i nekoliko poslednjih slova alpabeta. To je, dakle, nešto što je stvar do ogogora i što mora biti poznuto i na strani šiprovanja i na strani desiprovanja. Nakon što smo paređali ovakom matricu, sada, naravno, formiramo šiprovanu poruku, tako što dopetamo kolone u bašlom redostu dokak u stoju ključu. Dakle, uzimamo prvu kolonu PPOV, nakon toga drugu, AONF, i tako sve do kraja, dakle, poradjemo sve ove kolone i ove naša šiprovana poruka. Tavi imate nekih piteća. Ako ne, ja dajem reču Akiu da krene sva drugim zadatkom, gde ćemo se više u poznativnostom bliže sa PlayFer all the rhythma i bide ćemo neke zadate koji su bilet, reka, mora koji. Avala, Majo. Dobro, ako nema pitanja, sada čekac smo naši par sekundi. Sada ja ne vedim chat, nazvom, da li u chatu pišete pitanja, da li što se mene tiče, možete slabudno da se uključate u poziv. Dakle, nevjero om da će biti toliko uključivanja da nećemo razumeći čije pitanje i koje pitanje, tako da što se mene tiče, slabudno se uključete u poziv, ako imate pitanju bilo kom trenutku. Jer, kazom, chat ne mogu da vidim sada ovom trenutku. Nema nikoliko u chatu, ne pitanje ništo? Da, bra, bra, super. Dakle, idemo na drugi zadatak, kao što Maja najavila, dakle, u ovom zadatku ćemo malo da analiziramo, kako i zabrati dobar ključ u PlayFair algoritmo od nekih ponuđenih ključeva. Jovo je zadata koja je baš bio na jednom kolokvijom u predkodnih, predkodne dve godine, mih sam siguram tačno u koje. I zadatak je, reko, ovako. Upotreban PlayFair algoritma, šifrovati poruku veni vidi vici za šifrovanje i zabrati jedan od ponuđenih ključeva i onda imamo neka tri ponuđena ključa, to su na nas irriterati i sunce. I, naravno, potrebne bilo brazložiti izbor, a u napome na nas smo stavili da se koristi 26 slova engleske ABCD da se i otmapiraju jedno polje matrice. Pa, da li neko ima ideju od ova tri ključa koja, koji ključ izabrati kao najbolji? Šta će nam doprineti da najbolje formiramo da kažemo neki način, ono mačno? Dobro začto? Zato što imam najvići različitih slova. Tako je. Dakle, ako pogledamo sva, sva, sva, sva ove ključeve. I ako na prvi pogled ova iana nas i ovu irriterati imaju nekako više karaktera sami kod reči sunce. Ako pogledamo konkretna slova u tim ključevima, u tim rečima, vidimo da se neka slova često ponavljaju. Tako da bi smo formirali matrice za sva tri ključa, vidimo da prosto sunce ima najveći broj i različitih karaktera i samim tim najviše utiča na ovaj početak matrice, nakon čega ovo ostalo, ovoj ostatak matrice, ređemo alphabetski, pa poslednik nekoliko uvek slova će nam biti, da kažem, isto što manje imali ovih nekih umetanja na početak. Tako da sunce, kao reč sa najvećim brojom različitih karaktera, on nam ovde predstavlja najbolji ključ i nju smo izabrali prosto u danjem šifrovanju i onda šifrovanja, naravno, ide na isti način, kao što ste radili sa majona predkonom. Zadatku, dakle, podelim ovu rečenicu na slogove od po dva karaktera i onda dva po dva šifrojamo istim onim pravilima koja smo videli malopra. Dobro, je ovo ok, ili imate neku pitanju? U mjeroj do pitanja možete... Možete. Vevratite, možete vas predkodni slajd. Pa tu ste jo pitan, ja smo mesi segurni da je sunce najbolje šifra, naprimer, ukako neko izabera šifru koja ima slovo x, on će ovu matriću dostavda protrese. U koliku neko izabere neko slovo koje pred kraj matrice, da se nalazio ključu. Naprimer, x, on će dostavda šafle, da sve svata slova umiri. A kako znamo, je bolje od ova druga dva, počavam, o koji kriterio me... Mislim, ne razvunaj samo, možemo da tvrdimo da je sunce bolje od ova drugi dva šifra. Zato što smo, zato što smo praktično više različitih slova uzeli sa različitih elementata matrici i stavili ih na početak. A konkretno posljednje slovo, ja mislim da ovde bilo slovo s i ovde slovo s, sada ovde opereset t, naprimer t. Tako da to posljednje slovo koje smo izvukli nakon tog posljednjeh slova ovaj ostatak će biti isti. Naravno da smo imali neki ključko u sebi sadržo slovo x, on bi možda bio i bolji. Ali, ovo da ova tri konkretna ključa sunce nami najbolje, jer ima prosto taj najvećih broj različitih elementata, od kojih je poslednje... Stvari, poslednje ovde bilo u, što nami je još nekako bolje od slova s. Tako da samo poslednjih pet karaktera ostalo na svoje pozici gde i treba da ostane. Jasno, nebo samo koji je tačno kriterijom treba da kovecimo ovde. Mislim, ovako smo u rekli odokratimo, što to treba broje... Ne, a brogu ja da dodam isto. Znači, na ošto je Akirepo dobro je reklao. Naravno, ali u svakom slučaju to što vi pitate, da Fledna, dali je bolje izavreti neku vrednost koje je kasnija, što mi u svakom slučaju da to ovde kogretna nismo imali u primjelu. Međutim da jesno, opet nam je svakako takođe značen taj broj različitih slova, zato što praktično ostatak tabele koji dolazi nakon to ključa je uvek identičan, osim da klo onaj del koji smo mi izvadili praktično zahvaljajući ovom ključu. E sada, ako vi recimo izvojite jedan karakter ili manji broj karakter, time različit broj mogućih ovih poridaka koji dolaze nakon toga prosto nije dovoljno veliki i može se formirati takvata bela i uraditi brute force napad. Zato što je veći različit broj karaktera koji ste pojavljaju samom ključu, mi možemo na bolje način da formiramo zapravo u tabelu. Ok, ok, ali tačno, koji je tačno? Tako sam reklam, način, učin smo se sad reklam. I buklama se sad dorekla. Znači izvrljali bi smo onaj ključ koji ima najveći broj različiti karakter. Time sve te karakteri išču poli iz ovog ostatka. I tu smo da dole napravili noviji raspored. Slažan se da smo izvodele više karaktera, ali na primer, ako smo izvodele samo... Nečo je ima? Kada znečo? Kažem, u kog koji smo izvodele na primer prvih 5 slova i njih izmješali i zazbuke ostali ih 21 slova, odnosno 20, su sve neisti mestima. Je slazitena. Tako je, tako je, da. Pa to onda ne znači da ako smo imali ta ključ koji je dužina 5, da je on bolje od nekoj dužina 2, ako je tačno je dužina 2, na primer, u nekoj slova, da, na primer, u nekoj slova.
 Može se spaciti kao nekih jeugristički problemu, da je prosto nekako stoji jedno rešenje koje situuje svemo. Tako da, dakle, verovatno ne možemo napraviti jedno rešenje koje je u potkonosti najbolj. Dakle, mi diskutujemo sada ovde jednu konkretnu situatiju, ali i u tom primjeru prosto koji ste vi naveli, dakle, sa tim jednim slovom, recimo koje god jedno slovo da iščupamo, prosto ako iščupamo samo jedno slovo, iščupamo samo sada oboči, brom kombinacija, kako se može formirati tabela je dosta mala i da sada ima tato pođe nepravio algoritm pozdav. Ono što je najbolje, najbolji način kako se može izabrati je naravno da imamo neku ključ koji će u sebi imati dosta različitih karaktera i tako da oni budu sa različitih pozicija. Što je moguće, kasnije, to je takođe još bolje. Međutim, jako često, dakle, ovde ste, na primjer, dobeli sada prosto ismor od neka tri ključa, gde nije na vama da sastavite takav neki ključ. Dakle, ako bi bilo na vama da sastavite takav neki ključ, bi ste prostobirali neku vrednost koji je ima više različiti karaktera, a desi to karakteri koji su neki, kasnije u samo i tabeli. Dakle, kada bi ste to recimo radili za neku praktičnu situaciju. Ovde prosto ste imali neki izbor, po odnoslu na to je trebalo izabrati. Ali, dakle, ono što jeste tako, to što kaže, tako bi smo uzeli prvih par, onda naravno, ov tako tabela bi mogli da ostane i u potpunosti kista. Mjegu tjutim, to je, kako da kažem, edge case. A opet, ako bi smo uzeli jedan konkreta dakle karakter, dakle, god ga uzeli, mi prosto imamo janko mali broj različiti kombinacije koje možemo napraviti i ovakom tabelo, i onda opet, da je time nepravimo pouzdan algoritm. Tako da bi smo napravili što pouzdani algoritm, ključ bi trebalo da kombinuje obetestvani. Časno, hvala. Nema na te. Nista, dobra, hvala. Takle, kažemo, šiframo poruku na isti način i time dobijemo ovo neko rešenje. Dobro, idemo daj. Ako nema više pitanja, ali ima još nakon pitanja stvari. Nema, dobro. Bila čitanja na četu, ali ja mislim da smo sad odgoreli na to. Dobro, dobro. Kaža treći zadatak da se posmatra sadaći rilični play per algorita. Dakle, koji koristi matricu veličine 5 x 6, dakle, molima sa ovde. Ovde su stvari dve stvari bila vrlo kritične, ovaj takođe zadatak sa kolotom. Dakle, prvo, matrica 5 x 6, znači da matrica ima 5 vrsta i 6 kolona. Dakle, to je prva stvar, da se student izbunjivali, a druga stvar, gde su se student izbunjivali, jeste azbuka. Dakle, sovzirom da u napomenama videćemo pisalo koristi se clova azbuk, ja mi vas molimo da ipak azbuku kao na našaj prvo pismo koje smo učili, dakle, čer ilicu i azbuku naučiti. Dakle da ne budemo i situaciji da prijobilasku sale, jedino pitanje bude, molim vas napišite nam azbuku na tabli. Mislim, šala, naravno, kažem, istinit događe sa kolokvijuma, ali, to su bile najtaže dve stvari na ovom kolokvijuma, čisto da ponovimo, dakle, matrica 5 x 6 je 5 vrsta i 6 kolona, a ostatak, dakle, algoritma je više manjisti, tako da ostatak algoritma neću biti ni problemi ovde da razumit. Kažem, prikazati postupak dekriptovanja poruke, ove neke ovde poruke koristeći pljuč kolokvijum i kažemo, koristimo slova azbukje, a slovo za razdvajanje ponovljenih slova prilikom šiprovanja bilo je slovo h. Dakle, sobzirom da je Maja to već napomenulavo, ja ću sad da ponovim, da u slučaju da ne možemo da kada podelimo ovu, tak, ne ovu rečenicu odnosno nego naš plain text, kada podelimo na slogove, kada dobimo grupi od po dva slova. Dve situacije pljučne mogu da nam se dogode. Može da nam se desi da su neka dva slova u slogu jednaka i onda po samim onim pravilim algoritmam i ne bi smo znali kako da preslikamo ta dva ista slova koristeći samo onu neku matricu. Tako da je prvo pravilo tu kada konstruišemo samo poruku, kada podelimo na slogove, jeste da sleva na desno sve, svete grupacije slogove od po dva ista slova razdvojimo nekim slovom i kažemo u glavnom je to neko slovo x, ovde je ciri lično slovo h i dodatna stvar koja može da se desi, jest je da u takoj situaciji kada imamo neki plain text broj slova neparan pa posljednje slovo nam nekako ostane neupareno, njega dopunjujemo takođe jednim slovom da bi smo i njega mogli da preslikamo u neku drugu slovo koristeći onu matricu. Dakle moramo na kraju da imamo paran broj slovo u našem plain textu i da svi slogove budu takvi da su nam slova u slogu različat. Tako da ovde napome da da kaže da je slovor za razdvajanje ponavljanih slova prilikom šifrovanja bilo slovo h i dodatno ukoliko je taj plain text imao neparan broj slova posljednje slovo će takođe biti slovo h. Dobro, koristeći opet ovaj algoritam, konstruišajemo na osnovu ključa samu matricu u to smo videli kako se radi, videli ste deteljnih i napredavanjima svakako. Tako da opet ponovljanim onim pravilima mi nekako deshifrujamo ovo poruku. Stim da ovde s obzirom deshifrovanje uvekišlo u nekom određenom smeru koji je bio definisan. Dakle ako isto i vrsti idemo na desno, ako isto i koloni, ako isto i koloni dva slova idemo na dole. Dakle šifrujamo slova, onim slovima koji se nalaze jedno slovo ispod. I u slučaju, ovoj k trećeg slučaja šifrovali smo slova po ovom pravo ugaoniku sa druge diagonali z isto greda. Ode samo moramo doprimanimo neki obrnut postupak. Dakle koj do ovog konkretnog slučaja koji imamo ovdje odmah na početku slova, o i z se nalaze ni u istoj vrsti, ni u istoj koloni. Pa se nalaze ovom nekom pravo ugaoniku. Tu suštini neamo nikak u razliku prešifrovanju i desifrovanju, s obzirom da mi uvek idemo ili levo ili desno, uz avisnosti kako nam je pozicioniran ovaj pravo ugaonik. Jedino što je bitno, dakle da praktično i koji desifrovanja samo svako slovo iz tog pravo ugaonika, promenimo onim slovom koji se nalazi u temenu tog pravo ugaonika u istoj vrsti. Tako da slova o i z menjamo slovima v i e. Što se tiče ove dve druge situacije, takle u konkretnom primjelu slova m i e se nalaze u istoj koloni. S obzirom da smo ih šifrovali, tako što smo gledali prvo slovo ispod njih, mi ih desifrojamo naravno u nazad, tako što gledamo koje to prvo slovo iznad njih. Tako da slovo m ćemo da desifrujemo slovom o, a slovo e ćemo da desifrujemo slovom m i od m dobijemo o m. I na taj način rješimo prosto ceo zadatak naravno da su se neka dva slova nalazila istom istoj vrsti, s obzirom da smo ih šifrovali, tako što gledamo koje slovo pilo desnod njih, desifrovali bismo ih, tako što gledamo koje slovo je levo od njih. Tako je prosto je to o tome da vodite ratuna nije ništa teško algoritemi u suštini u potpunosti, isti sa tim izmenjanim pravedemo. Dobro, na kraju smo dobili sledaću poru. Kaža ovdje v, o, ma, lako i tako dalje, ovo reših od prilike možemo da razaznamo tu konkretnu rečenicu, odnosno poznavajući jezik, mi možemo da vidimo da ova poruka u suštini glasi veoma lako ovo reših, tako da ovo prvo slovo h možemo da predpostavimo da je dodato da bi ova dva slova o, koje su se varovatno nalazila jedno do drugog ovom slogu da bi ih razdvojilo, jer veoma lako h ovo reših ne znači u suštini ništa i to je ovo što je maja rekla da prosto u tim nekim situacijama kada dekriptujemo poruku, moramo da uključimo malo i to poznavanje samo gjezika i razumjevanje same poruke da bi smo neke stvari zaključili. Tako da ovo prvo slovo h je dodato da bi razdvojilo sigurno dva slova o oreginom poruci, a ovo poslednje slovo h je nastalo zbog čega, dali ima neku ideju? Ivo mi ja. Kada se razdvojilo ova prva dva o, on je bio nepar androji, da mora da se doda h da bi bio od dva karakteri. Ja, stv, slučaj da naša poruka glasila veoma lako ovo reši, što je takođe legitima poruka, tom slučaj bi morali da dodamo ovo slovo h na kraju da bi slovo i imalo svoj para u on slovu. Međutim i račenica veoma lako ovo reših je takođe legitima, tako da ove situacije i poznavanje mjezika ne možemo ni da zaključimo, da je slovo h dodato, jer je bilo potrebno kao dodatno slovo koje će ovo imađi svoj para u slovu ili je prosto poruka bila od uvek veoma lako ovo reših sa tim h na kraju, tako da u suštini, i ako je kolega tačno rekao mi ove izbog ovoj druge situacije, ne možemo da znamo, da li treba izbaciti poslini slovo h ili ne, ali u svakom slučaju, jer čenica nam je jasna, tako da veza obzira...
 da toh bilo tu ili ne znamo šta nam je nepodprilite posla. Drugo pitanje za vas jeste, da li smo kryptoanalizom mogli da desifrujamo ovu poruku? Dakle, da li smo mogli da uzmem ovu poruku i gledamo ovakvim nekom kryptoanalizom da dođemo do konačnog rešenja? Imali neku ideju? Dakle, rekli smo da je PlayFair algorita malo jači od monoalfagačkog algoritma, ali je i dalje podložan kryptoanalizi. Dakle, iako se sad konkretno jedno slovo može zameniti sa dva različita slova, jer u opstom slučine zavisi isključi od samog sebe, nego i u cvog para u slovu, opet može neka analiza jezi kada se napravi da se desifruja poruka. Da li smo mogli ovu konkretnu poruku kryptoanalizom da desifrujamo? Imali neku ideju? Pa, predpustavljam da nismo mogli budući da je prijelicno kratka. Tako je, tako je. To je odgord, dakle, poruka je dosta kratka i u opstom slučaju u tako kratkim porukama i u opstom slučaju u opstom slučaju u nekom jeziku ne mora da važi, tako da kryptoanalizom ne bi smo mogli tako lako do desifrujamo ovu poruku. Da, imali neku ideju? Sa prizvo moram se sletiti zadatak, znači samo mali dodatak da moguće kryptoanaliza i nače, znači za ovaj algoritm, plejter, je da je prosto na osmogu nekih učestelnih zajedničkih slova, znači slova koje se učestalo, javljaju jedna do drugih, što je, na primar, tipično, recimo, u engleskom jeziku za neke slovo. Međudom, dakle, baš ubratite pažno na ovo, pričali smo o tome nešto ranije na danasnjim času, da u suštini bilo kada možete da izvodite takve neke zakičke u nekom prosičnom slučaju, ako imate dovoljno materijale na ostavu koja je da biste to mogli da uraditi. Što znači imate neku poruku koja je dovoljne dužine da biste mogli da kažete da prosto značova nekih prosek i danasno u toga možete nešto da aproximirate. Edo, ja prije nego što pređamo na zadata 40, po što je 7 sati, ja prva da vas pitan, dali žalite pauzu ili žalite da nastavite u čas? Ja imam neko, neko željom. Dobro, da nastavimo imamo na četu. Pausa, delaj da je većina za pausa. Dobro. Dobro, nista, onda se vidimo za 15 minuta. Da, sam je jedno pitanje, ELSI gasila snimanje između dva časa ili... E, prošlo, bude sam daš lobez pauz, ali u principu možeš da bi... Možemo da, ne bi bilo 15 minuta. Dobro, vidimo se onda za 15 minuta. Dobro, nastavljamo čas. Znači, tijli smo do zadatka 4. Gde treba da vidimo, dakle, kako izgleda dekripsija u potrebom road transposition algorithm. O, dekripsija, odnosno sam postupak, da je šiprovanja nije ništa specijelno teželk, zato što kava i većina algoritma koje smo do sada radili, prosto radi se suprotnim koracimom odnosu na proces čifrovanja, zada je, djutim, iz neku grazlogova znatak koji se pojavio na nekom ispitu, nije baš najsrećnije urađeno pa ćemo zbog toga dakle, prodiskutovati nešto detađni ršen. Dakle, treba da ješa provati neku poruku koju vidite ovdje i kaža, ona je dobija na šiprovanjem transpozicijonim algoritkom sa ključom 3, 1, 4, 2. Transpozicija je primenja na 2 put. Dakle, mi se treba da uradimo reverzni postupak. Ako se zetete, kako smo radili proces čifrovanja? Dakle, proces čifrovanja smo radili, tako što smo ređali našu poruku i onda smo dohvatili po kolonama prema samom ključu. Kada radimo dekripsi, uradimo korake u nazat, tako da zapravo ređamo po kolonama, a onda dohvatamo povrstama, ili tako, dakle, to je reverzibilan proces. Što znači da sada, dakle, ovu poruku koji imamo ako šifrovanu 2 puta, treba redom da porađamo po kolonama 1, 2, 3, 4. Međutim, prvi korake je kako da odradimo, koliko ćemo karakter zapravo smestiti u tu kolon. Pa to ćemo uraditi tako što znamo, koliko u ukupnu ima karakter u samoj porucili, ako prebrojimo, dakle, vidimo da je to 20 karakter, i znamo da imamo 4 kolone. Podelimo je od tako 24 i vidimo da ćemo ukupnu imati 5 prsta, odnosno, porađaćemo 5 karakteru prvu kolonu. Nakon tobe dokvotimo stvedićih 5 karaktera, porađamo u drugu kolonu i tako do kraja. Kad smo formirali matricu, da je šifrovimo poruku čitajući poredovi. Znači dokvotimo prvi red, pa drugi red, pa treći i tako sve do kraja. Pošto znamo da smo ovdje ratili dve iteracije šifrovanja, to znači da ćemo ješi jedno morati da ponovimo ovaj postupek. Što znači ponovimo ćemo prvo porađati u prvu kolonu, pa u drugu kolonu, pa treću, pa četvrtu. Nakon toga pročitati po vrstak. Resultat koji dobljevo je dokvot šiset i nakraju još 3 slova x. Kao što reće malo preakji, dakle kad dobljemo ovaku poruku, ono što nakraju treba da vidimo je dalje i cela ta poruka, ono što je neki dakle kvalitativni ideo poruke ili je postojo neki padding. I u principu, dakle ako procesiramo ovu poruku i poznajući šta bi ona trebala da značila, tako vidimo da poslednja 3 slova x u neki višek i nihna ovakam način možemo odstraniti. Tako da poroka koji dobljemo je dec od šiset. Dalje je jasno kako izgleda deshifrovanje u potrebom ovog algoritma? Takle, postupak potpuno radite samo u nazav. Uvesto da ređete po vrstama, a datim dokvotate kolone, vi ređete po kolonama i dokvotate vrste na liku puta koliko je algoritm primenjivanu tokom šiprohnji. Ieli vam o neku pitanju od? Ako nemo o pitanje, idemo do na sljedeći dodatak. Sljedeći zadatak prekreda da jedan složen i enkrypcijno i algoritm i on glasi ovak. Užaljil za razmenom tajnik poruka, Anna i Bonjcu se dogovorili da poruke koje šaljuju redom enkrypciju u sledaćim ostavnim simetrašnim algoritm. Rail fans u 4 reda, play fair sa ključem atska, otom u rolo-transpozivšnom sa ključom 641253. Bojan je primio poruku sledaće sadržine, pa ide sadržite poruke, a pitanje je koju poruku je poslala at? Dakle, mi treba da deshifrujemo o ovu poruku upotrebom, dakle svih ovih algoritama, ako su nam poznati ključevi, zato što naravno, nakon što je Anna šiprovala poruku, bojan koje olegitim i koristnik treba tu poruku da deshifruje. Nakome na važi za svaki u dobih pojediračnih algoritama, dakle da se koristi 26 slova englaskog alfabeta, međutim kaži poruka je napisana na srpskom, doponski znak za play fair i rov-transpozivšnog algoritma je slovo x i uzeti da se slova i jatno piraju u jedno polje matricu player-algoritmu. Dobro, ako bi smo sad ne predstavili kako je išlo ovo kryptovanje, dakle vidimo da je playing text prvo obrađen rail fans algoritm, nakon toga play fair algoritmo i kao treći rov-transpozivšnog algoritmo. Što znači da, prilikom deshifrovanja, mi moramo da idemo u nazad, i da prvo sprovodimo deshifrovanje upotrebom rov-transpozivšnog algoritma, nakon toga deshifrovanje upotrebom play fair algoritma i kao treći korak deshifrovanje upotrebom rail fans algoritmo. U principu, deshifrovanje rov-transpozivšnog i play fair-as mo već videli go sada, pa ćemo samo ukratko proći kroz to. Dakle, zelo rov-transpozivšnog rekli smo, idemo, ređemo po kolonama i kao što vidite, ređemo je tako i HLL u prvu kolonu, ponovno dakle broji elementov po kolonama određujemo na ostom u dužine same poruke i ukupno broja kolonako. Imamo, ovde smo dobili, dakle da su to četiri karakter, odnosno četiri vrste, i kada smo poređali, dakle, prvu kolonu, pa drugu kolonu, treću i tako dalje, i da imamo povrstama poru. Kao što vidite, prvi red, KM, IB, CS i tako, pooređamo do kraju. Dakle, to je izlaz iz deshifrovanja rov-transpozivšnog algoritma. Slednji korak nam je tako da deshifrojamo baš taj izlaz iz rov-transpozivšnog, dakle, dolozimo na ulaz play fair algoritma i radimo deshifrovanje. Delimo je tako na slogove od po dva sloga, u koliko su u nekom slogu, u koliko je postojala, u koliko su postojala neka dva identično slola, dakle, ona su al dakle bila razdvajana i ksevima, to smo videli u samoj napomeni. Kako radimo deshifrovanje? Dakle, imamo ključ koji smo na početku poređali, ključe bio maska, poređa,
 Pnećemo prva četiri slova, poslednje peto nećemo zato što je identičan karakter A i nakon toga je ređemo ostatak samo golfabete i otmapiramo u stu lokaciju. Dešefrovanje upotreba u player algoritmo smo već radili, dakle, reverzno radim po porakje. Na osnovu toga, da li se slova nalaze u istoj vrsti, istoj koloni ili one treće stuče. I kao što vidite dakle, kada smo ove radili to dešefrovanje, ono što se mapiralo na polje koja je obupata slova i i ot, smo ostavili ovako kao i i ot, da bi smo kasnije to iskoristili, zato što imamo i one treći stefen nekoga algoritma, koji sad ne zna, da li je to i ot, dakle, na dekvata način. Ne vam ove poruku, gde ćemo na osnovu tekstualnog raspoznavenje, da treba neke smislene poruke znati koji smo mi to poruku dobili, pa smo ostavili da to budu ove opcije. Na kraju smo imali takođe x, sad pošto znamo da je poruka bila na srpskom, onda za ovo x se znamo da je to bilo dopunno, odnosno da nije bio, dakle, legitim i element same poruke. Pa smo ga uklonili i takav izlas dobodimo na ulas dekriptovanja rail sense algoritma. Sada ko se sečete kode inkripsije, šta smo rekli? Rekli smo da ređemo ovako kao testericu, uz avisustu je toga od koliko broja o redova zapravo. Imamo, onda imamo četiri reda i da zatim kupimo slova povrstama. Sada je očigledno da kode dekriptije radimo suprst. Dakle, slova ređemo povrstama, a zatim ih kupimo po ovoj testerasnoj sekvenci. Međedim, kako ćemo da znamo gde ćemo i tačno postaviti, pa tako što ćemo prvo skicirati ovom režu sa ukuplim grom brojem karaktera, koliko ih ovde ima. Da, naravno, i jot predstavljamo kao jedan karakter, na to je suštini jedan karakter i ili jot. Dakle, predstavimo ovako i jednu brežu i na svaku ovu poziciju redom povrstama ređemo pojedinačne karaktere. Da preza početak Sb oa, pa zatim sledaj ću mrstu i tako dalje sve do samog kraja. I nakon to da pokupimo povoj sekvenci karakter, tu već, pošto je na srepskom umemal, tako da prepoznamo dalje i ili jot i dobijemo September i moj svećen rok. Želala sam nešto da dodam, a da. Ne sam prvo dalje u sve, imate pitanja za desiprovenje pojedinačnog algoritma, neki od ovih pojedinačnog algoritma. Pritom, veram da za prvo da nemate to, smo već prošli, ali možda evoč da evočno odmah zove treći. Jel imate neko pitanje? Ako ne, ja bi samo zamolila akje da se vratimo na početak, na onu šemu, zapravo, no, to tu do. Znači svak je dovih algoritama, jest je jednostavan sam posedit. Međutim, ako se primenjuju i takle nekako kombinovan ovi algoritmi, onda, na primjer, prilikom desiprovanja, dakle, inače, prilikom desiprovanja nekih od ovih algoritama, a ako nekako nije legitimi koristnik, dakle, odnosno neko koja zaista treba ododobije tu poruku, što u ovom slučaju bio bojen, dakle, ako neku drugi presretna tu poruku i sad ona je kryptovan, nekim od ovih jednostavnih algoritama upotrebom neko ključ. Dakle, ono što će taj da radi, je da popušava sa ovim različitim algoritima i da sprovoda i različit tip napada i analiza, o koji prosto je prosto poznati za ove različite algoritme, prema tom, ekom tipu ti algoritmi pripadajno. Mjiditim, kad se sprovede, dakle, takva neka analiza i proces desiprovanja za neki usvojeni algoritam i usvojeni ključ, ono što dobijete na izlazu je ili desiprovana poruka, ili, u koliko ste promašili nešto od toga, dakle, algoritam ili ključ, dobijete zapravo poruku koja je sada ponov ošiprovana, je o tako, dakle, ono što nije desiprovan, o znači ponov o šiprovana. E sada, kako ćete vi u osešteni da znate, da li ste ispravnodesnjefravole poruku ili ne, po, oslonićete se na to da je u pitanju neki plain text bio, koji je prosto čitljiv, razumljiv i vi kada isprocesirate tako poruku, dakle, jednostavno proverite o to našto što vi razumete ili ne, ili imate neki software koji može da razume ili ne. Mjiditim, u ovako je nekoj situaciji, kada imate nekoliko algoritama primenjivanih, dakle, čak i više iteracija nekog algoritma, a vi ste odradili jednu iteraciju, vi ćete nakon desiprovanje te iteracije nekim algoritmom prosto dobiti opet neki tekst, koji nije razumljiv i dakle, se te strane naravno, zbog toga je svako tako u kombinovanje sigurnije, nego obična primena jednog algoritma, zato što prosto, time što ste dobeli kao izlas, vi uopšte ne znate, da li to jeste bio pravi algoritm, da li je to bio uspešan prvi korak prilikom desiprovanja ili ste prosto jednostavno omašili algoritm koji je pritom korišće. I nače, dakle, ova kombinacija sad ovdje obupvata i neke algoritme zamene i neke algoritme permutacija i algoritmi zamene i permutacija svakako predstavuju gradivne elemenci složenih algoritama ingripsije, a o prvom algoritmu koji je desil algoritm, dakle, već ćemo pričati našto sledacija nete. Ok, da li imamo nekih pitanja i još jednom, bezeno za ovaj zadatak? I nam ja. Moš da ponavite, u neku trunutku ste obrisali poseň je X za porukje, po svojom kako ste znali da treba nepristati? U ovom kongrakom slučaju smo to znali, zato što piše u napomeni zadatka da je poruka napisana na Srpskom. Znači, nije na engleskom izbog toga, dakle, X prosto nije legitima znakva, smo ga koristili isključivo kao delimiter, znači, isključivo kao nešto što se koristi za razdvajnji simbolas po ktoga smo to znali. Kada ne bi smo imali tako preznanje, onda ne bi smo obovesno smeli da oradimo tako učin. Eva, žifala. Nema problema. Ima mi jedno pitanje, zašto smo koristili engleski alfabeto, onda ako je... Pa, tako je, užakali zadatak. Tako je bilo pa poznati, dakle, tako nije. Da, u principu, zbog mapiranja ola playfera i to, ali, dakle, tako je bilo postavka nije to ništo što je bilo nekako neopot. Dobro, još neko pitanje? Ok, ako neamo, onda prelazimo nas sledeći zadatak. Dobro, hvala, Maja, braćam se ja. Da, kaže sledeći zadatak, prelazimo na nov algoritm, ako je nismo videli ovdje na vežbama, ali ste sve svakako radiili na predavanjima, tako da ipak smatramo da nešto znate ovom algoritmo, al ponovicemo ključne stvari. U pitanju je heal algoritm koji kaže, upotrebom heal algoritma šiprovati poruku security, koristit ći ključ heal. Poruka se sastoji isključivo od slova engleskog alfabeta. Dobro, videli smo na predavanjima da se kod heal ovog algoritma prvo svi karakteri kodiraju nekim numeričkim vrednostima. Naprimer za engleski alfabet to je najčešće od 0 do 25 kodiramo sve sva slova engleskog alfabeta redom, tako da nam je a kodirano 0, b jedinicoma, slovo c 25 i onda nekako na neki način kodiranjem tih slova mi matematički ih preslikavamo u neka druga slova, koristići množenje matrica i neku modularnu aritmetiku. Ono što radimo je se da ključ koji dobijamo predstavljamo jednom kvadratnom matricom, pa je primer te kvadratne matrice za slučaj 2 x 2 dat ovde, dakle, poredžamo slova i samo ključa samo i matrici, naravno kodirani u numeričkim vrednostima i onda se šiprova na poruka, odnosno, taj deo šifrovane poruki, takođe predstavljen matricom dobija, tako što neki deo plain texta matrično pomnožimo sa ključem i sve pošto sve kodiramo na veličini od 0 do 25, na kraju podelimo sa 26 i nađemo taj ostatak krideljenju, dakle, u svakom trenutku radimo tu aritmetiku po modulu sa 26 i dobijamo nekoliko ponovog kodiranih slova cypertexta. Dakle, u opstem slučaj ubira se m sukcesivnih karaktera plain texta, to zavisi od veličine samo ključa, odnosno, same matrice ključa i rešava sistem i jednačina, koji je ovdo dobijenu množenjem tih matrica. Naravno, koliko ćete ovih vrednosti plain texta, odnosno, cypertexta, na kraju dobiju zavisi isključio od veličine ključa, tako da te matrice mogu da se pomnože. Dakle, s obzirom da matrice mogu da se pomnože, ako nam je druga brojka u prvoj matrici, istak, kao na prva brojka u drugoj matrici, to znači da u slučaj matrice 2 x 2, mi moramo da imamo matricu 1 x 2 za plain texta, odnosno, 2 elementa plain texta uzimamo ovom slučaju. Dakle, opet, poruhu, kako od playfaira podelimo na slogovi od 2 karaktera i 2 x 2 karaktera nekako šifrovano. Da je matrica za ključ bilo veličina 3 x 3, onda bi smo uzimali 3 x 3 karaktera i umnožili ove stvari i dobijali 3 slova iz cypertexti na taj način, del po del po ruk je šifrovali dok ne dođemo do kraju. Naravno, na kraju sva slova su nam predstavljena numeričkim vrednostima, radimo neku invernizman operacij,
 vratimo u slova i to nam je konkretan cypertext. Za M1 ko'o 2 kažemo, kada pomnožimo matrice dobijamo sledaču situaciju, dakle da se prosto karakteri C1 i C2 dobijaju na sledeći način. Sad meni ovdje nešto iskočilo, da li jamo neko pitanju četvije, opet sad ne vidim čet. Dobro, čekla nama nama pitanja, slabudno su uključite u razgora koji imate pitanje. Da, dakle, ja bih vas isto zamolila. Znači, slabudno sva pitanja koja pišete u četu, slobudno postavite. Dakle, zato je nama tako mnogo jednostavnije, nego da otvorimo četi, ne vidimo u svakom trutku poru, koja je se drugi strane da prosto se ne prekida, da priča. Tako slobudno, dakle, u bilo kom trutku postavite, jednostavnije i nama, a i vić je to odmah dobijete. A i znači, vama kada budete gledali ove vežbe posle naknano i svakog u studentima koji nisu trenutno prisutni, da prosto čuju to pitanje, dakle, uživo. U sluči da mi zaborimo da ga pročitamo i štjet, samo odgovorimo, naprim. na pitanje, tako da uvek bolje uživo vršiti tu diskusiju. Dobro, al ako nema pitanja, idemo na konkretom zadate. Ivo je biten. Resite. Dao li matric, tako mora da bude 1 x m. 1 x m mora da bude kvadratno. Kvadratno, da. Da. Dobro. Idemo daje. Dakle, šip, frajmo plain text security, ključem hill. Dakle, rekli smo po redovima, bi smo te, ta slova i samog ključa poriđali i, naravno, kodirali ih, brojevima, kako smo se već odlučili, u svakom slučiu za alfa, beto u glanom to od 0 do 25. Dakle, nađemo slova h, pitanje o 7, nađemo i u pitanju 8, i 2 slova l, u pitanju su brojevi 11, 11. Dobro. Veličina matrica nam je očigledno 2, dakle, kvadratna matrica mora da bude. I to znači da šifremo 2 x 2 karaktera ovog plain texta. Dakle, šifremo prvo karaktere s i e. Nađemo njihove reprezentacije u ovim brojevima, to su 18,4, i postavimo onej sistem i jednačina. Naravno, to ne morate napomjet da učite u pitanju prosto kvadratno matrično množenje, tako da možete to i od atre da izvedete. Dakle, ako se nesećate, imamo ovde neko p1 i p2 i ovde ovu konkretnu ključ matricu. Množimo, ili tako, ovo sa ovim i ovo sa ovim. I prosto dobijemo na taj način ovaj nekim rezultat. Dobro. Ono što dobijemo kao rezultat je su opet neke brojke sve. Sve vreme radimo modularnu ritmetiku sa modulom po 26, dobijemo 14 u cvjesticu i to preslikavamo na slova o i g. I do i tako radimo za svaka dvapa para ovih slova u plain textu i dobijemo neki cypertekst. Ono što je, o to što sad sve detaljno videli na predavanjima, tako da smo malo i ubrzali, ali ono što ovim zadatkom želimo da pokažemo, jeste deshiprovanje konkretne poruvke. Dakle, sad imamo naprimer taj cypertekst, da jo već znamo šta bi treba da bude izlaz ovom deshiprovanja. Mi treba da deshiprovamo ovu poruku opet korišenjem hill algoritma. Pa sad deshiprovanje poruk je se radi opet po ovoj matematici na inverzan način, tako što koristimo inverznu matricu od konkretnog ključa. Tako da sama matricu p semo dobijeti tako što množimo c sa k na minus prvi po modulo 26 i dokaz da je to stvarno tako jeste, što sadat ovo c koje znamo da smo dobili kao p puta k možemo da zamenim ovde, ka puta k na minus prvi daje jediničnu matricu i p puta jedinična matrica daje konkretno p, tako da ime ovaj dokaz završen, dakle, ovo stvarno jeste postupak za vraćanje u određen plain text, o koji imamo poznat cajfer text i sam ključa. Ono što je problematika, jeste kako da nađemo inverznu matricu ovog ključa i dalje uveku občite možemo da je nađemo, to će biti problem koji ćemo videti na sledećem zadatku. U ovom zadatku, hajde mi da pokušamo da deshifrujemo ovu samu poruku. Dakle, po definici, inverzna matrica je proizvod količnika jedinice sa determinantom same matricu, odnosno determinanta matrice k na minus prvi puta nešto što se zove adjumgovana matrica matric k. Svarit medika se naravno radi po modulu sa 26, tako da sve što dobimo u bilo kom trenutku u koliku prevazilazi broj 25, treba da podilimo sa 26 i nađemo statak prideljen. Determinant u naravno matrice znate da nađete za matricu 2 puta 2 na jednostavno, da je u proizvodi po glavno- isporadnoj diagonali, po glavno- isporadnoj diagonali oduznemo proizvod koji smo dobili na sporadnoj diagonali i dobijemo minus 11. Minus 11 ne upada u obsek brojeva od 0 do 25, tako da tu radimo modul sa 26 i dobijemo broj 15. Dobro. Znači determinanta matrice k je 15. Ono što mi moramo da nađemo jeste inversan element tom broju 15 po modulu sa 26. Dakle, ovde ne možemo da radimo jednu 15-nu, pa da ti ime množim adjumgovana matricu, jer sve vreme moraju brojeke da budu obsegu 0 do 25 i moraju naravno da budu cijeli brojev. Dakle, da problem se svodi na nalaženje multiplicativno-inverznak broja broju 15 po modulu sa 26. Dakle, 15 na minus 1 po modulu sa 26 na mi ono što treba da rešimo. I viste sami ajom na prvom času naravno pričali o tome kako se nalazi multiplicativno-inverzan broj nekom drugom brojima, ali smo na neke tabelice sve ste to videli. I ovde ćemo da ponovimo da prvo što nam može da nam padne na pamet, jste da pešački nađemo rešenje. A da ponovimo šta je multiplicativno-inverzan broj ovoj 15 po modulu sa 26. Dakle, mi tražimo broj za koji važi da kada se taj neki broj x pomnoži sa 15-com, pa sve to po modulu sa 26 dobijemo jedinicu. Dakle, prosto oni su inversni, jer daju ovaj element kjeca. I prosto mi tražimo takav broj x za koji će ovaj izraz da vaši. I prvi način možete pešački naravno da pokušate u koliku su neki normali brojevi da nađete rešenje, pomnožimo 15 sa kjecom, ne dobijemo kjeca na kraju. Dakle ništa, pomnožimo 15 sa dvojkom, to je 30, po modulu sa 26 to je 4. 15 sa trojkom je 45, po modulu 26 je 19. 15 i tako dalje idete dok ne nađete konkretni broj koji kada se pomnoži sa 15-com, po modulu 26 da je kjeca. Dakle, prosto ideja je, davo, sada sam schvacio da sam ono prvu matrici pograšno nacivno, dakle matrice 1 puta 2, ne 2 puta 1. Dakle, da ono stvari izgleda, ovak, ona matrica P1, P2. A, dobra, ne, ne, vese. Svati, li ste svakako, ste prošli proz matematiku 1, pa znate to da ratite. U svakom slučaju ima pesečkim putem smo našli da je broj 7, prvi broj koji kada se pomnoži 15-com i nađe ostatak pideđenju z 26, da je jedinicu, tako da to jeste multiplikativno inverzan broj, broj 15 sa po modulu sa 26, što znači da nam je ona determinanta na minus prvi baš 7. Međuti, nekad ovoj pesečki put nije baš zgodan, pogotovo, okoliko radite zadatak na kolofriu i lispitu, pa sami treba to da množite, u nekom slučaju mogu veliki broj, ovdje da se nađu. Tako da drugi način koji opet nekad može da bude zgodan, nekad ne, da nađete ove inverzan broj, jeste prošljenim euklidovim algoritm. Dakle, euklidovim algoritm, videli smo da on služi tome da nađete najveći zajenečki delila za neka konkretna dva broja, ovdje možemo koristiti njega i njegovu da kažem neku inverznu verziu, koju u kombinaciji čine taj prošljen je euklidovim algoritm, da nađemo prosto inverzan broj, ono i 15 sa po modulu 26. Dakle, u opstom slučaju tražimo najveći zajenečki delila za 26-cu, koja nam predstavlja ono i modul, i 15 sa čin, inverzan element tražimo. I ono što ćemo i prediskutiti, na sledaćem zadatku jesta da ćete ovdje dobiti uvek dobiti rešenje 1, odnosno da je kjec najveći zajenečki delilac, jer ova dva broja će uvek biti uzajamno prosto u slučaju korišćenju govog algoritma, vidjet ćemo zašto to mora da bude tako. Dakle, svakako, ono što radite, idete ovim algoritmom dok ne dobijete taj ostatak 1, dakle prosto predstavite 26-cu kao proizvod nekoliko 15-ca i ostatka predeljenju, odnosno, podelite 26-ca 15, dobijete količnik i ostatak predeljenju, a onda uzmete tu 15-cu i ostatak predeljenju i onda njih delite. Dakle, 15-ca 11 je 1 i ostatak predeljenju 4.
 11,4 uzmemo, 11 podeljeno sa 4 je 2 i ostatak prideljenju nam je 3 i na kraju 4,3 uzmemo, 4 podeljeno sa 3 je 1 i ostatak prideljenju je 1 tako da time smo došli do kraja ovoj prvog dela algoritma. Sada se vrtimo u nazad i ovog kjeca želimo da predstavimo na kraju, tako da početku pomoću ove četvorka i trojke, ali na kraju pomoću 26 i 15 i c jer taj kjec nam je ključan, jer mi tražimo šta, pa da nam je s jedne strane znakvije jednakosti baš taj kjeca, s druge strane znakvije jednakosti da nam budu baš 15 i 26 i taj broj x koji će da se pojadi. Tako da kjeca predstavljamo na sljedeći način. Dakle 4 minus 1 umnožak ove trojke. Imojmo 4 minus 1 umnožak ove trojke i trojku i četvorku vidite kao ovo je označen element i koji predstavljaju statke pideđenju možemo na nekom trenutku da rastavimo i da predstavimo u nazad. Tako da krećemo redom. Hajde prvo sve trojke da predstavimo po ovom pomoću ovog izraza koji smo dobili ovte. Dakle trojku predstavimo kao 11 minus 2 puta umnožak te neke četvorke i onda o malo kad sredimo ovaj izraz dobijemo minus 1 puta 11 i plus 3 puta neka četvorka. Dada s trojkama smo završili, ostale smo nam četvorka i 11-ce kao problematni broj. Krećemo sa četvorkom. Četvorku predstavljamo kao 15 minus 1 puta 11. Evo je ovde. Ope credimo izrazi, dobijemo ovako nešto. Dobro, završili smo sa četvorkom, idemo na 11-cu. 11-cu predstavljamo kao 26 minus 1 puta 15 kao što vidimo ovde na početku smo tako nešto imali i dobijemo opet kad sredimo izraz nešto ovako. I sada ono što imamo jeste 1, da možemo da predstavimo kao minus 4 umnožka 26-ce i još dodato 7 umnožaka neke 15-ce. Kada i levoj desnu stranu podelimo sa 26 i nađemo statak predeljenju, odnosno i levoj desni stranu, i udarimo ovaj modul sa 26-acom. 1 mod 26 će osniti, naravno, 26. Bilo šta puta 26 mod 26 će biti nula, tako da će ovo da nam nestane, zato smo se i dovodili do ovog dela. I ono što će da nam ostane, jeste baš neki broj koji množi 15-cu po modulu sa 26 i to je ovom slučaju broj set. Dakle, dobili smo da je 7 puta 15 po modulu 26 jednako 1 i tako da je 7 baš ovoj broj x koji smo tražili, pa nam je determinanta matrice k na minus 1 baš broj 7. Na drugi način, ne pešačkim putom, njog ovom putom smo došli do rešenja ovog problema nalaska multiplicativno g inverzmanj proja. Hajde da zastanemo ovde da pitan da imate neku pitanje oko ovog postupka. Dobro, je vam jasn postupak. Čutak. Dobro, nema odgovora pa ću da pitan treće pitanje da li se jovo opšte čujem? To ga sad baš bilo. Oj, problemakšno. Dobro, nekome ovoj rovno jasno nekome nije, svakako provjezda ćete ovo sami, pa nas pite u koliko vam nije jasno, ako nećete sad. Ono što nam je ostale, jeste da rešimo zadatak odnosno da sad nađemo adjungovanu matricu. Adjungovana matrica je po definiciji ona transponovana matrica o njih nekih cofaktora. Ako se sečete, to je ono kad uzmom neki element pa prekrijemo za taj konkrétan element, želimo dozobimo cofaktor, prekrijemo kolonu tog elementu i vrstu tog elementu, od ostalih elementu nađemo determinantu i dodatno na sve neparne elemente, odnosno na sve elemente, či indexi u zbiru daju neparan broj kao što ove i nula plus 1 i ove 1 plus 0 i tako dalje dodajemo neki minus. Tako to je po definiciji adjungovanu matricu, a za matricu 2x2 što ćete vi u glavnom da bih se dobiće na kolokvijom, ma da ne mora da znači da nećete dobiti 3x3 čisto da sve odmog radim. Imamo neki brži postup ako nakručili ste na matematici 1, a to je da po glavnoj diagonali samo zamenimo elemente, 11 ide gore, 7 ide dole, a nasporadnoj diagonali na elementi samo dodamo minus. I to bi se stvarno dobilo da smo o nim pute mišli, jer prosto kada želim ova element dodredimo odnosno njegu, vko faktor prekrijemo ovo kolonu i ovu vrstvu i ostane nam 11-ica, za ova element bi ostala isto 11-ica, za ova element 8-ica i za ova element 7-ica. Naravno ovdje bi smo imali minuse zbog toga što u zbiru njihovi indexi daju neparan broj. Ađungova na matrice transponuva na matrica, te je neke matrice koj faktora, tako da prosto sve flipujemo po glavnoj diagonali, za to ova minus 8-ica otišla gore, ova minus 11-ica otišla dola, ali sve se to svede na ovo što sam reku. Po glavnoj diagonali samo zamenit elemente, a nasporadnoj dodate minus. Tu matricu kada smo dobili, naravno sve moramo opet da provućemo kroz ovim modul sa 26-icom, tako da ove minusi nesta nu, minus 8 pomodulu sa 26-18, minus 11 pomodulu sa 26-15, dobijemo ovako nešto, i onda konašno naša inverzna matrica je determinanta samo matrice kana minus prvi, to je 7-ica, puta ova matrice koja smo dobili, dobijemo neku veću matricu, tako je samo ovaj element, možemo se svim elementom matricu, i pomodulu sa 26 dobijemo ovako nešto. To nam je kana minus prvi, i sad oceopostupak je u suštini isti ponoj formuli gore koje smo imali, sam plaintext 2 po 2 karaktera dobijemo, tako što uzimamo 2 po 2 karaktera cyphertexta, množimo ga sa ovom inverzno matricom ključa, i 2 po 2 karaktera plaintexta dobijemo. Dobro, da limate neko pitanje sada što se tiče healalgorij? Dobro, koliko neva pitanja, sad ćemo malo da prokomentarišemo i ta ograničenja healalgoritma, odnosno zašto smo sigurni da će ovdje ovdje ovdje ova dva broja budu uzajamno prosta, samim tim da imamo uvek taj multiplikativno inverzan element. Kaže za šifrovanje neke poruke healalgoritmam na raspolaganju su ključevi vata, meda i brda. Za svaki, da se uvijemo, da se uvijemo, da se uvijemo, da se uvijemo, da se uvijemo, da se uvijemo, da se uvijemo u te plicevi vata, meda i brda. Za svaki od ključeva navisti, da li mogu ili ne mogu, da se u potrebio razložeti zašto? Pratpostaviti da se koriste slova anglosku alphabeta i da se slovo a kodira vrednošću nulo i naravno sva stala slova idu stavlrednu. Ovo je takođeg zadatak sa kolokvima. Pa ćemo ga malo prokomentarišati. Dakle, kada predstavimo ove ključeve na ovaj način, To jest predstavimo odnosno kodiramom elementi ovih ključeva brojkama dobijamo ova tri ključa, to jest ove tri matrice. Pa dalje neko znadak mi pro komentarišek za svaki od ovih ključeva, dalje može ili ne može da se upotrebi? Prvi ključ očin gledno ne može da se upotrebi, jer će drugo slovo u svakom paru da bude izbrisan o praktično. Dobro, ali dalje je u stvari u tome problematika? Mislim, kako mislite biće izbrisan? Pa biće pomoženo drugi karakter u šifrovanom tekstu će biti prvi karakter puta nula plus drugi karakter puta nula. I to je nula, ovo je svaki ključ, svako slovo će presvikativ nula. Tako i to nana je slovo a, ali i dalje mi možemo u sustini na taj način da koristimo prosto u opštom sluče ove ključ, tako da nam to ne predstavlja problem, mi ćemo imati gomilu ponavljanje neku a, ali to nam nije problem. Ovdje problem se desava u slučaju desifrovanja, dakle mi možemo da šifremo hilovi algoritmom sa bilo kojim ključem. Šta ćemo dobiti na izlazu to ne znamo, nekad je dobro, nekad nije dobro, kao ovom sluče imaćemo gomilu tih slova a. Ali kada desifruemo, mi moramo za ključeve da nađemo inverzno matrico, tako, fako pogledamo kako se nalazi inverzno matrica, videćemo da nam treba jedan kroz determinanta k puta adjungova na matrica. Adjungova na matricu ćemo uvek moći da nađemo, a ovo jedan kroz determinanta kada ne možemo baš uvek da nađemo, pa koji je prvi broj koji nam ne odgovara da bude determinanta od k. Ako imamo jedan kroz determinanta od k.
 Nula. Tako je. Tako je. Tako se ne možemo da delimo nulom, tako da ovaj ključ prvi, kao što vidite, njegodatriminanta je baš nula, dakle 1 puta nula, minus 19 puta nula je nula, tako da nećemo moći da deshifrujimo opštu tu poruku jer nećemo moći da podelimo nešto sa nulom. Sa druge strane takođe ne možemo uvek, kao što ste pričili sa majom na predhodnom času, predhodnom nezelje, da nađemo multiplikativno inverzan broj za sve brojeve po modulu sa 26. Odnosno ograničenja nam je takvo da ta dva broja koja su multiplikativno inverzna moraju da budu uzajamno prosta i uzajamno prosta sa konkretnim modulusem sa kojim radimo. Tako da u suštini, dakle baš iz tog razloga, 1 kroz determinanta k, odnosno determinanta k na minus prvi neće za sve vrednosti moći da nađe tu multiplikativno inverzno vrednost, pa samim tim nekada nećemo moći da nađemo k na minus prvi. Tako da moramo da vodimo računa da ta determinanta od k bude uzajamno prosta sa 26, da bi smo uopšte mogli da nađemo njenu inverznu vrednost. A zašto mora da bude uzajamno prosta? Uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, uzašto, u znači to sa 26. Dakle, kjec nikad kao statak prideljenju se tu neće naći. I sad malo nekom matematikom, to možete sami da zaključite, dolazimo do zaključka da sam uzajemno prosti brojevi sa 26. Mogu da generišu kjeca u nekim trenutku, odnosno možemo njima da nađemo tu multiplicativno, inverno vredno. Za 26 to su svi neparni brojevi, osim 13-25, 13 naravno deli takođe 26. Tako da ako pogledamo determinanta ovih ključeva, ove i prvi ključe, akli smo svakako zbugnula, ne možemo da koristimo, a takođe ni ove drugi ključ nebispo mogli da koristimo, zato što prosto njegola matrica je takva da moj determinanta 14. 14 puta x po modulu sa 26 nikad neće biti 1, tako da nikad ne bi neko mogu da deshifruje poruku koju je dobio šifrovanjem ovim ključe. Treća matrica nam daja determinant 1, što je skroz u redu, tako da za njega ćemo laku naći invernu matricu i neko koju primio poruku koja šifrova na ovim ključem ćemoći da je deshifruje, zato što će uspeti od ovog ključa da nađe njegovu invernu vredno. Može može pitanja. Ako je, ako tražimo na minus 1 zanimito, bih ono bio samo 1 opet pošto 1 mod 261, ne moramo da možemo dalje. Tako je, tako je, zna za kece to već, to je to, on je sam se bi invern. To je ok. Ali postoj, dakle u ovom nekom drugom slučaju ta invern zan element ne možemo da naći. Dobro, kaže ovdje pitanje, dali ključka 3 pruža dobru zaštitu, dali neko ima ideju? Tako, da je to što je determinanta kjec, mogli bi ste da pomisli, to kje to će tamo nekim kjecem da se množi, pa možda nećemo nišifrujati poruku, to nema veza. Dakle, mi svakako kada šifrujemo poruku, radimo sa konkretnim ključom. Tako da ovdje mogu razne neke vrednosti da budu koji će davati kjeca kao determinantu. To nije bitno, prosto na lakši način ćemo naći k na minus prvi. Dakle, kao što je neko već rekao, prosto determinantu na minus prvi ćemo odma naći, to je odma kjec. Tu ne moramo ništa da radimo, samo tražite, da se neko se neko se neko neće, tako da se inverzna matrica svoji nadjumovana matrica, u redu ali to opšte neome ta nikaku zaštita. Da li imate neko pitanja za ovaj zelatek? Dakle, još jednom prosto ključevi koji mogu uopšte da se koriste, da bi nešto moglo da se nešto desifruje sa druge strane, ja su ključevi či kako se neko se neko se neko se neko se neko se neko se neko zelatek, ja su ključevi či je determinanta takva da je taj broj uzajamno prost sa onim modulom, po kojem radimo sad za alfabe, to je 26, za neko drugo pismo to bi bilo neki drugi broj. Dobro, ako nemo pitanje idemo na sledesi zadate, pošto nije još mnogo vreme na ostalon. Dakle, sledesi zadate ki ponamo neko desifruvenje uputrebom vižnjerovog algoritma, i treba da desifrujemo sledeću poruku, dakle vidite poruku, a ono je šifruvene u vižnjerom i algoritmem sa auto-ki povjeljšanjem i korišćenjem ključa, odnosno ključa. Dobro, da bi smo radili šifruvenje i desifruvenje, pomoženo na arvno ova tabela, zato što znamo da tu da kljakoristimo više razvečetih presvekavanja u zavisnosti od istovremjeno pojedinačnog karaktera ključa i pojedinačnog karaktera poruke. Tako da u presveku odgovareviće polo neko je pretavlja karakter poruke i vrste, dakle koje je pretavlja karakter ključa, mi dobijemo neki element, odnosno neki karakter kojiščitamo i ubacimo ga u šifruvanij tekst. Sada jasno je da desifruvenje radimo da claim versno i prosto na osnovu vrednosti koju imamo za ključ i vrednosti koju imamo za šifruvanje tekst možemo da rekonstruišemo plain text. Bar za prvih nekoliko karaktera poruke, a to je dakle ova ideo koji se odnosi na ključ, što nam je već poznata u napred informacija koja je dat. Kako ćemo da odredimo prvo presvekavanje? Pa kao što reku, znači šta bi smo suštinski radili kod kryptovalj? Uzelibismo k iz samo ključa, i to je odgovaraoviće vrsta i traželibismo neku kolonu gde ćemo u presjegu zapravo dobiti prvi karakter naše šifruvanog teksta. Na osnovu onetobelniku, koji smo videli malo prija, koja je predstavlja različitama otkot mapiranja, odnosno različite alfabete, mi ćemo dobiti da to cije dobijemo u presjegu kolone za karakter s. Što znači da je prvi karakter naše plaintexta upravo slovo s. Tako bi smo mogli da nastavimo da deshimo prvo i naradih nekoliko karaktera svedu kraja ovog dela koji su odnosi na ključ ili kljuc. Međutim, ono što odmog treba da kli da prokomendarišimo, to je generalno upotrebati karaktera koja dobijemo u opiru plaintexta, zato što kao smo ste videli u samom postavci zadatka, kovo nije običen vižnjerov algoritm da koji je korišćen, već je korišćeno autokip ovešan. Kao što znate se predavanja, autokip ovešanj predstavlja na pređenje algoritma, tako što se, nakon što se potroši inicijalna vredno ključa koja je uzeta, na dalje ključ nastavlja karakterima iz plaintexta. Zašto se to radi? Pa zbog poznatog napada koji postoji analize samog šifrovanoj teksta, gde u koliko bi smo, šta bi smo, u suprotnom, radili bez topomjesanj, uzili bi smo dati ključ i multiplikovaliga o naliko puta, koliko je to potrebno, tako da imamo napiranje svakog karaktera iz plaintexta na određeni karakter ključ. Tako da bi smo morali da umnožimo praktično ključ o naliko puta do ukuplje dužine ili širine, zavisno kako to posmadrate, plaintext. Naravno nebi to morao biti neki cel obroj, odnosno nebi smo morali da uzvamo cel obren o ponavljenje to ključa, gde ću uzavisno ti je to koliko nakraj ostane, ali napad koji je tu karakterističan je zapravo, upravo pogađenje dužine te sekvence, odnosno, dužine inicijalnog ključa na oastovu identičnih mapiranja koja bi se mogla pojaviti u šifrovanom tekstu. Da bi se to izbedlo, dakle videli ste već na predavanjima neki primer na osnom koeg je prosto jasno kako se takav napad detektuje, tako gde prosto gde imate istu kombinaciju ključa i karaktera iz plaintexta, vi ćete dobiti isti karakter u šifrovanom tekstu. Ako se to ponavlja se nekom periodom, vi ćete moći da zapjučete ili dobar napravite neki uži izbor kolikada bi mogla da bude dužine tog ključa. Svog toga, dakle, auto kji povešanje prosto izvegava, to da ću uzima ključ kao, dakle, prosto u neku polaznu tačku, jer naravno nebismo od starta mogli da koristimo plaintext, već uzima neku polaznu tačku i onda sa nekim pomverem ili tako uzima taj plaintext. Zato kada ovdje desi problema, svaki pojedinačnik
 karakter plaintexta, ni osim za samu dekripsiju, takođe te karakter je poristimo kako bi smo nadovezivali ih na ove početni ključ i kao što vidite dakle s karakter, kada smo detektuvali kao prvi karakter plaintexta, takođe smo ga nadovezali i kao sledeći karakter ključa. Što znači da u narodom konuku mi ćemo uzeti karakter l iz ključa i ponovom preseći sa karakterom šifrovane poruke što je takođe l i dobit ćemo karakter 2a, padno, nekaj 2a, a koje prečitamo iz one tamo tabela. I tako bi smo nastavili sve dalje, to a naravno ponovod dodajemo kao dokonu nakon ovog esku sam ključ. Koliko ćemo karakter do kraja dodati u ključ, pa ono liko karaktera iz plaintexta, tako da nam ukupna širina ključa bude jednak dožini te poruke koji smo imali na početniu, što ću u principu biti dužina cele poruke umlanjena za broj karaktera inicijomog ključa koji je proslaće. I prosto ovim mapiranjem 1 na 1 mi dobijemo plaintext i dobijemo ključ. I vidite, dakle, originalna poruke sa Avalo-Plavom u daljini kao brek. Dakle, ideje je prosto bila da ne zaborim ito ovde kako se koristite auto kivovršanje i da znate kako dobijete zapravo plaintext i kako te karakter je koristite, da vi se dobijele zapravo karakteri plaintexta nakon ovog ce karaktera, gdje vam prosto dalje nije v poznacu kako izgleda ključa. Da imamo ovde neko pitanje? Ako nemoj, sledići zadatak je iz obmusti rotor mašina. I sad ne znamo, ćemo sad taj zadatak, jer ćemo slediči put taj zadatak. A meni je sve... Očete da nastavim, dakle, osta je ovo i zadatak. Samo oblast rotor mašina, da. Da go dobršimo sad ili ćete napotretiti... To nisu prešli sa procesorom, kažu, onda je bolje za sledići čas. Onda ćemo... Znajiti, pravam se prenego, što prejedećemo na desa algorita, me to onda ćemo uraditi rotor mašinu, tamo da, pocetnik sa predavanja i nekoliko zadatak, mislim, dva zadatka iz ove oblasti koji su dolazili na polo filmu i izpitećenam. Ok, i da li imate pitanje neko vjezno za gadašnji čas i za algoritama koje smo brašali? Imam ja jedno kratko pitanje. A jer mi kada šifrujemo, mi ostavljamo razmakje. A za koji zada, o konu zadatak? Generalno, generalno, zato što kako su nja videla, mi dobijemo šifruvanje bez... Mislim, logičnog, bez razlaka. Da, u logičnog, tako je, da. I kada šifrujemo vam, reć, mi je kolokljoma, mi vam sajibemo. A, zato ti će kolokljoma kakogod želice, dakle, nije to bitno. Zato ne, neću mi se više šta je bilo dvijek. I je to bitno, dakle, zato što mi svaka gubogledamo našta se šifruva u koju karakter, tako da to uošta i bitno. I mislim, naravno, i kada se šifruje poruka, nešta je sada se razmacima, zato što je onda podložnije analizit. Tako da, kako to zatiće jedan. Ba, živite. Dobro, još neko pitanjem? Ok, ako nema više pitanja, onda smo s danas časom završili. I, dakle, vidimo se sledaće nevedelje u istom ovom terminu. Ako smo među vremeno našto pojavi, vi nam šaljite, do sledići nevedelje vas potravljamo. Čao. Vimo se prijatno.
