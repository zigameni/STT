 Imoj imamo internet u semoforsku promenju vS koja kaže koliko je taj semofor postavljan na početku odnosnu dok se stigla. Mi bi smo ovdje mogli da napravimo i onu metodu za inicijalizaciju, on je konstruktor, da bi smo datu promenjuvo postavili na neku početnu vrednost. Neku drugo, ovde za sada počinimo od vrednosti nola. I sad što radi, ovo je ovde ko radi signalizaciju, kaže uvećaj i ako postoje neko blokiran, a ti idi pa ga probuti. Šta sam rekla da se radi, ako postoje neko blokiran, a ti idi pa ga probuti. Ieće taj neko biti probuđa, oće, kad, nekad. Iel to garantovano da će taj doći na red. Pa doći će na red, nekad. Ie garantovano da će biti prvi nareni koj dolaze na red. Aha, našta sam rekla sad, nije garantovano da će biti prvi nareni koj dolaze na red. Dobro. Šta radi ove što čeka? Proveri. Če mi ovde mogu da napišem if. If s je nakonula wait. Na to ju znovu je promenjuve, kad me neko probudi, ja ću da kažem s minus minus. E, al šta bi bilo ako mi imamo disciplinu signal and continue? Kada mi ovde odradimo signal. Šta mi radimo sa ovom ovde niti koja čeka na semaforum? Mi tu nit iz liste blokiranih, prebacujemo u entry queue. Kada mi napustimo ovu ovde metodu, neko u entry queue će biti pušten. Zamislite da je red osled ovog ovde bio wait, s.wait, s.signal, s.wait, s.signal. E, stačka wait naprimer. Šta će onda ovde desiti? Sad ja sam napisao neki red osled al to nije baš tačno odradjeno red osled, jer ovo ovde signal metoda ima više koraka. Tako da tokom izvršavanja ovog ovde je u stvari stiglo to wait. I šta će onda desiti? Mi imamo jednog koja je zablokiran, a mi smo krenali da izvršavamo našu metodu signal, ovaj ovde signal na semaforu i pojavi se neko novko kaže, ja hoću da čekam na datom semaforu. Ali ja još uvek nemogu da proverim tu svoju internetu promenivu s, zato što došlo pre mene i dalje koristi dati monitor. Ja se nalazimo u entry queue. Kada se završi ovo ovde signala, a može se desiti da ovaj drugi koji je došao pre udje u monitor i šta će taj da konstatujemo, da li je s1 konula, nije s-minus. Šta će se desiti s ovin koog smo probudili? Pa on bi jednostavno došao na ovaj ovde red i odradio bi s-minus. I naša internetna semforska promeniva bi postala minus 1. To ne valja. Dakle, kada budete pisali rješenja, a provjerite da se stučeno nije desilo ovo što se sada nama desilo u ovaj sekvencij koju smo opisao. Da je tokom izvršenja neke metode, monitorstke metode, stigao neki nov proces i da je taj neki nov otišao i zablokirao se na entry queue. Znači nije se zablokirao na ustalnoj promenivi. Ne, zablokiraju se na redu čekanja na ulazu. A ako se to desilo, koj discipline signalne continu, to može često da se desi. A mi ću imati neko rekno stanje iznošavanja zbog toga. Op, ovde. Nije if, nego mora da se vrati while. Varem kod ovako napravljene konstrukcije naše grješenje. Če vidite, tako da kad imate disciplinu koja se zove signalne continu, vrlo često ćete na mestu provere uslova imati while. Proveri pa ako nije ti se zablokiraj. A kad se probudiš, a ti proveri još jednom, jer se možda otrenutka kate taj neko probudio. Do otrenutka kada stvih došao na red, neko preduhitrio i taj neko drugi, a došao i ugrabio svoju uslovnu promenjivo. Rešenje koja ima signalne continu, često, ne obavezno, vidite, ima u skoru koristiti jednu tehniku koja se zove passing the condition, da to baš, ne mora da bude tako, ali kažem često ćemo imati ovaj ovde uslova while. A kad se vratimo na ono što su maločas imali, obre sad ću sve. Dali ovo ovde sad da rešenje radi za disciplinu signal and wait? Kako biš i izgled, način to sa, ne s ovim whileom, nego sa ifom. Ako bi ove stajalo if, i ja dođim ovde i kažem signal, ja garantovano budim tog neko koji je bio zablokiran. Garantovano je taj prvi koji će doći na red. Garantovano je da taj neko nastavlja dalje, ne nastavljam ja, nego taj neko. Ako je to garantovano, onda ovo ovde rešenje, ako bi stavili samo if, radilo za disciplinu signal and wait. Rešenje je gde stoj while, radi za disciplinu wait, za disciplinu signal and continue, samo što kod discipline signal and wait se nikad neće desiti da mi više puta proverimo taj uslovo, jer ono kterunutka kada znas, neko probudi, taj neko nas je probudio. A, dobro, način sad neko može za zapamti, nešto da kaže, ako je signal and continue, a ti stavi while, ako je signal and wait, a ti stavi if. Možda bude, a ne mora da bude tako. Ako imamo disciplinu signal and continue, možemo napraviti rešenje koje ima if, a ne while. A islo tako kad imate disciplinu signal and wait. Ako treba da probodite više od jednog, tu nasta ne mali problem, ako bi ove trebalo da stoji signal i još jednom signal. Da smo mi, naprimi, ovdje uvećali s za dva, tako bude neka metoda, ovo ne bi radilo, jer šta se desilo? Ono kterunutka kada smo mi odradili signal, neko se probudio, gdje smo mi prešli. U entry queue, šta se desilo do trenutka kad smo mi došli na red? Nemam blagije vese, mi smo bili u entry queue, ko zna koje mogo sve da nas pretekne? Možda nas je pretekao nekoliko je umanjilo, ovu je ovde s za jedan. I onda bi sistem došao ponovno u nekonsistentno stanje. A zbog toga, što bude, bi možda morao, ako više nekih bude da tu imajuš neki f, nekaj smed da budi, a on budi. Ono kterunutka kada pozolite prvo signal, vi napuštate ekskuzivno pravo korišćenje datog objekta. Neku drugi može s njim da sigram. Mi ne znamo, kada ćemo mi doći na red, ponovno da koristimo dati objekta. Tako da vodite računa kad šta taljate. Sve dje pitanje, ili mora vajel gore? Nemora vajel gore. A sada ćemo viditi jednu tehniku koja može da se primijeni na dosta, ne na sve, ali na dosta različitih synchronizacijonih problema. Ta tehnika se naziva passing the condition. Ona i što budi. Odradi posao za onog ko treba da se probudi. Šta sam sad rekao? Ona i ko budi. Radi posao za onog ko treba da se probudi. E da proma ja to da odkucam. Šta mi ovde imamo? U dve metode void wait i imamo void signal. Šta mi hoćemo duredimo? Mi hoćemo. Ovde da proverimo uslov. Šta je uslov? if s Jednako nula wait. Ja hoću jednom da proverim uslov na ove promenje vojce. Kada ovaj kondišnil variable zabori se kako se izvaj se pred onog slijda. Zelo imam. Kada ovaj ovde dođi i kaže signal