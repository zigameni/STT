 sestem, gde ako želite dođete do nekim memoreskim bankima i morate prođete kroz neki procesor. Drugi. Tako da sada sistemi postaju znatno komplikovaniji, a mnogo komplikovaniji nego što su bili pre, nije da ovi i te komplikovaniji sistemi nisu postoji li pre, postoji li su samo nisu bili toliko do ostopni, bili su skupi, bilo za super kompijutere se to korisili, na super računare. A sada već toko nešto možete dobijeti za vaš lični računar. Zato što možete dobiti malo više na performansama jednog takog sistema. Ali čisto da znate postoje sistemi sa uniformim pristupom memori i sa neuniformim pristupom memori. To znači ne pristupa se na isti način s memoreskim lokacijama. Negde na pristup traje malo više, negde na malo manje. Znači nije to nivo keša 1, 2, 3. Nije ove malo duža putanja. Pa onda oni što programiraju ako hoće da optimizuju program. To znam neki studenti su se bavili optimizacijama raznih algoritama za svoje diplomske radove. Su dobijeli ove ploče sa neuniformim pristupom memori. Tako da ako hoće da pokrenu paralelizaciju jednog takvog algoritma, je onda gledam, a ha, kojim memoreskim lokacijama ovo moje jezgro sad može brzu da pristupi. I onda na tim rade optimizaciju, na tim podacima, ne na donim drugim podacima, zato što se onda mnogo vreme gubi na tu komunikaciju, znači hardarska komunikacija postoji samo ako želite da jurite performanse, to ovaš nije mnogo brzo. To onda morate da gledate šta je vaše parče memoria. I dosta ovih firmi koja treba lepo da upakuje proizvod na neki set-o boxer i automobil, ili tako negde gde nije baš da imate bezkonačno računarskih resursa, gdje imate određenu kulijčinu memorijskih resursa i procesoskih resursa moraju da rade takvog optimizacija. Znači tamo gde imate, kako se zove ograničenu kulijčinu resursa, jednostavno jedno kada napravite automobil, napravili ste ga ili set-o box, kad ste napravili, napravili ste, nema, to je to. To osad vozite nekoliko godina. Mislim, auto moš da vozite u celu generaciju, možete viša kojiš tol timer da vozite. A to je tako, kako je napravljeno. A dok je druga stvar, kako ćete programirati za web? To kažete, neam dovoljno resursa, odete na cloud i samo kliknite te dogmenci, kažete dokupi još servera. Ili ako kažete, obtericenji mi je prešlo nešto, uzmi još dokupi još servera. Gde vam je lako da proširite, da preskalirate vaš project. Jednostavno u jednom sluču imate koto vuređe i to je to, imate vaš mobilni za time, mobilni optimizujete neku biblioteku. Za time mobilni, baš me briga za neki drugi, za time mora da radi brzo. Za njegovu memoriju, za njegov procesor. Zalisi šta ćete raditi te kad porastite? Znači koji da ćete se baviti samo webom, gde vas baš briga, možete da što je nešto konkretno posadini koje hardware, i li ćete se baviti optimizacijem za neki sistem, neku igricu, zato što igrici moraju da iskoriste dosta tih računerskih resursa da vi to mogu da funkcioniše kako treba. Ovdje u primjeri jedne, jednog sistema sadelje na memorijom. Gde vidite? Jezgra, pristupaju kešu nivola 1, pristupaju kešu nivola 2. Svaku jezgor ima svoju keš memoriju nivola 1 i 2, dok je keš memorija nivola 3 zajednička za veći broji tih naših. Jezgar. Šta sam sada rekel? Jezgro. To je sad, ako ste nekada gledali servijske plače. Servijske plače mogu dima veći broj takvih procesora. Veći broj ovih i sedam procesora, tako da možete da bude veći broj ovahvi kotskica koje su poređane kod nas na plači. A iznad svega toga se nalazi delje na memorija. I to sve hardware treba da synchronizuje. Ovako ako imate sistem sadeđeno memorijom, gde tu imate neke interkoneksione magistrale, gde imate neke memorije, znači je to ovdje je neki neuniformi sistem koje prikazan. Nisu svi na isti način naproljeni pa da svi idu do L1, do L2, do L3. Ne, ovaj ovde sistem koje vam je prikazan, vidite sa leve strane imate neki CPU koje pristupa nekom kešu, koje možda bude 1, 2, 3, pa neki interkoneksionom rešu, to lici na drugu stranu, a opet dođi do neke memorije. A onda ta memoria možda se poveže s nekom drugom memorijom. Postoji hierarchija memoria koja u ovom ovde skoči je neuniformna, ali postoji hierarchija. Tamo na vrhu se nalazi naj ob šira memoria koja obuhvata svete. Ovde nam hardware vodi računa o koherenci, kozistenci i synchronizaciji svega ovoga. Najčešći to radi hardware. Ali vidite ćemo da to nemora boš da bude ti tako, jer kojda distribuirane hmreža, distribuiranih sistema, to može dizgledat dosta, dosta, dosta drugačije. Jednostavno nema o ne memorije na vrhu, jedno što smo znamo je da postoji koneksija izmiju svih tih naših delova memoria. Znači nekako su povezani, kako su povezani, nema pojma, ali znam da su povezani. Ako nisu povezani, onda imamo kupne povezanih računerjskih sistema, koji ne mogu da komuniciraju baš sveđu sobno. Jer to što imam memoriju na jednom i memoriju na drugom, ako ta dva ne mogu da razmenju podatke. Onda imam dva, dve šume. Znači nema jedan graf, koji se sastoji od povezanih delova, nego imam dve odvojene skupine, znači dve šume koje su nepovezane. Dobro, a kako mogu da budu povezani ti delovi? Zavisio toga zašta se radi to povezivanje. Znači dalje to povezivanje tako što želite da pravite super kompijoter ili pravite neki dobar data centar ili anostavno imate povezane neke računare u neku labavu mrežu pa onda one nekako komuniciraju. Za ove koji treba da postignu ogromne performanse. Ači neki super računari, mreže se prave na malo drugačij način u odnosu na ono što ste vi možda slušali na predmetu računarskim reže. Znači postoji mnogo više nekih interkoneksijonih delova da mi to moglo da se ostvari što je moguće bolj protok i postoje nešto što se neke konfiguracije, standardne, hypercube, mesh, stargraf, nekako su ispovezani ti delovi, ti naši računari da mi se dobilo što je moguće manje kašnjenje. A to kašnjenje može da bude vrlo, vrlo, vrlo malo. Da se približi kašnjenju možda koje imate kod o nich sistema koje smo malo čas videli, gde imamo deljenu memoriju. Ovde nema modeljenu memoriju, ali ta kašnjenja mogu da budu vrlo mala, tako da možemo da simuliramo postojanje deljene memorije. Na neki način softrski da to im buliramo, da iskoristimo šta hardware može da nam prušim. Ali poradovih, tightly coupled, koji se obično koristi za neki data center ili za super computere, postoje nešto što je losly coupled, gde to ne izgleda baš tako, gde jednostavno to na naša dola laboratorija, imamo brežnih prikvičak, računari su nakračeni na taj brežni prikvičak, bilo onep kablo, to se radi. To je najčeće neki cluster računara povezanih radnih stanica na internetu i su tu imamo malo malju pouzanost, možda nam crknje neki deo, možda to neko možda preuzme ili ne preuzme, pa sada ako neki deo može da prestanem s radom koo možda ga zameni, da možda ga zameni bilo koji računar ili ne može da ga zameni, to su sad neke stvari, o kojima stvarno treba voditi računa koji ćete praviti dobro i distribuirano aplikaciju. Ako hodite da crskate brojeve da dobeskoje načnosti, brojeve, sve što crskate nekako se pretvori u neku brojkicu, vi treba da vidite kak ućete to da iskoristite, hodite da se bavite analizom sličnosti grafova ili teksta ili filmova videozapisa, način, hodite da primenujete neku veštačku inteligenciju, hodite da pravite neku svoju neuralnu brežu ili hodite naacretate neki svoj graf, što sad ljudi mnogo rade. Na to ide ogromna kolikina računarskih resursa na kratskanje brojeva koristići neki od postojićih algoritama. Jednostavno nije tako veliki broje ljudi koji izmišljio nove algoritme ili koji pokušava da to isparalizuje za sebe, nego uzmo u neku gotovu biblioteku i onda se nadaju da će ta biblioteka da iskoristi te računarske resurse. Ono što mi hoćemo oduradimo na ovom ovde predmetu je naprobamo da vidimo kako se nešto programira da može da iskoristi veći broje resursa na tom našem računaru, kakav god daje, da li to ima super brzo ili je to možda sporo, kad budete radili projekt, ako budete radili projekt, a tu isto treba da razmišljate. Naoče sam spomenalo, kada sam pričao o tipom projektu, na primer treba da sortirate nije. Ako je to 1 gigabyte, da su ovo što je isplati, raditi distribuirano programiranje, jer tu treba da uradčunate komunikacijone troškoje. Kad imate ovako title couple brežu, ne su mala kašljenja.