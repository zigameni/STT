 na to koji mi vam eksklusivno pravo. Ostalimo u suštini program svih jazicima, napuštam samo taj poslanji ril. Znaš, šta sam rekao? A kad dođemo na metodu wait, nad nekom ustavnom premenivom, a ja eksklusivno kažem, napuštam eksklusivno pravo i blokiram se. Dobro. A šta radi metoda signal? Metoda signal kaže, da će neko koji je bio zablokiran, biti pušten. Ukoliko niko nije bio zablokiran, ništa se neće desiti. Če je to velika razlika u odnosu na semafora. A ako semafora, ako neko bio zablokiran, kad radimo signala, šta to odradi? Probodigam. A ako niko nije bio zablokiran, kad odradimo signala, šta se desi? Uveće se interna semaforska promeniva za jedan. Kod monitora to nije tako. A ako niko bio zablokiran, kažemo, probodi se. Prebaciti svog odgovarajući red. Ajde, to ćemo to tako sada reći, pošli ćemo vidjeti da ima različnih tipova monitora. Nisu svi isti. A ako niko ne čeka, metoda ne oradi, a mojbaš ništa. Šta radi? Wait. Ako je nekom predkodno odradi o signal, ništa. Wait kaže, ja se blokiram, tačka. Uvek. Nemam tu šta je predkodno bilo, nemam istorije. Semafor se inicializuje. Condition ustovna promeniva se ne inicializuje. To je red čekađa. Ako kažemo, wait, ja se zablokiram kraje. Znači zablokiram se. Jeste. Zablokiram se uveka. Kada odradi im signal, ja probudim nekog. Jeste. I sad odno nastepi jedno veliko pitanje. A koje je sledaći ako sam ja nekog probudio? Iel ja nastavljam ili taj neko nastavljam? I to su sad da dve velike implementacije, odnosno dve različite implementacije monitora. Dve različite klasse implementacije monitora. Jedno se naziva signal and continue, druga se naziva signal and wait. Na najrednom času ćemo videti koja je razlika između ove ove dve implementacije. Signal and continue i signal and wait. Dali možete imati nekih pitanja, koje se odnose na ovo ovde do sada što smo radili? Ako nemate pitanja, bićemo ovde napraviti kratku pauzu, pa ćemo se vratiti nazad na čas. Pausa. Dobar dan, dobro došli na predavanje na prednjetu konkurentno i distribuirano programiranje. Vraćamo se rado s monitorima. Hocimo da vidimo šta monitori rade, kako monitori rade. Šta rade? Ako uđemo u monitorsku proceduru, imamo ekskuzivno pravo pristupa objektu, to znači nikodrugi ne može da izvršava nije jednu drugu monitorsku metodu. Ovo se ponoša kao da imamo medjusubno iskučivanje. Uslovne promenjive nam prave uslovnu synchronizaciju. Či medjusubno iskučivanje je podrazumeva na naslednja osobina, koja postoji kod monitora. Može biti samo jedan aktivan u nekom trenutku, način neki tread koji nešto radi, može biti samo jedan aktivan. Ostali čekaju nad nekim q-ima. Da li je to entry q ili je to čeka na nekom od q-ova zakašnjenje na dojim uslovnim promenjemu? To ćemo videti. Ali u jednom trenutku može biti samo jedan. Svi ostali čekaju nad nekim q-ima. Videli smo da postoje dve metode. Barem dve metode nad uslovnim promenjemu. Vidite ćemo da postoji još. Na predprednjem slajdu ček bio navjedena još jedna dodatna metoda. Sad je pitanje samo, a šta se desi kad nekog pozove signal? Da li napušta ekskluzivno pravo ili da je ekskluzivno pravo nekom drugom? Dobro, ako imamo disciplinu koji se naziva signal and continue, to je ono što imamo u programskom jaziku java, kada kažemo signal, mi zadržavamo ekskluzivno pravo, da je ono prigestupao objektu. A šta se desi vas onim, kog smo probude li, taj prelazi i čeka u entry queue. A, aj, ponon, šta sam rekao sada? Kako počinje, vošte rad sam monitorim. Kad neko dođe, on čeka na entry queue. Čekam da dobijem pravo da vošto uđemocott monitor, to je onaj ulasni red. Nakon toga sam ja doš drillsnu promenjuvu, zablokiravam se sa wait, uvek kad dođe, ja se zablokiram, nemamo ono da li je neko već u nečem, nema wait, znači wait, čekaj. Ok, kada mi je neko odradio signala, taj nekome je iz reda usnovne promenjive prebacio entry queue. Dobro, taj neko je zadržao ekskluzivno pravo, pristupa monitoru. Ja nemogu da pristupi monitoru, dok taj neko ne završi ekskluzivno pravo, pristupa. Znači moram da čekam. To je koj disciplina signalent continu, koja je podrazumeva na ujavljuštini jedna jedina ujavi disciplina. Ali po gnikama ćete susretiti još jednu drugu disciplinu, koja se nazive signal and wait. Kod discipline signal and wait se radi slajaća stvara. O naj što bude nekog, kad kašli signala, a hoćemo da garantujemo da taj koga budimo će biti prvi naredni proces koji dolazi na red. Šta sam sad rekao? Mi ono ga kog probudimo, garantujemo da će taj neko biti prvi naredni koji dolazi na red. Dobro, a to znači da mi moramo da napustimo ekskluzivno pravo, pristupa monitoru, da. Me to da signala. Kaže, ja napuštam ekskluzivno pravo, pristupa monitoru i budim prvog tog koji tu postoji. Prvi sato je već relativno, ali podim nekog. Budećemo šta je taj tu prvi koji će se probuditi. I al to najduže čeka, što ima najvići prioritet ili to neka slučena promenju, šta će biti taj prvi koji će biti probućeno. Ja ću se zablokirati na nekom redu čekani. Sada na kom redu čekani je to je već pitanje. Tako da je sada ova disciplina takođe podeljene na dve poddiscipline. A jedna je ako se ne kaže koji je prvi naredniko se budi, a jedna je ubičnije signal and wait. Ali ako imamo sledeće, ona i kog smo mi probudili, kad taj neko završi sa svojim poslom. Ko će biti posle njega? Ako posle njega dođe, ona i koji njega probudio, onda mi ovo disciplinu koji se naziva signal and urgent wait. Vedite, da će postoje različite discipline. Signal and continue kaže ja budim nekog, ali taj neko nije prvi naredni, taj opet mora da je čekan. I signal and wait. Ja kad budim nekog, taj neko se odmah probudi. Odmah je taj neko naredni dočići i radi izvršavac. Ako postoje, ako ne postoje nikom ništa. Kao da ništa nisam radio sa tom wait metodom. Sa tom signal metodom. Dobro, koji je razlik, onda zmiju signal and continue i signal and wait. Kada ja pozovem nekoga, sa signal and wait, ništa nije moglo da se promeni od trenutka, kada sam ja neko pozvao, do trenutka kad se taj neko probudio. Nikodrugi nije mogo dođi monitor. Sve što je ona i što budi ostavio, ona i što se budi je dobio. Kod discipline signal and continue to nije tako. Kad ovo je odred i signal. Taj neko se prebacuje iz liste blokiranih u neki q, u entry q. A kada će taj doći na red? Pojma nema. Entry q može da ima ono 100 drugih koji čekaju ko zna šta. Tako da se može desiti da od trenutka kada je neko probudio neki proces. Do trenutka kada taj proces dođe na red, da prođe pola sata. Mokvom pola sata? Može da prođe mnogo vremena. Ako može prođe mnogo vremena, svašta se može da desilo tu, nutar monitora. Može da više nije isto stanje kao u trenutku kada je neko neko probudio. Tako da može da treba ponovno da proverimo koje je stanje naših promenjivih koji tu imamo. Aha, što sam sad rekao? Da ponovno proverimo. Tako da najčešće ćemo mi kod monitora koji imaju disciplinu Signalent Continu. Imati vile pa proveri uslova. Znači vile pa provera uslova.