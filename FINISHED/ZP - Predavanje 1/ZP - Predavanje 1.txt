 Dakle, prva prezentacija će biti jedan krata kuvod koji treba da vas ubedi zašto je važno što slušete zašto tipo dataka, madap, biste ova SI grupa već gotovi inženjeri, da ošli ste u postanju, posnjih pola godine svoj kustubiranja, tako da pripostavljam da iz svega onoga što ste slušeli da sada već ste mogli da zaključite neke stvari. Ali recimo da sada držimo ovo predavanje tamo negde 1985, onda ovaj predmet verovatno ne bi bio na osnovnim studijama, zato što u to vreme, a vi se to vreme na svakako ne sićate pošto ste previše mladi i niste se tada mi rodili, u to vreme su računari bili mahom nepovezani, znači svako imao neki svoj desktop računar na kome je imao file-ove i kada je trebalo da file prenese nekor svom drugaru ili da podeli, recimo, neki tekstpani file, to se radilo tako što se uzmo o neki diskete, pa se na njih snimi file. I onda ako bi smo govorili o zaštiti podataka, a kada kažemo šta su podaci, podaci u računari ima su file-ove, bilo koje vrste, ako bi smo se bavili zaštiti od podataka u takvim slavima, odnosno u takvom okruženju, onda zaštiti podataka podrazumeva praktično fizično zaštitu tog uređaja, da zabravljite nekome da ima pristup tom uređaju, da ne može doći do njega, da ne može da izvadi disk, da ne može u krenju linii da ga uključili, da ubacili diskete u njegu. Međutim, svete danas je bitno drugačija o to vreme na izredinja osmdesnijih godina. Ono što znate danas to je da praktično svaki uređaj koji imate je povezan na nekom režu, a ta reža je vrlo često povezana na internet. I sada kada vi mene slušate, viste predpostađam nekada u svojim stanu ima i povezani ste na neku wi-fi mrežu, a ta wi-fi mreža je povezana na internet. I ne samo što su računari povezani na tem reži, što su međutivno povezani, nego su povezani i mobilni telefoni, povezani su ištam pači, povezani su kamere, iot i uređaj, možda neki od vas imaju čak i pametne kućne aparatike, a što su frižider i mašine za sudovi ili za veš koje mogu da vam jave neku informaciju, ako je to bitno ili sistem osvetljenju stanu. Dakle sve je to povezano prekuracunoskim reži. Ako je povezano nešto prekuracunoskim reži, onda prvo, takav uređaj mora da komunicira sa nekim drugim uređajima i postoje se pitanje, da li sada te pippodacije kvaj uređaj razmenjaju sa nekim drugim uređajima treba da se vidi, treba neko da vidi, te tako podatke ili ne, odnosno, da li tako podatki treba zaštititi, to je jedan aspirit zaštite pojataka. A drugi aspirit zaštite pojataka je ono što takođe možete da pretpostavite da sledi, to je da kada postoji mreže i kada su i uređe povezani kreko mreže, onda preko te mreže, pored cih o nich dobrih stvari, može da dođe i nešto što je neželjeno, odnosno mogu da dođu nekakvi napadi i upadi u vaše sisteme, koji opet mogu da izvrše kompromitaciju pojataka. Dakle, ono što je problem sa time što su svih uređaja i umreženi je to da se podaci koji se prenose izmeđi uređaja, oni se prenose preko medijuma koji su nebezbedni. Kada kažemo nebezbedni, nemislimo, recimo privično je bezbedno da uzmiti da svoje neke podatke pošaljite opličkim kablom, neko da bi mogao da presretnim te podatki morao bi da nekako se uključi taj oplički kabl, da nekako skrene delo svetlostnog snopa, što može tehnicky da se izvede, ali to može da uredi samo neka specializovanja služba, nemože baš vaš drugar koji se nedjutio na vas da izvrši takav napad. Međutim drugi je problem. Recimo, ako sada, konkretno sada kada mi komuniciramo ovdje preko zuma, ako kliknite tamo na neke ikonice gore koje pokazuju kako smo povezani, gdje smo povezani, mi smo sada povezani verovatno preko nekoj zuma ovog servera koji se nalazi u Švecki. E sad, to znači da ovaj moj glas i video, odnosno, ova prezentacija koje vam šaljem, odlaze do tog servera u Švecku i vraćaju se nazad do vas i prolaze preko niza različiti računetskih mreža. Te različite računetske mreže su pod tuđom kontrolom, mi ne znamo ko je upravljenima, mi ne znamo ko seedi u tim datacentrima i smatra mojih da su u principu nebezbedne, zato što bilo ko se nalazi u svakove tih mreža može izzezanja ili iz nekakve nanere, da uzme i da snimi sve naše paketi, da vidi da snimi u potpunosti sadržaj onog što šaljem. Dakle, kada se bilo šta šalje preko interneta, smatra se da se šalje preko nebezbedne medijomo, zato što se šalje preko neke infrastrukture pod kojem ne imamo kontrolu. A onda, ako bilo šta od tih podata kao setljivo, onda bi trebalo te podatke zaštititi. A recimo, neke trivialne situacije za koje pretpostavimo i da su ovoj intuitivno jasne kada vi trebalo podatki zaštititi, to je na primer ako nešto plaćete, pa onda ste se povezali na neku prodavnicu koja se nalazi negde u svetu, pa hoćete da upišete broj svoje kartice. Pa naravno da biste volili da kada upišete broj te kartice, broj kartice bude vidljevi samo vama i to i prodavnici koja se nalazi negde na internetu, a ne nekom Hansu koji se nalazi u Nemačkoj, na nekom Data Centru koji je presreo taj vaš paket. Dakle, jedan od zadataka zaštete podatka to je da se podaci na taj način zaštite, odnosno da se na taj način nekako modifikuju da samo oni koji su ovlašći i da videte podatke mogu da ih vide i niko drugi. Dakle, taj neki posmatrač sa strane da ne može da pristupiti im podacima. Druga stvar koji zadatak zaštete podatka to je da kada sad pošalimo neke podatki i hoćemo da recimo taj neko ko dobija podatke od nas da veruje tim podacima, taj neko treba da bude siguran da te podatke neko usput nije promenio. Zašto je ovo bitno? Pa možete da zamislite opet neke scenarije recimo u polikuju pitanju neka vojna primena, pa sad jedan del fronta obaveštava drugi del fronta šta se dešava i sada oni kao s jedne strane kažu neznam napada nas 50 tenkova i pošalju tu informaciju na drugu stranu neko presvetni tu poru koji u mislju 50 tenkova napiše napada nas 5.000 tenkova. Samim tim komanda koja dobije tako informaciju će napraviti drugačiji zaključak zato što neće dobro razumiti razmiru napada. Dakle jedan od zatak zašto je podatak je da se spreči da neko može da promeni sadraža je podatak zato što to može da izdove neki neželjene efekte. Vidi ćete sad na jednom od narodnih slajdovog okrvode prezentacije pokazati će vam neke primere koji su bili upravo to. Neko je plasirao lažnu informaciju i ta lažna informacija izazvala jeziju financijskih ubitki. Pro komentari se ćemo to još jednom. Jedan od zataka zašto je podatak je da se obezbedi integritet podatak odnosno da se obezbedi da neko ne promeni njiho sadraža. Onda treća stvar koja je prilično teška i koja je bitna i koja je zadatak zašto je podatak to je da kada dobijemo neku poruku da budemo sigurni od koga smo je zaista tačno dobili. Ako ste dobili mail koji je tiga od nekova ko se zove Pavle Guletić, vi hoćete u voleni biste da budete sigurni da li sam ja zaista poslal tu poruku ili je neko uzel i napisao mail i samo promenio i stavio moju email adresu umesto neke druge email adrese. Jer u krajnju lini svaki mail i ona je header e-maila i text e-maila to su tekst oni file. To je lako promeniti. Znači jedan od zataka zašto je podatak je da kada dobijemo neku poruku da budemo sigurni od koga je došli. A takođe kada se neko povezuje na neki sistem, naprim. kada se neko povezuje na sistem studenski vaš ono što fakuteđer i da bude siguran to je da svako od vas ima pravo pristupa, samo o nim podacima koji su za vas relevantni. A ne da možete da vidite sad sve ostale podatke za koje niste ovlašiti. I to je jedan od zataka zašto je podataka. Dakle, a kao što možete da vidite, u svakoj dovih situacija, ključnost vara zašto kada moramo da vodimo računa zašto je podataka, to je situacija kada se neke informacije prenosi, odnosno kada putuju preko mreže. E sad, pored oga, pored ovih situacija kada želim da se zaštitimo od nečega, ono što je takođe iz zatak zašto je podataka i čime ćemo se takođe baviti doku mogo kursa, to je obezbijivanje razno raznih funkcija koje bi trebalo da naprave u digitalnom svetu podpunno analogiju sa onim što imamo u našim realnom svetu. Kada to kaže, mislim recimo na aplikacije poput toga da možete na primer da digitalno podpisete neki ugovor ili da digitalno podpisete neki dokument. I da takav dokument bude potpunno jednako validan, kada uzmete očitam pa te papir, pa vi žurnete svoj podpis. Znači, mi smo se svi navikli na to da odstatno papir, da se podpisemu i da to predstavlja nešto čim je mi garantimo da mi stojimo i za to. Međutim, naravno, postoje mehanizmi u kojem je to mogući da se uroditi u digitalnom svetu, pa da se takođe, tačno, definiše i vreme kada je podpisem taj dokument, zato što je i to je nekada bitno, to ćemo pro komentari se ti kada dođe vreme. Dakle, svi ti mehanizmi koji se odnose na digitalnom svetu.
 digitalizaciju, poslovanje, digitalizaciju razno raznih tih administrativnih operacija, svi ti mehanizmi počivaju na algoritmima i na mehanizmima zašte pojad. Tako da, i svih tih razloga, posebno što ste vi, ljudi koji se bave, koji ćete se baviti, presega softwareom, znači vi ćete biti neko koji će izrađivati aplikacije, veliki broj vas će izrađivati aplikacije koje su poslovne, koje su za neke bankerske, možete da bude jako dobro svestan i da zna da primeni ove mehanizme zašte pojad. Esad, ovo je predmet koji je prvi, koji se bavi ovakvim stvarima u opiru fakulteta. I ono što vidite na ovom slojidu, to je skup predmeta koji postoje na fakultetu, a koji se odnose na informaciju na bezbejednost ili cyber security, odnosno na tu oblast, da tako kažemo zaštite i podatak i račuženskih sisteme i breža. I to je predmet koji je prilih je primeren o slunim studijama. Esad, naravno što će da se zvešava kasnji, zavisio doaz, da li hoćete da se školujete još ili nećete. Na master, studijama postoje još zva predmeta koji mogu da se bire iz ove oblasti. Jedan je za vas verovatno posledne interesanta, na to je razvoj bezbenog softwarea, koji bi trebalo da vas nauči o nekim principima toga kako da pišite aplikacije koje neće imati sigurnostne prokuste. Recimo jednosti stvari koja je jako interesantna, u isto vreme i tu pošta tužna, to je da kada si pogleda broj odkrivenih slabosti u softwarestvim sistemima danas, jedan od razloga koji odnosno jedan od mehanizama, odnosno jedna od greša, kad koji prave programeri još uvek, u najvećih meri, to je buffer overflow. Predposta vim da znate šta je buffer overflow i predposta vim da znate kako da sprečete buffer overflow kada pišete neki program u cevo ili ceplus plusu, ali i dan danas je buffer overflow na drugom mestu svih mogućih slabosti s ostaviti sistema koje su odkriveni u 2020. godine. Drugi predmet koji iz ove oblasti je zašta ka rečunski sistema imreža, a naprav uči etičko hakovanje, uči se kako upasti u neki sistem i to je predmet koji zahtajva dosťa složeno znanje iz različitih odlasti računarstva i software i hardwarea, pa tu se detaljne izvčave, u jesper, injekšan, microsite, scripting i razno razni drugi napadi. Ano dok se si studijemo postoji jož za predmeta, upojima se uči neke napredne stvari uvezi se zašta tom podataka i zašta tom računarskih sistema. Zašto vam ogovorim, pa vam govorim, zato što vidi neki od vas, a to će definitivno da se desi, neki od vas će svoju karijeru usmeriti u pravcu neke vrste cyber securitya, bilo da je to neka vrsta ispitivanja slabosti aplikacija, bilo da je to, da će otiću pravcu zašta i rečunarski nema i ilim reža, a bilo da je to zato što ćete imati potrebu da primenujete tu aplikacijama koje ćete praviti. I prosto to je jedna grana koja će verovatno u naravnim godinama i da raste i po obimu i po značaju, zato što videte što raz nekoliko slajdova kakvi su trendovi, što se tiče broja slabosti i napada koji postoje u svetu. E sad ovo su neki primeri koji sam vam napomenuo, recimo jedan primer kada je, jedan lažni tvit je napravio paniku na finansijkim tržetim izazva padove indexa Berzi, to iz 2013 godine priča da je neko Hakova o nalog ja mislim Doiče Banke i sa tog Twitternaloga je samo napisao da direkto Doiče Banke podnosi ostavku. E to proizvelo da je su odma akcije Banke pale, onda slično stvar kada je, isti te godine, ja mislim Hakovan Twitter sošit presa koji je i taj u okviru tog Hakovan Twitter je objoljenu da je bila eksplozija o Beloj kući da je Barack Obama povređen, Berze su pale tog dana i pad vrednosti svih akcija je značio 200 milijardi dolara manje ukupne vrednosti svih tih firmi koje su na Berze, dakle to su prilično dramaticzne promene i prilično dramaticzne stvari koje mogu da se dese a iz nečega što delo je da je prilično bezazva. I sad Kako je došlo do ovu gupa da pa neko je verovatno na neki način došao do userneima i password da to koristika koji je održavo Twitter za tu novinsko agenciju i to uradio. Tako da možete prepostaviti, način ovo su primjuri koji nisu koji čak ne podrozumevaju neke složene upade u računoski sisteme već prosto je neko u Hakovan analog, možete neko me preko rame na video kad je kuca o userneima i password i prodao tu informaciju dalje. Dakle možete vidite situacije u kojima je i jako važno očuvati integritet pojada tako odnosno očuvati integritet neko u grečonosku sistema kako ne bi se, kako lažne vesti ne bi proizvele neke negativne efekte. Pa onda imate još ovaj poslednji primjera, to je od prošeg godine da je 500 miliona jahu naloga bilo Hakovanu. I znači 500 miliona naloga, zna njih se sam, znači šta su mogli dure da mogu samo da preporuče da se promeni lozinka zato što nekih hackeri posleduju njihove lozinki. E sad šta hackeri rade kada to imaju, pa već njih su preterano interesantni nalozi običnih ljudi, mada mogu i oni da se iskoriste za neke kozna kako je stvari. Ono što je za njih nekoj interesantni, ješto kada neko pokupi tako bazu od 500 miliona userneima i passworda, onda možete da naprav i kasnije dobro platformu za Hakovanje drugih naloga zato što te lozinki ljudi vello često koriste na različitim mestima i onda ako koristite vistu lozinku na više sistema na jednom je kompromitova, na onda će lako neko moći da je kompromitevi na drugom sistemu. Pa onda jevo sad ovo je što sam vam reka, ovo su prično sveži podaci koja sam schidno pre neki dan, koji pokazuju koliko ima software svih slabosti u računarskim sistemi. I kao što možete da vidite u postavnje četri godine imamo dromatičan porast Da li to znači da su programmeri postali loši i u zadnji četri godine pa ne znači nego prosto broj softwarea je postao sve veći i veći i naravno broj programmera koji ga pišu, je sve veći i veći a sa druge strane, ovo može da pokaže i možda pokazuje taj trend da da se prosto poveća laktivnost od ih pokušavaju da pronadžu tako slabosti u softwareim. Dakle, prosto ono čegam morate da budete svesni korat kad razmišljate vi kao softwareiski izgenjer i kad razmišljate kako ćete napisati neku aplikaciju, ne možete da razmišljate samo o tome kako je funcionalnost tog softwarea, znači šta on treba da radi. Morate da svatite da će taj vaš software raditi u neprjeteljskom okruženju i ako ste napravili neku jako dobro i jako uspešno aplikaciju postoje će neka konkurencija koja će želiti da vas saplete i koji će želiti da vam napravi neke probleme i moraćete da načinite kako da sprečite sve to, a da bi ste sprečili sve to, treba da koristite mehanizme zaštite podatak. To je ovo statistika koja pokazuje koliko je bilo sigurnosih incidenata tato je ova plava linija u Americi i koliko je bilo kompromitovanih podataka takođi u Americi. Ovi brojevi dola, ova tamnija linija je u miljonima što znači da recimo 2018. godine je bilo 471 milion nekih dokumentata odnosno podataka nekih koji su bili kompromitovanih usjedinjem Američkim državom. Dakle sigurnosih incidenata ima mnogo svet nije idealno mesto u kome žive samo dobri, nego postoji i oni zli i prosto morate da se spremite za tako nešto i da naučite kako da se zaštite u tom takom svetu. Ovo su neki drugi slajdove i samo ćemo protrčati kroz njih da vidite šta su neki trendovi, ovoga šta su sve pretnje koje postoje. Dakle kao što možete da vidite recimo spam je upadu bio periodu 2014-2016. godine, ali se druge strane recimo malware i distribucija malwarea kroz mail je postava mnogo aktuelnija znači 2014. malver bio slot u jednom od 244 maila da bi 2016 malver bio u svakom 131 mailu. Znači poveća se broj malvera koji se distribuji kroz email. Takođe broj varianti malvera je počela da raste i ono što je interesantno to je da od 2015. Panadalje su počli da se pojavljuju veliki botnetov koji su imali milione ukupno zarazenih računara. Sako ih mogu da se distribujiro je različiti napadni. Pa onda ovde možete vidite koliki broj slabosti je pronađen u mobilnim operativnim sistemima po godinama. Ia recimo, što je interesantno to je android koji 2014 imao svega 12 slabosti da bi 2016 imao 316 slabosti. Dali ovo znači da je on vremenom postao loši, ne znači, nego znači da je on vremenom dobio sve veći tržišti da je postao sve interesantnih, interesantnih hackerima da pokušaju da nešto urade se. Znači prosto što napravite bolj i uspešnji aplikaciju to će biti više o njih koji će želiti nešto da zlo urade sa takvim aplikacijom i treba da naučite kako da se zaštitite. Pa onda imate ove ransomware koji su postani godine postali aktivni, recimo ransomware i su interesantni.
 i ransomware to je malware koji vam zaključa neki deoračunara, najčešće ono što vam radi, on šifruje podatke. I onda hacker vam kaže, ako hoćete da vam odključamo, odnosno, dešifrujamo te podatke, onda uplatite tamo neke bitcojne, na neki tamo račun i ono vam pošalje ključ kojim se dešifruju podaci. Dakle, zato za taj ransomware se koriste mehanizmi, o kojima ćemo slušiti, o kojima ćemo sučiti ovdje na ovom predmetu, samo u neke loše svrche. Znači, umoćemo da zašlitimo podatke, tako da ih vide samo oni koji su ovlašćeni, ransomware radi nešto drugo, ransomware zaključa, o ne podatke koji su vama značajmi i onda vas ucenjuje, da ako platite, onda možete da dođete do njihovoj sadaršaj. I ono što je takođe neprijatno to je da hackerstviji usubi mogu da se kupi, dakle, ne morate vi da budete neki stručnik zinformacijno bezbernost da biste mogli da napravite napad i već možete to da kupite od onih koji znaju kako se to radi i ovde imate neke cene koliko košta broj kreditne kartici, koliko košta neki digitalni dokument, koliko košta jedan sad ddos napada i tako dalje, i tako dalje. Znači, prosto ovaj slajd ne treba da vam kaže, idite sa to i uradite, nego taj slajd treba da vam kaže, da nisu samo oni koji su hackeri, oni kojih treba da se plašite, već to mogu da budu i ljudi koji su prilično nevični takvim stvarima, koji mogu samo malo da budu informisani šta takar napad, kakav refekat prizudi i mogu da vam naprave i nanesu neku štetu. Edo, nakon što sam vas sad malo naplašio, sad ćemo da vidimo, dakle, ono što je pojenta svih ovih pretgodnih slajdova, to je da vam ukražem na to, da svet u kome će vaše aplikacije živeti i u kome će one funkcioniti, sa ti je takav da u njemu prete razne opasnosti. Naravno, ako pravite neko aplikaciju koji će koristi vas pet, velike verovatno će da neće nikomu biti interesantno da je napadne, ali verovatno, ja verovam da je svima vama cilj da radite uspešnimi firmama i da radite na softwareima koji će koristiti stotini, hiljada ili milijone ljudi, e onda u takvih situaciji prosto morate da budete svestni da će takve aplikacije i zazvatiti pozornost o njih koji bi vole li nešto zlo da urede, i onda u takvim situacijima je jako važno da poznete mehanizme kako zaštititi aplikacije, odnosno kako zaštititi podatke u tim aplikacijan. E sa što stiče napada šta je neko što može da, šta je ono što neko može da uredi vašo aplikaciji, to mogu da budu pasivni napad, ja pasiva napad bi bio taj da neko presretne pakete u kojima se nalaze podaci koje vi šaljete, recimo izmađu vaša aplikacije neko koristika, i da onda nešto uradi sa tim podacima. Dakle pasivanje napad u tom smistu da niko ništa ne ubacuje u tu komunikaciji, uveć prosto samo neko priuzima sadržaj tih pojataka. I sad naravno ako mi učinimo da su podaci šifrovan i da ne može da dovođe do tih pojataka, onda smo se zaštitili. Z druge strane postoje aktivni napadi, gde napadaš sada može aktivno da ubacuje neke svoje poruke, kako bi napravio neki efekat, pa to može da bude da se lažno pretetavi, pa onda to može da bude da uradi neku vrstu ripla i napada, znači snimio je neku poruku, pa je ponovopušta, pa može da menja poruke, pa može da uradi dinalov servis, odnost, spričavanje servise, dakle to su razne stvari, gde napadaš može aktivno da napadne neku aplikaciju ili neku komunikaciju izm. 2 osm. E sad, od akle mogu da dođu tih napadi, pa mogu da dođu iz raznih strana, mogu da dođu preko mreže, tu postoje neki napadi koji koriste mrežne slabosti i mrežne protokole, pa mogu da dođu preko software svabosti, dakle kao što rekao u buffer overflow je dan od najčešćih mehanizama, kako se, kako neki aplikacije padaju i na podači spravaju da ih eksplatišu, pa onda postoje drugi stvari kao što su x-pro-injection, prosight stripting i razmu raznih drugi mehanizmi koji napadaju najčešće web aplikacije, pošto to vrlo česta forma aplikacija danas koja postoji, zatim postoje dinalov servis napadi, da je neku iz bombardu je vaš server na kome se nalazi vaš uspešna aplikacija i onda spreči bilo koga da se poveže na njega, naravno postoji pravac koji je preko ljudskog factora i to je danas jedan od vrlo čestih napada, da je neće on je napasti vas koji ste obučemi i koji ćete uspešno naučiti ove predmjuti, svatite koje su opasnosti, nego će, recimo, u vašoj firmi i programerskoj poslati mail, recimo, nekom radniku koji je ekonomista ili pravnik u firme, u kome će da bude neki link, koji je zanimljiv, da će onda klikne na taj link i da pokupi virus. Dakle i to je isto faktor, ta vrsta prevare, odnosno, socijalno gizernjeringa, kojem se veoma često upada u razno razno računaski sisteme. Pa onda to može da bude hardware koji može da bude kvaran da tako kažem i razno razno drugi. Tako praktično napad u neku infrastrukturu može da dođi sa bilo koje strane. E sad ako je to tako mračno, kako se bronimo, pa bronimo se tako što postoje različiti sigurnostni servisi, kojima se sprečavaju ovi napad. Ti servisi, sad postoje neki standard i nećemo vas mnijaviti, u zgledovo smo prezentaciju smanjili sa dva časa na ovih pola sata, baš zato da ne bi smo ulazili u ove detalje i neke formalizacije tih stvari. Znači, što bih teo da zapamtite sa ovoga slajda iz ove prezentacije, to su te osnovne kategorije sigurnostnih servisa koja postoje, a mi ćemo te kategorije još ponavljati mnogo putu tolkom ovu kursu. I ono što je bitno, tu je da razlikvajte šta znači autentikacija, a autentikacija znači provera nećeg identiteta i recimo jedan od razljucog, zašto im sistiramo na tome da kada se logovajte na e-learning portal, da koristite fakultetski e-mail, pa prosto zato što je vaš fakultetski e-mail povezano z vaš index i neko vas je videu u trijentku koji se dobili index i to je nešto što jeste vezano za vaš identitet. Sa druge strane sami znate da mošti dojete na Google i da napravite 52 različita e-mail naloga sa razno raznjim imenima i da to ne bude vezano za vaš identitet. Dakle, jedan od sigurnostnih servisa koje je bitan to je provera nećeg identiteta, odnosno autentikacija. I sve stvari je kada smo napravili proveru nećeg identiteta, to je da napravimo kontrolu pristupa košta ima pravo da vidi u nekom sistemu i košta ima pravo da radi. Recima ako imate neke fakultetski sistem, student ima pravo da vidi svoje ocene, profesor ima pravo da upiše ocene. Bilo bi prilično neprijatno ako bi student ima o pravo da upiše ocene. Neprijatno za fakultet, za studenta može da i prijatno. Dakle, kontrola pristupa je drugi sigurnostni mechanizam koji mora da postoji u nekom sistemu. Onda treća stvari je tajnost pojataka. Tajnost pojataka podrazumeva da podaci budu vidljivi samo onima koji imaju pravo da ih vidi. Odnosno da podaci obično budu u nekom šifrovanom obliku za one koji nemaju pravo da ih vidi. I to se najčešće radi kada se salje u prekom reža. To je nešto što si danas najčešći koji koristi. To je nešto što mi upravo sada koristimo. Reci moh ako biste kliknuli na neznam sad to dal i u vašem zoomu reci moh postoji. Ako kliknete na ovaj zelenu kvačicu u gornim levom uglu onda otvorimo se prozuro koji pisi zaštete u pojataka onda kliknete na zupčanik za settings. Možete da vidite u prozuru koji vam se otvorio. Da, trenutno koristimo AS256 GCM. Dakle, to je jedan simetrični protokol za inkripsiju. Što znači da ako bi neko presreo ovu našu komunikaciji on ne bi mogao da vidi sadržaj ove prezentacije i on ne bi mogao da čuje moji glas, odnosno ono što ja vama sada pričam. Pa onda četvrti Bitven service je integritet podataka. To znači da na neki način obezbedimo podatki da ne može da se menja njihov sadržaj. Odnosno da ako neko promen i sadržaj pojataka da mi to možemo da detektujem. 5. service je nepo recivost non-repidiešom negleskom i on je bitan u onim situacijama, recimo, kad da već dolazimo do toga da propisujemo neka dokumenta digitala. I recimo, ja podpisem digitalnu dokumentu, u kome kažem ja ću svakom studentu koji dobi 10. junu isplatiti po 100 eur, i ja to digitalno potpisem. I onda dođe junski roki i vas 50 dobije 10. Ja kažem uvpa, to je 5.000 eur, pa neka da mi napam je to da dam. I onda ja kažem ne, ja to nisu nikad popisao. To je poricaň. Nepo recivost bi bilo da se napravi taka mehanizem i postoje, naravno, tako mehanizmi kojima možete da se neki dokument digitalno potpisem i da one koje to u radio nemože kasnije da kažem ne, ja to nisu moram u radio. Ili nasličam način neko ko dobi je neki dokument, da ne može da kaže ne, ja ta dokument nisam nikada vidi. Prosto postoji način da se ta nepo recivost izvede i u digitalnom obriku. Ineče, nepo recivost u našem analognom svetu, svetu živih ljudi, i obično tako da kad dođete negde i kada treba da se obavežete neko vam kaže da žvrgnete svoj potpis, ili sa druge strane ako neko koćete
 da vam uruči neki dokument, recimo dobijete sucti pozim, onda dođe poštar i kaže sa ti ovde podpiši da si ovo dobije. I onda nema porićanja da niste dobili tu poruku. Dakle, to postoji također digitalno svjetu i to ćemo isto vidjeti kako može da se realice. Ima jedan sigurnostni servis koji nije zapravo sigurnostni servis, ali je bitna karakteristika sistema, a to je dostupnost, odnosno to da je servis stalno dostupan i dostupom, onim koristicima koji treba da ga koriste. Tako da to su neke stvari koji imaćemo se baviti tokom ovo kursa i to su mehanizmi koje ćemo izvucavati. Mehanizmi kao što su, šifrovanja, digitalno opisivanje, kontrola, pristupa i tako dalje, i tako dalje. Neću sada to nabrajati i da vas ne bi knjavio stigli smo skoro i do kraju ovog časa. Ostalo mi je samo jedan slide. Zdaj bih voleva da vam na jednoj ovakoj šemi ukražem na to, gde je ono i šta je ono čim ćemo se mi konkretno baviti u okuru ovog prednjeta. Ovde imate jedan model preno sa poetaka prekom reša. Znači postoji neki sender i postoji neki recipient. Recimo, ovaj ovdje sender možete da svatite da je to, recimo, Google, Google-ov neki server, nakon se nalazi, recimo, Gmail server, a ovaj ovdje recipient je vaš bravzir. Znači neki Firefox, Chrome šta go da koristite. Između ta dva entiteta se šadaju neki podacij, odnosno konkretno dviju vašim bravziru, hoćete da pročitite mail. I ta email putuje od Google do bravzir. Ono što se dešava, to je da ti podaci putuju kroz internet, to je ovo ovde, i na tom internetu može da postoji neki opponent, odnosno neko ko prisluškuje tu komunikaciju. Ono što vi želite da uradite i ono što je zapravo zadatak zaštute poetak u ovom slučaju, to je ovo ovde KotSka, i to je ono što ćemo mi izlučavati u okviru zaštute poetaka, a to je na koji način modifikovati ovu osnovnu poruku, a to je mail. Znači na koji način je modifikovati da ona postane sigurno poruka, da kada ovaj opponent vidi tu sigurnu poruku, da ne može da dođe do sadržaja orignalne poruke, da ne može dođe do sadržaja maila koji vi hoćete da pročitite. Naravno, ono što mora da postoji, da ta sigurno poruka mora da se prevede istog nekog šifrovanoj oblika u oblik koji je vama čitljiv, da možete da pročitete šta ste dođeviti. Znači, ono što ćemo se nibaviti na ovom predmetu isklučivo su ove dve KotSke, u kojima se vrši neka manipulacija tim podacima koji su smješteni na čunaskim sistemima, kako bi oni kada putuju kroz mrežu bili zaštičeni od svih o njih pošasti koje smo videli na početku ove prezentacije. I dobro, to bi bilo to što se tiče prvog časa. Prva tema kojem ćemo se baviti u okviru zaštite povijeta, ka to su simetrični, tako zvoni simetrični algoritmi za enkrypciju. To su algoritmi koje su postojali praktično od 3 minutka kada su nastali kriptografski algoritmi padu danas i negde do 70 godina prošlog veka su postojali isključivo simetrični algoritmi. Sa ćemo vidjeti šta su oni. Međutim, ono što je, zašto ih izvucavamo koal posebno klaso, pa prosto 70 godina prošlog veka su se pojavili tako zvaniji asimetrični algoritmi, koje su bitno različiti od ovih, tako da tog trenutka su podeljene i napravljene ove dve klase. Kojc simetričnih algoritma, kojc simetričnih algoritama, ono što se radi, to je da se ona i podata koji želimo da zaštitimo, čiju poverljivo se želimo da zaštitimo, on se šifruje, odnosno kriptuje, odnosno čini se nečitljivi, nekom napadaču i jednim ključom. E ono što je karakteristično i što je specificno za simetrične algoritme, to je da se i proces inkriptije i proces dekriptije vrše tim istim ključom. I upravo se zato oni zovu simetričnih algoritmi, zato što se istim ključom vrši i inkriptovanje, odnosno šifrovanje i dekriptovanje, odnosno desifrovanje. Predpostađam da sada možete da po analogiji, neko i svatite da sa drugej strane ako postoje asimetrični algoritmi, kojih asimetričnih algoritama ova dva ključa nisu ista, oni su u nekakom odnosu, ali postoje dva različita ključa, jednim se šifruje, drugim se desifruje. Pred njegošto pređemo na same konkretne simetrične algoritme i neke njihove karakteristične subirje, samo da uvedemo neke termine koje ćemo koristiti tokom celog ovog kursa, kako bi smo se bolje razvume li kasnije. Prva stvar to je originalni podatak. Ta je originalni podatak kao što rekao, može da bude bilo šta, može da bude file, može da bude e-mail, može da bude neka HTML strana, šta god. Ukoliko se taj podatak gleda u izvornom obliku, onda je to tako zvaniji otvoreni tekst, odnosno plain tekst, odnosno to je originalna poruka. Sa druge strane kada šifrovemo taj tekst, onda dobijemo nešto su se na iglaskom zove cipher tekst, odnosno šifrovan na poruka. Algoritam kojim smo transformisali originalni tekst u šifrovani tekst je nešto su zove šifra, odnosno kriptografskog algoritma, odnosno na iglaskom cipher. U kriptografskog algoritma ulaze dva elemente, i to ćemo vidjeti na narodnom slajde, da imamo jedan dijedram. Znači u kriptografskog algoritma ulaze, postoje dve, da kažem, dva ulazna argumenta. Jedan je plain tekst, odnosno osnovni tekst, a drugi je taj ključ. Kao izlaz iz tog algoritmo za šifrovanje dobijemo šifrovani tekst. Enkriptovanje, odnosno šifrovanje, odnosno encaifaring je proces, kojim se neka originalna poruka pretvara u šifrovanu, odnosno pravi se nečitljivim za nekog ako nije ovnošnjem da je vidi, dešifrovanje, odnosno dekriptovanje je obrnuto proces, kojim se ta šifrovanja poruka prevodi u originalni oblik. Kriptografije nauka koja se bavi algoritvima i koja osmišljava algoritme kako zaštititi podatke, kriptoanaliza je opet nešto što je suprop u tome, da kaj to je pokušaj da se sada isto je šifrovane poruke, nekako dođi do originalne poruke i to je nauka o metodama kako dođi do toga nekim prečicama. Ono što je cilj, ono ako pravi kriptografije algoritme, to je da napravio i takav algoritm da ova kriptoanaliza ne može da budi jednostavno, odnosno da sam algoritm nema neku rupu. E dobro, to su neki osnovni termini, a ovdje sad možemo da vidimo šta se dešava koji cimetričnog šifrovanja, odnosno kako izgleda ceo taj proces. Dakle, ono što postoju, to je ovej plain text, odnosno originalni text, koji je u izvornom obliku. Taj originalni text se dovodi na uneki software ili u neki sistem koji će vršiti šifrovanje, odnosno, enkriptiju. I takođe u ta isti blok se dovodi i ovej ključ K. Tako modifikovanja poruka, dakle ona je šifrovanju tekst, i ono što ovde možete da vidite, to je jedna vrsta notacije, kojom se označava da je neka poruka šifrovana. Znači, ovdje y je jednako e od k i x, znači da je poruka y dobijena enkriptovanjem poruke x sa ključem k. Vidjet ćemo, kroz neki slajd, postoji jedna slična notacija za enkriptovanje, priročno sve jedno koji ćete da koristite, dok lagodije jasno ono što treba da kažete, a kada kažem šta ćete koristiti, mislim kada vas budemo pitali nešto u nekom zadatku, pa je potpuno sve jedno da ćete koristiti ovako, notaciju ćete koristiti ono drugu notaciju koji ćete vidjeti, prosto šta je vama logičnije. A vidjet ćete, kroz nakon notacije ćemo opisivati priročno složene poruki, koji ima nekoliko elemenata, koji ima raznih operacije koje će se dešavati na tim podacijom, odnosno različnih načina, kako će se manipulisati tim podacijom. E, taj šifrovani tekst je nešto što putuje po tom nebezbednom medijumu internetu i ovde postoji taj napadač koji bi želeo da pristupi podacima, ako je algoritm simetrišno šifrovanja dobar, onda će njemu to da bude jako tešno. E, se što to znači jako teško, to ćemo još to discutovati na ovom času, odnosno šta je, koje je to vrste zaštite koji pruže i uopšti plitko-granski abdorit. U svakom stuče jako smo poslavi tako nešto preko nebezbednom interneta, onda treba da, ona i kočitata i tekst da to dešifruje i onda će taj šifrovani tekst ući u blok za dešifrovanje, odnosno dekriptovanje, u taj isti blok će ući ove isti ključka i onda će se procesom dešifrovanja originalna poruka da obiti procesom dešifrovanja od poruke y, to je šifrovana poruka i ključaka. I ono što mora da se dobije, to je ovaj plen tekst koji treba da u potpunosti odbavara plen tekstu koji je poslip. E, ono što je osnovna karakteristika simetričnih algoritama, to je da i jedan i drugi entitet moraju da imaju isti ključ. I to je makar na konceptu oljom nivou, ujasno. Međutim, ako se da razmislimo, recimo šta se tu sve dešava, onda možda i nije tako jasno. Evo ja sam vam rekao na prošnom času da upravo sada kada mi komuniciramo ovaj tok pakjetel koji ima je spakovanja i ova prezentacija i sve ovo što sam nacrtal i moji glas, dakle sviti pakjeti idu ka nekom tamo serveru za koji kod znači
 Mislim da se nalazi u Švetskojnih, nisam siguran. Dolazete od tog servera i onda od tog servera idu posebni tokov i do svakog od vaših računara i vi mene možete da čujete i možete da vidite u prezentaciji. I rekao sam takođe da cveto što se šalje je šifrovano algoritmom koji se zove AS, li ćete učiti detaljno kako funkcioniš AS, AS je, kao što možete da vidite i na ovom slajdu, simetričan algoritm. Što to znači? To znači da moj laptop, sako ga ja emitojamo u prezentaciju i onaj tamo server koji se nalazi negde u Švetskoj, moj laptop šifroje te podatke, a onaj tamo server, negde u Švetskoj, deshifroje te podatke i onda opet sa druge strane kada šalje vama te podatke, onih šifroje neki ključen, to dolazi do vašega računara i vaše čunara te podatke deshifroje. Ono što biste mogli da se pitate, pa dobra, al koji im ključem se to radi, kako je to napravljeno, či kako moj računar i onaj tamo računar znaju koji će kljuž da koriste. I to deluje kao problem kokuške i jajeta, zato što da bi smo zaštitili komunikaciju, moramo da imamo ključ. A ispada da je taj ključ nekako kutova u pomreži, i vidjet ćemo na koji način se, to ćete morati da se strpite jedno dve ne delje, da biste svatili mehanizme kojima može da se dođe do toga da se napravi ključ na obest strane. Dakle, jedan od bitnih problema koci metričnih algoritama, to je kako obezbediti da oba uređaja imaju isti ključ. A simmetrični algoritmi se jako mnogo koristili, znači danas tega koristili verovatno 200 puta, svaki put kada ste otišili na nekih HTTPS site, vaš browser i onaj tamo web server sa koji mi on razgovaralo, su napravili jedan simmetrični ključ. Dakle, svaki stavno, posljerno u posljnji vreme, zato što danas je čak negdak o 90% web komunikacije kryptovano, svakata vaša sesija prema nekom web serveru je kryptovan i svaki put kada se to dešava, svaki put vaš browser i neki tamo server moraju da naprave taj isti ključ. Ono što mi možemo da svatimo i recimo što bi smo mogli da se organizujemo, ovdje nema mnogo, to je da se skupimo negdema, sad s konvim situacijom, ni to nije izvjesno, ali ajde da recimo da kažemo, da možemo da se skupimo i onda zapišemo na nekom papiriću taj ključ i onda se raširimo negde širom sveta i koristimo taj ključ. To bi bio jedan mehanizm kako taj ključ može da se podeli na različiti stranama, mižete im takam način nije skalabilan, a to znači da ako nas ima mnogo, onda pisati sve te papirići o bezbeditji da se ti ključevi srema na vremeni menjaju, nije nešto što je i jednostavno. Verujem da je sam koncept simetrične inkripsije jasan, ali ono što je problematićno koji simetrične inkripsije to je kako o bezbeditji da se ove isti ključ nađe na različitim tačkama u svetu upravo podrazumevevići da je medijum da je ono sve što je iznađu tih tačaka nebezben. Znači treba da se nađe neki mehanizm kako da se to izvede. Vide ćemo kasnije da se, da ono što je majviće revolucija evrolatno bila u oblasti kriptografije, to je uvođenja simetričnih algoritama, znači ono je treba da nam pomogu da ovi ključeri mogu da se nađu na različitim tačkama u svetu. Ali za sad ajde da zanemarimo taj problem kako distribuirati ključ. Ono što je sad bitno da schočite, to je da kod simetričnih algoritama mora da postoje isti ključ na različitim tačkama u svetu koje hoće da razmenjuju podatki. Što se tiče simetričnih triptosistema, to je ove praklično insta slika kao ona predhodna, što ima neku dopunu, to je ovo ovde, a to je da taj ključ, da bi mogao da bude na obje strane, mora nekim sigurnim kanalom da bude distribuji. Osa taj sigurni kanal može da bude to što će, što ćemo mi da se skupimo na jedno mesto pa ćemo da ispišajmo te papirići i da svakon nosi svojom lozimku, a postoje neki drugi mehanizmi i to ćemo izučavati koji omogućavaju da se taj ključ na siguranacim prenese do nekih udaljene tačke. Uvij, što mislim, makar bi trebalo da vam to iz primera kako se koriste danas kritograske aguritmi i iz činjenice da vaši računari to svakodnjemno koriste u velikoj meri, bi trebalo da vam bude jasno da postoje tehnik i način da se to izvede, ali i o tom potom kada dođemo do toga, onda ćemo da objesnimo na koji način se to čini. Ono što radi kriptoanalitica, ono što ona i koji hoći da nas napradne, ono što dobija, to je šifrova na poruka, a ono što je njegov zadatak, to je da pokuša da otkri ključ i da pokuša da otkri origino nuporu. E ono što simetrične kriptosistem treba duredi, to je da mu učini da njemu to bude maksimalno teško. I opet sam reko tu reč teško, a to ćemo malo kasniji viditi šta to znači koliko je to teško. E sad, ajde da vidimo jedna, da razmistimo malo, ako bi ste dobili zadatak ovako da napravite neki sistem koji će da između vaše dve aplikacije nekako zašljiti podatke i vi kažete, e pa dobro, ja ću duredin tako što ću da napravim svoj poseban algoritem. Znači ja ću napravim moj simetričan algoritem šifrova. I to jeste i jedan legitiman pristup, i to jeste jedan od načina kako može da se naprojuš ifroje. Međutim u praksi to nije previše praktično, zato što recimo, ajde sad da sam uzmum ove primer koji se vam rekao. Ako Gmail service, hoće da pružite service, da bi možete da od njih čitate mail i da šaljete svoje mailove, i taj Gmail, ako ima ono liko naloga, koliko ima Android uređaja, a to je nešto se meri danas u milijardama. Kako bi takava algoritma moga uopšti da se napravi da bude tajn? Prosto takava algoritma je mora da bude javni, zato što oni moraju da objavesim o nim projuđačima uređaja na koji način će se povezati sa serverom i koji će algoritmom biti šifrovani podacij. Dakle, ono što je da tako želim svoje mirrodopski svrhe. Znači, za svrhe koje nisu neke vojne ili bezbednostne, ono što je strategija, to je da se koriste algoritmi koji su u potpunosti poznati i vi ćete te algoritme izvucavati na ovom predmetu. I za svaki od ih algoritama, postoji već napisan kod. Dakle, vi ne morate da pišete AS kod od nule, skinoćete biblioteku i implementirajte taj kod. Ako ste su mnjiče, vi možete da provjerite da neko nije nešto ugradio što ne želite, ali u principu ne morate da pišete u taj kod. U krajnju linii možete da provjerite sa nekim drugim kodom, da li su kompatibilni, odnosno da li se razumevi, da li to jeste zaista taj AS algoritm. Dakle, strategija nije takva da se piše poseban algoritm, već strategija da se koristi dobro poznata algoritm. AS algoritm koji je danas najčešći korišćen, on je standard već skoro nekih 15. godina. Pre nekih 15. godina autori tog algoritma, to su neka dva čoveka, oni su objavili kako funkcijali šte algoritme. I od tog trenutka svi kryptoanalitičer, jednosti svi ljudi koji se bave ovom obrošću, su imali priliku da analiziraju taj algoritm i da pokušaju da pronađu neki rupe u njemu. A što znači, pronaći rupu. Pronaći rupu znači da ako smo dovolili šifra oni tekst, da ja mogu, zahvadit ću možda nekim paternima, bita ili tako rečemu, da dođem recimo za 3 minuta do originovno tekst. Postoji neka prečica kojem ću doći do originovno tekst. I zase ove godine niko nije objavio, niko nije javno rekao, AS algoritm ne valja zato što postoji tako i takav problem i evo je prečica kojem ću ja moći brzo da od šifravno tekst dođe do originovno tekst. Dakle, ako je algoritm šifrovanja jak, onda je za napadače jedin i način da napadne takav algoritm, odnosno da iz šifravno tekste dođi do originovno teksta, tako što će raditi pretregu po svim ključevim. A ključevi su neke fiksne veričine. Eta i tajni ključ je nešto što je poznuto samo po šlidiroci i primalcu. I tajni ključ danas u AS algoritmu i izm. 128256 bita. Što znači da, ako recimo, uzmamo u jednostavniju varijantu, da je ključ dužine 128 bita, to znači da ukupno ima 1228 različnih ključeva. Ako je algoritm dobar, onda jedini način da napadač dođe do originovne poruke, iz šifravne poruke je da pokuša dođi pretregu po svim ključevima i da pronođe o nej ključ koji daje neki smislen odgora. Dakle, ne radi se strategije u kome se izmišle neki algoritm. Drugo, ako bi ste izmisli do neki algoritm, pa nema što je budete nisto posto sigurni, da u tom algoritmu ne postoji neka rupa kojoj ste li prevideli, kojoj bi neko moge da otvrije, a videćemo, evo, sad kada budemo krenili da radimo, pošto ćemo krenuti onako historijski da obrađujemo simedeša algoritme, videćete kakve rupe postoji algoritmima koje su potpuno kontra one logike, kako je sam algoritm zamistim. Dakle, neko zamisli algoritm koji deluje da je siguran, ali onda zapravo na drugu stranu postoji neki način koji bi se lahko otkrije sama struktura, tog teksta koji je šifrovan na osnovu koje može prečicom da se dođi dovar.
 originoj tekst, ali o tom potom malo se strpite do narjednog časa. Ono što na ovom slajdu imate, to je ova druga notacija koja se vam rejkao, koja govori isto što je ono malo pre, dakle ovo ovde i y je šifrovani tekst koji je dobijen e enkrypcijem, pljučem k od poru kx i imate originoj tekst koji je dobijen decrypcijem, pljučem k od poru kx. Pa koja godi da vam se notacija više sviđa potpuno je sve jedno, možste da je koristite bitno, da razlumete što znači, što znači kad je ovako nešto napisan. I sad ono što sam alveć nekako nagovestio, to je da postoje dve vrste enkrypcije, znači postoje simetrišna i asimetrišna enkrypcija. Videćemo u okviru simetrišna enkrypcija postoje tako zvanih blokovskii algoritmi, a to su algoritmi koji originoj u poruku podeli u blokove. Pa takava algoritma je ovaj AS, koji ako koristi ključa 128 bita, podeli poruku u blokove od 128 bita i svaki posebno kryptuje, a postoje tako zvanih stream algoritmi u kojima se radi byte po byte, bit po biti li byte po byte, symbol po symbol enkrypcija, pa recimo jedan takap primjer koji ćete takođe čutiti u okviru okviru, okvedmet je algoritm koji se zove RC4. Ono što ćemo danas početi i dradimo, to su tako zvanih substitucijni algoritmi, a vidićete da se koci metrišnih algoritama koriste dve strategije, odnosno dva mehanizma, to su tako zvana substitucija, zamena jednog simbola neki drugim i transpozicija, to je neko mješanje redosta da simbola. I to su oni mehanizmi koji se koriste, pa ćemo se time pozabili deterno kada budemo radili konkretne algoritmi. Što se tiče napada, postoje različite strategije koje napadač može da napravi, ono što je za napadača najbolje, to je da može da ima par originalnog teksta i šifrovano teksta i da istakog para pokuša nekako da dođe do ključa. Zato što ako je odkriju ključa, onda može svaku poruku posledati da je šifrovano. Vi ću ti im to na padaču nije uvek poznat. Dakle, najteža situacija za napadača je ova prva. Kada on jedina stvar koji vidi, jedina stvar koji ima, da je poznata samo kodira na poruku, kodosto poznata je samo šifrovana poruka. Vi ću ti može da mu bude poznat originalni tekst i ako mu je poznat originalni tekst, onda lakše može da prepozna koji je ključ, onaj koji im je šifrovano ta poruka. Ajde tu ćemo malo pro komentari sati što se dovo znači, što se sada rekao. Rećimo ako je originalna poruka pisana na srpskom jeziku i to je neka rečenica na srpskom jeziku. Ako ima dva na 128 ključeva, kako ćemo prepoznat i koji je ključ dobar? Prepozna ćemo tako što ćemo tu rečenicu, odnosno rečenicu koja je kriptovan, uzi ćemo dva na 128 ključeva i onda ćemo je deshifrovani. I sada u tih dva na 128 deshifrovanih, različnih deshifrovanih poruka mi moramo da prepoznamo onu, koja je smislena, odnosno koja je na srpskom jeziku. I ako malo razmistite to, ovo što nije trivijela zadat, zato što ta poruka ako je pisana nekim prirodnim jezikom i zapravo treba da naprijemo neki mechanizm koji će raditi prepoznavanje tog teksta i koji će reći u nekom sluče, e ovo je orignivna poruka. A zašto nam treba takam neki mechanizm, po prostu 1288 je ogromom broji. Znači nema šanse da neku sad uzme i da kreni da čita redom 1288 nekih rečenica koje mahom nemaju smislad i da pronađe onu koja je pisana na srpskom jeziku. Dakle, ono što je što na padaču značajno olačava posao to je ako ima jedan par orignilnog i šifrovano tekst. I sad kako on može da dođe do tog? Ovo može da dođe do toga na različite način. Recimo, postoje neki mechanizmi kojima se šifruje, recimo šifruje se paketi. One koji su, koji su slušali im rešet dva, sluli su za ip se kao to ćemo još pomenuti jednom i u okviru ovog predmita. I sad ono što ip se krati, on šifruje pakete. A vi znate da u paketima postoje zaglavlja. I ta zaglavlja neka od tih polje imaju tačno jasno definisane vrednosti. Recimo ip v4 zaglavlje ima upisano vrednost 4 za upolju vrednost, upolju verzija protokola. I ima neke druge vrednosti, recimo te telo koje lako predvide i neke druge vrednosti koje mogu lako da se predvide. Ide praktično taj napadačka da vidi jednu poruku koja je u okviru ip seka. On može da kaže, aha, u okviru je poruku. U prvom bloku ja imam ip zaglavlje i mogu da predpostaim tačno kako to ip zaglavlje izlada. I onda njemu može da bude daleko lakši posao, zato što može dolačno prepozna u kojim situacijama i on može da pronašao pravit ljuč. Ili s lično situacije, ukoliko je u pitanju kryptovan htm strana, ukoliko je kryptovan mail. Recimo ako neko zna da u kryptovanu i porucu koje se šalje postoji mail koji vi čitate. Svaki taj mail ima neko zaglavlje koje ima neka polja, koja je vi dobro znate. Znači on ima polje koje se zove subject, ima polje koje se zove from. Dakle, napadač može kada imamo tako dobro strukturirane podatke, napadač može da zna određene elementi oreginalne poruke i onda moje da lakši posao u dešifrovanju tekst. Treća stvari da može da ima izobran oreginalni tekst. A može to dovradi recimo na sveči način. Odnosno, kakva bi to bila situacija? To bi bilo situacija u koje recimo, napadač hoći da napadne komunikacije u neke firme koje ima više svojih ispostava. Naprimer, ima ispostava u Njur, koji ima ispostava u Los Angeles i oni među sobno komuniciraju. I ono što njega interesuje to je da presretne sve poruki koje se razmenjuju iz možu TV poslovic. E sa dono što on može dovradi, on može da kaže da nađe nekog svog zaposlenog koji kaže molim te u 1205 pošali poruku tačno određenog sadržaja putem te kriptovane veze. E u tako situaciji ako on može da prepoznak koja je to poruka on će imati tačno izabren originalni tekst za koji će dobiti šifrovani tekst. Tako da, postoje različite strategije, ali generalno ono što je za napadača važno to je da pokušaj da dođe da što je više moguće informacije. Ono što je njemu najteže to je kada vidi samo samo šifrovanu poruku. Tako da, uvijek treba voditi računa da se napadač ostavi minimalna količina informacije. E sada, ako napadač vidi šifrovani tekst i ako je algoritam dobar, ne postoje nikakve prečice kako da se dođi do originalne poruke, onda moja jedinji način da se proba svaki ključ. I sad ovde imate jednu tabelu koja bi trebalo da vam pokaže i da vam ukaže na to zašto je važno da ključ bude što je moguće veći. Ovdje možete da vidite jednu disputivu koja kaže sledeći. Ako je veličina ključa 32 bita, 2 na 32 je nekde oko 4 milijarde, ako je potrebno za jednu enkrypciju, odnosno dekrypciju, ako je potrebna 1 mikrosekunda, onda mu treba 2 na 31 mikrosekunda, odnosno treba mu 35 minuta da se prođe kroz sve moguće ključeve koji postoje u tom prostoru od 2 na 32. Međutima, ako ima 128 bita, a danas ne bi trebalo da se koriste algoritmi koji ima i manje o 128 bita, onda mu treba 2 na 127 mikrosekundi, što mu dođe nekde 5,4 x 10 na 24 godina. E, ovo znači da je napadaču teško. Ako napadač vidi da bi pretresao ceo prostor ključeva, da mu treba 10 na 24 godina, odnosno da mu treba više struko više nego što će on sam živeti, onda on to neće ni pokušati dobro. Ajde samo, još jedna stvara, ovde zašto je ovde napisano 2 na 31 za ključ koji je veličine 32 bita. Prosto, ono što morate da uzmete u obzir, to je da napadač može da bude maksimalno srećan, a to znači da napadač može iz prve da uzme da lupi neku kombinaciju bita i da baš iz prve na bode sam ključa. A sa druge strane napadač može da bude maksimalno nesrećan i da uzme i izređa sve ključeve i da tek ona i poslednji, 2 na 32 bude ključ koji mi je šifrova na poru. Znači u proseku njemu treba nekde polovina tog prostora ključa, a to je 2 na n-1 gde n broj bita u ključu. Zato je ovde u svakove dovih linija napisano 2 na 31 i 1227 ms. Elemonošta bitna. Znači 128 bita je 4 puta više nego 32 bita, ali ono što ovde možete da vidite da je u stvari taj broj neuporedivo veći, a sa porostom broja dužine ključe, zato što ovaj je rast, zapravo, deličine prostora svih ključeva eksponencijalno. I ovo je nešto što čini na podaču, čini da ga obe schrabri, zapravo da pokušava uopšte da izvrši ovakav napad, zato što mu treba ne praktično, nogo vremena da dođe do, do, da pretraži cijel prostor ključeva. E sada tu postoji.
 i jedan drugi element, okome istu treba da se vodi račun. Možemo da prepostavimo, recimo da je ovo situacija, u koje na padačne nas je naš drugar, koji ima svoj laptop. I to je sve čime ono je spolaže. I njegov laptop je takav da može da izdoši jednu ekipciju mikrosekundi, odnosno može da izdoši milion ekipcija u minutu. Međutim, druge strane, naravno, u to je situacija, koji je to neki naš poznanik, koji hoći nešto za nam na pakosti, recimo, vole bi da nam upadne u Facebook ili u, ne znam, Twitter i da upiše neku poruku me svo nas da nas osramati. Međutim, postoje mnogo ozbiljnije primjene računara i postoje mnogo ozbiljnije na padači. Recimo, ako je reču nekoj vrsti industrijskim špijunaže, abi neko htev da odkrije od neke firme, recimo, neke tajne ili neke informacije o nekim tehnološkim inovacijama, takav na padači može da uloži mnogo veću silu u odkrivanje ključa. Znači, on može da ima, recimo, kao ovde u ovom primjelu, on može da ima milion korova na raspolaganju, znači da ima gomilu servera, da ima čitav neki data center, koji ima milion korova na raspolaganju i da sviti serveri istotvremjeno pokušaju da pronođu te kljuša. Zpodeli se taj prostor ključeva na milion delova i svaki pokušava svoj poseban deo da pretraži. U tako situaciji moš da vidite, recimo, da ovaj ovde slučaj 32 bita u mesu 35,8 minuta postaje nešto se rešavu u 2 milisekunde, da ako se koristi 56 bita, što je sluči des algoritma koji je bio prvi standard zengripsiju, jedna napadač njemu treba hdjadu godina, ali milion napadača može da reši to za des sati, onda se vidi da i taj recimo algoritm kao što je des koji ima tjucat 56 bita više nije, smatra se da nije sigur. Međutim za ove algoritme koji se danas koriste čak i za napadači koji imaju jako veliki broj korova i dalje takav zadatak postaje prilično težak i prilično, da kažem, obeshrabrujići i onda zbog toga se razbijevaju neke druge tehniki kako uplasti u sistem koji obično podrozumevaju neko vrstu socijalnom izgenjeringu, da je hoćemo da prevarimo nekoga danas pusti u taj sistem doćemo i zato postoje gomila onih fisik napada, da je neko vam javi, kaži, ja sam vaš sistem administrator, pošadjaj mi svoj uzernem i password, da bih mogu da popravim tvoje nalog u kome se nešto pokvarilo i ako ste dovoljno blentavi, onda ćete tako nešto i uraditi. Elem, znači napad grubom silom podrozumeva pretrago svih ključeva, algoritm treba da bude takav, da je prostor svih ključeva toliko veliki, da je nepraktično i teško na padaču da dođe do samog ključa, samo grubom pretrago. I tu dolazimo do dva vrlo važna termina koje treba da znate, a to su termini bezoslovne sigurnosti i računerski sigurnosti. Bezoslovna sigurnost i algoritm koji posleduje bezoslovno sigurnost, to je takava algoritm, od koga na padač nikada, bez obzira na raspoložive resursima, imao milijardu korov, milijardu računaradnih, šta govdaj ima, nikada nećemoći da dođe iz šifrovanog teksta do originomog teksta. I postoji jedan takav algoritm i mi ćemo ga izvucavati koliko sljedeće nedelje, koji su zove One Time Pad, koji ima tu bezoslovno sigurnost. Međutim, je sad nekoma može da pita, pa dobra, što si koristi, ja ja se ne koristi sa taj One Time Pad, pa prosto vide ćete postoji jedan praktični problem recimo u distribuciji ključeva, dakle problem sa tim One Time Padom je taj što uslov da bi One Time Pad moglo da funkcioniš, je da je ključ bezko način. Što složite se nije baš jednostavno posebno, ako treba kryptovati neke jako velike filovi. Ali dobro, o tom potom to ćemo pro komentari se ti kada dođemo do konkretom One Time Pad. Z druge strane, svi oni algoritmi koje ćemo mi izvucavati su algoritmi koji pruže i u računersku sigurnost. A računerska sigurnost znači da je svaki taj algoritm teorički mogući razbiti, ali da je toliko veliko vreme potrebno, čak i ako nekoj ima ogromne resurse da to prosto nema mnogo smisli. Svi algoritmi koje ćemo mi izvucavati, svi algoritmi koji se koriste u praksi i ovaj isti algoritm koji krypto je sada našao komunikaciju, taj algoritm pruže samo računersku sigurnost, odgledno pruže sigurnost tokom nekog vreme scupu periodu. I jednog trenutka kada bi neko sad uzel da radi brute force napad na taj algoritm, jednog trenutka će doći do sadržaja komunikacija. I u principu, ako bi neko hteva da vidi šta smo mi to sad pričali tokom ovog predavanja, umesto da probada napadne taj AS256 koji ima kljuž dužine 256 bita, mnogomu jednostavnije da pokuša da prevari nekog od vas da mu dati uzernemi pasvordi i da uđu s temi da vidi sadržaj našeg komunikacija. E dobro, ostalo još 9 minuta, sad ćemo da krenemo da pričamo substitucijan algoritm i urodit ćemo samo ovaj prvi substitucijan algoritm, to je cezaro algoritm, jedan prahistorijski, odnosno, ajde, nije prahistorijski, pošto nije iz Kamenog doba, ali iz doba Njulija Cezaro, dakle privično star algoritm, samo ćemo njega uroditi za zagrevanje, onda ćemo osleći nedelje sve ove ostale koji spadaju u te tako zvane substitucijne algoritme. Dakle prva stvara šta su to substitucijne šifre, odnosno šta znači substitucija? Substitucija znači da se jedan simbol iz originalog teksta menja nekim drugim simbolom. I primer koji imate ovde, dole vam pokazuje strategiju tih substitucijnih šifara. Dakle možete se napravi pravi, u kome se kaže, ako imam originalni tekst i u njemu slovo a, pravilo kaže kada god postoji slovo a u originalnom tekstu, to slovo za meni, slovom t. I kao što možete da vidite, ta ista situacija se dešava ovdje. Pa onda ako postoji slovo v, to slovo v za meni slovom r, ako postoji slovo l, to slovo l za meni slovom s. I ono što ćete dobiti, to je ova neka rečkoje zove tr ts t, koja zaista ne liči na onu početnu rečkoji smo pisali. Mi svi razumimo šta je avala, već im nikod nas ne razume šta je tr ts t. Naravno, mi ćemo se pozabaviti na sljedećim času da vidimo, koje su posledice ovakvog vršenja šifrovanja i šta nije dobro u ovakvih strategije, ali generalno sada je bitno samo da razumete šta znači substitucija. Ta substitucija može da se odnosi ovako na slova, međutim možete da se odnosi na bilo kakav niz bita. Ovde imate sa desne strane ta isti primer, znači ovo dva primera su jednaka jedinoj što su ovo ovde aski vrednosti, pa sad imamo zapravo blokove od po 8 bita, da je slovo a je kodovanog kao 65, slovo t je kodovanog kao 84. Dakle može da se posmatra na nivou grupe bita, a ono što rade algoritmi koje ćemo mi izlučavati, to je da koriste taj AS. Ako AS 256 ima veličinu bloka od 256, onda će u takom algoritmu može da se vrši substitucija nad blokovima koji su veličine 256 bita. Dakle, vidjet ćemo u konkretnim algoritmima kako se vrši, sada je ono što je bitno da razumete, to je da substitucija znači da se neki simbol iz orignalno teksta uvek menja nekim drugim simbolom u šifrovanom tekstu. Pa sada tu naravno postoje različite strategije, koje će se primjenivati u različitim algoritmima i vidjet ćemo koje su posledice ovole. E sad kao što rekoh, to je ta cezara šifra, to je najranija poznata šifra koji nastala u dobe Julija Cezara i vidjet ćete sama šifra je veoma jednostavna, na dnjom danas nebiste mogli nikoga da prevorite ko je ozbiljen koji se i ole malo ozbiljnije bavi šifrovanjem šta više ovakve zelate kog bi mogu da se nađi u nekom dečim časopisu u okurone neke sekcije, u sudoku recimo da deshifruete neki tekst. Kako radi cezara šifra? Cezara šifra radi tako što se uzme originalno na BCDA, a ovo ovde što vidite je engleski alfabet koji ima 26 karaktera i onda se alfabet pomeri za određeni broje mesta dalje. Znači u ovom slučaju je alfabet pomeren za 3 mesta i substitucija se vrši tako što slovo A u originulnom tekstu će postati slovo D slovo D u šifrovanom tekstu i onda ako imate, izvinjamo se ako imate originulnu poruku, danas duva jak vetar, onda će slovo D, to možete ovde da vidite, slovo D će se preslikati u slovo G, slovo A će se preslikati u slovo D i tako dalje, i dobit ćete ovaku poruku. E sad naravno, ovako poruka kada bi je bilo ko vidio, on bi rekao, upao, ne znači ništo. Vide ćemo ajde nekostane to mala tajna do sljedećeg časa, na koji način ovako nešto može da se razbije, ali ono što je ključnij problem sa cezaram šifram je to, ako znamo, ako znamo koji je algoritm, ako znamo da neko koristi cezara u šifru, pa nema mnogo kombinacija koja on može da uradi, pošto ko cezara u šifre se uvek podrezumeva neko šiftovanje alfabeta, ako ovaj alfabet ima 26 karaktera, ja ukupno mogu taj alfabet da šiftojem za 25 mesta.
 možda se ne izlažavam pravi, ovo nije šiftovanje u erotacija, ali sve jedno, ako bih šiftovalo za 26 mesta, meni bi se ceo alfabeto brno, i onda bi mi se a preslikavalo u a, odnosno dobio bih isti tekst. Što znači da bi smo cezorove u šifru mogli da prikrati, da bih se sve šiftovalo za 25 mesta, da bih se sve šiftovalo za 25 mesta, da bih se sve šiftovalo za 25 mesta, da bih se sve šiftovalo za 25 mesta, da bih se sve šiftovalo za 25 mesta, da bih se sve šiftovalo za 25 mesta, a odnosno dobio bih isti tekst. Što znači da bih smo cezorove u šifru mogli da prikrati, ako bih smo chceli da je opišajmo, ono je standarda način, da kažemo, to je šifra koja ima uloznu poru koji neki ključ, broj ključeva koji postoji u cezorove šifri je 25. Eto stvarno nije veliki broj, broj ključeva, i potencijalina padača će lako isprobati svih 25 kombinacije, čakak neće, ne bi trebalo da mu bude teško, ni da izvede napad grubom silom i da pregleda sve rezultate. Evo, ovdje, možete da vidite kako cezorove u šifru možete da se napiša na jedan malo formalni način. Dakle, možemo da je matematički napišamo, ako je napišamo ovako, onda može lakvo i da se napiše kod, koji im ćemo da implementiramo cezorove u šifru, ili da implementiramo Bluetooth napad. Dakle, ako uzbimo mi svako slovo u originlom alfabetu, nećemo, brojevimo, od 0 do 25, onda ćemo da dobijemo šifrovani tekst, kao encrypciju plain tekst, a ovto je plain tekst, odnosno, osnovni tekst, ključem k, gde je k, taj pomeraj, i ako je ovdje pomeraj 3, recimo, ono što možemo dobrodimo, to je sljedeće stvar. Ako uzbimo slovo a, ono ima vrednost 0, nači ovdje imamo 0 plus 3, 0 plus 3 je jednako 3, 3 po modulu 26 je 3, prema tome, slovo a će se preslikati u slovo koji ima broj 3, a to je slovo d. I tako dalje, i tako dalje, znači, formula koja možemo da opišemo šifrovanje je ova ovdje, da se šifrovano slovo dobije kao slovo iz osnovnog teksta plus ključ po modulu 26. I obrnutu, da je šifrovanje je broj šifrovanog slova, minus ključ po modulu 26 i dobit ćemo originunu slovo. Dakle, to je način kako možemo formalno da prikažemo cezor u šifrova, što nam kasnije mogućeva da to lepo i istrogramiramo. I sad recimo, ako uzbimo i dobijemo ovaku poruku, kao što je ovo ovdje dole koji vidite, znači, ovo x, nr, r, r, r, i tako dalje, tako dalje. Šta bi smo mogli da uradimo? Pošto znamo da se koristi cezor ova šifra i pošto znamo da ima 25 različitih ključeva koji mogu da se koriste, možemo da napišemo ovak ovdje kod, kao što je ovdje ovdje u pythonu, pisan u pythonu 3, koji ćemo ovu poruku da dešifrujemo sa svih 25 različitih pomeraje. I ako to uradimo, da uradimo brute force napad, a to računaru treba manje od 1 sekund, dakle on to će praklično trenutno uraditi, ono što ćemo da dobijemo, to je 25 različitih tekstova, od kojih postoje jedan tekst koji je sa pomeren 3, u kome piše ova rečenica koju mi možemo da razvunemo i kaže, u koliko sati je napad. Time smo otkrili ključ, time smo otkrili originemu poruku i očigledno je da ovakva šifra zarista nije pretreno ozbiljna, koga biste mogli da impresionirate takvom šifrom, recimo i da napišete neku poruku pa da taj nikada ne otkri taku poruku, možda neki kolega koji studira neki društveni fakultet, verojem da ako bi malo bolje razmislili da mi možda i oni čakostali da otkri u sadrežet takte poruki. E, ali tako cezra ova šifra se jako dugo koristila, zato što je ona postojala u vreme kada broj ljudi koji su došte bili pismeni, je bio jako mali i onda kada i ti pismeni ljudi dobiju poruku kojoj ovakav neki čuda niz slova, onda su verovatno bili impresionirani i stvarno nisu znali koja je poruka iz-a toga. Ali naravno, iz današnjij perspektive je ovo podpuno neprikladna šifra, zato što je suviše jednostavno je razbiti i zato što postoji mogućnost da veoma lakko izvedemo Brutfor snap.
