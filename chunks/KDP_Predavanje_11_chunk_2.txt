 Što ću otići na drugu stranu? Vima te samo identifikator, to nekoliko bi ne nalazi se kod vas na raconaru tuđe postavstvo sa nama. Ne, vas se nalazi samo ona prikvjicica kroz koji to možete da pošaljete o noj drugu stranu. Ako treba da goznićete da pošaljete? Kao te prikvjice koje ste slušali koji ste videli za laboratorijski vez. A kroz koje možete se ovo ovde da... Ako smo da člindka dobro? O člindki je isti kao pre, jedinostim moment on pošaljete za htje i onda očekajte. Klindka i servenska strana. A u situacijama da kod smo da realizamo serven sa jednim jedinim uperacijam se zanimarilo razliku. Što je po tome? Ovo ovde metod je... Ali mi se tu još nesto razlikovalo. Geravatno se ništa ne bi razlikovalo u onom i našte klince u srednjih. Uzali da pravite aktivni moment. Ako je realizovanje, koristići synchronite, verovatno bi skoro sve ostalo isti. Svodno se da probate, da pročete kora korak po korak, imate, da li bi se tu išta promene? Ja mi se ti išta skoro nekako. Ovo simtondost je o asihronne komunikacije koristim i sve. A ja smo ni radili da ještje još nesta kod nasim vištji. A da i smo išta. A to su bili oni korovih koji interaguli. Išta, ome i cera. Gde smo mi pravili raznorazne strukture, gde te strukture mogu da budu prsten, zvezda, potpuno povezan graf ili neki delimiću povezan graf. Taj delimiću povezan graf nije ovdje nismo. A taj delimiću povezan graf ste razmati na dvijesno. A kada ste radi otkrivanje topovog nije grafa i poločije kod nemoj otkriva. Graf. E, a zasto ovo ovde sad da razim? Samo jednom primjer zamrti. Jedno. Jednostavom primjer. Proces 1 hoće procesu 2 pošelje poruku. Proces 2 hoće procesu 1 poruku. E, zablokirališ. A kog ova strana, kaže sema. A ova druga strana takođe kaže sema. Ovo ovde je mrd blokiranje. On lo da funcioneš. Jedna strana mora da palje poruku. Ovo je koliko lako se pravi ovde mrtvo. E, kao što svi mali koć semoforo, ako na početku imamo svoda weight, a onda sigurno, onda nastane deadlock. Ovde je situacija i kada imamo na svim mestima resiv, tada nastaje deadlock, ali ako na svim mestima imamo isent i tada nastaje mrtvo. Jeranje kod ovih ovde mrtvih sigurno. Morate mnogo da vodite radvuna kada programirate nešto. Jedna strana mora da radi sent, druga strana mora da radi resiv, inače imamo deadlock. Nije možemo da nastajno dalje izvašavanje. E, ce vrata mnogo. A, to je problem određivanja minimalnih i maximale dajednosti, rekom od ona tri slučaja. A, to je problem određivanja minimalnih i maximale dajednosti, rekom od ona tri slučaja. U prvi slučaj je bilo centralizovanja odrešenja. U tog centralizovanja odrešenja, svaki korisnik je slao, centralnom ploru svoju ubrejegnost, centralni plora. A, ovo je bio odličen kao proces mela. Je prima od ubrejegnosti, određiva o milimini i onda svakom od seda, slao određenim milimini, koje koriko smo pisali presta bilo. A, ono ste sada želimo da vidimo. Ali bi se išta promenilo u ovo... ...spa sent stajalo, sent, sent, i ovde, vakulim, sent stajalo, sent. Dalje će se išta promeniti i... ...dali će ovo resenje možda napraviti? Ili će ovo ovde resenje nastaviti sa simu e-prodara? Možeće raditi sporeje nego pre, možeće raditi pojednako brzo koji pre, u to za sada ne uvazimo, ona će imamo bogu realizirati. U praciji to moramo da realizimo korisnici centralnu telepraciju, jer je to paradigma, na primerku, kako je dotakno, da to je platform. Ima možda se platforme a mogućnog da realizuju i da rade korist, synchrono bilo asynchronizirati. Te je spekoćnog. Ima, ima mogućnog rada i sa synchronom komunikacijom i sa asynchronom. Ima samo synchroni. Ima, ajde da pogledamo ovo. Stavbeš, gledam. Sigurno kada nastavite derlog, ako ove strane šalje ili ako ove strane primjevi. Da bi ovo moglo da funcioneše, jedna strana mora da šalje poruku, druga strana mora da primakla. I li ne vidite? Dali smo to tako ovo. Think to the send, ovo je šalje poruku. Ali to the send, jeste, dali ovde vi siv, jeste, u čvijek. Ove ovde dve strane su uparene. Jedna strana šalje poruku, druga strana primakla. Da ta druga strana, to je proces, u kvaka da primi sve poruki, odrednice minimalni macim. Šta on da radi, ta je proces. Taj proces isvakom dobiti se da treba da pošalje, a određeni minimu ima. Čalje prejde. Čali ovde imam o mogućnosti da nastavimo rslo, šalje ove druge strane obovezmu primjevi. Odo ovakvog rešenja, a mi nemo mrtvog blokiranje. Jedna strana šalje poruku, druga strana prima poruku. Podpornost u upareni ovde protokolje. Asimetrične protokolje prvakacije, a gde i jedna strana šalje druga primakla, u uparene protokolje. A ako se sečete problema sa bezvi, koji je razil koje je problem četa, koji je isto progromške jeziki java, tamo smo imali podpornost simetričnoho publikacije. Bilo koja moglo, bilo da šalje poruku, a ako bilo da prima poruku. I to nismo mogli da rehnizimo koristići jednu nisu. Ego smo morali da realizimo koristići dve niti. Jednog je šalje poruke, druga će da prima poruki i na taj način je obezveđeno da ne dođe dobar foment. Sto smo stavili dve niti da rade taj sval. I nemo drugo rešenje, to je ono potpornosti metrično. Gde svaki čvor treba da pošljesi, njim svojim sosobima brednost i onda od svakom sosobima da primim brednost. Pidimo, da li ovakvo rešenje sada ima a pošlje poruku svi mse ispite. Ok, poruku treba da otom. A da bi ovo ovde moram da s druge strane risi. Risi s druge strane nalazi risi. Vim procesi se na početku nalazi u fazi 7. Či šaju oju brednost. Kada završe fazu slanja u ovakvo rešenjem i prediđeno da dođe u fazu prijeva. Ovo ovakvo ovde rešenje i to nema risi s druge strane. Naše rešenje ovakvo napisano za asimfronnu komunikaciji sasvim u epakim. Zato da ste imamo buffer da je buffer možemo da pođim. Buffer nije bez konacom kapaciteta. Buffer je konacom kapaciteta, ali se ništa neće loše 10 i ove druga strana nekada nešto preozet. Da ću mi ovde posmatremo da poruke koje mi poslijemo mogu da se znam. Sada nećemo razmatrati da će doći nekada do ograničenja po punjavanja tonu buffera. Nećeš da se našli. Nećemo popliti buffer. Ali praktipsno treba voditi racuna da u tom bufferu nema zaostali poruk. Uprilizavite problem a prizvodžaciji potrsača nije nije. Taj buffer ubaciti čitove poruki pa onda kažete ha nema veze poruka mi stoji u bufferu u komunikacijenu kanalu, ni u bufferu. Pa i to je u memori i to mora da se čuva. Tako da. Ne, nije to realizovati. Ako treba da realizovati problem prizvodžaciji potrsača ostaj komunikacijeni kanal. Toko ne dobijete potvrdo da smete a razmenujete samo podatke koji kažu da nešto treba da razmenujete. Oču da ubacim, ali ne ubacim poruku. Tek kad neko kaže e, sad možete da mi posliliš poruku. Tek, tam posliliš da se poru. Teste buffer, da možemo da posmatremo da je velik i da možete da stane sašta.