 tako poveza, nekako poveza. Iskoristimo da rade sortiranje, pretraživanje, izbacivanje, neko operaciju. Znači, koćemo da napravimo neko operaciju koje ćemo da odradimo na tim našim podacima koje imamo. Neki proces će biti izvorište podataka, a neki proces će raditi neku obradu na tim tim podacima koji. I najadostavnije obrada koji ću mi ovde raditi je obrada sortiranja, pretraživanja te naše struktura. Kako izgleda ta naše struktura? Ileto stablo, ileto graf, ileto niz, zavisi od broja čvorova i od toga kako mi povezemo sve to našu topologiju. Sortiranje možete obaviti. I sa tim da imate čvorove koji su povezani na red, tako da imate pipeline algoritm za sortiranje, a možemo čvorove povezati i u stablo, kako ćemo raditi ovde binarno iliternerno stablo, a tako da citi čvorove mogu da obavljaju odgovareći deo tog sortiranja. Znate šta je sortiranje? Treba da napravimo uređeni poredak ovih naših element. I to je ovdje što piše predikat. A ovo predikat kaže šta treba da se odradi na kraju sa tim našim podacim, kaže za svako i, a koje je između 1a i 1, onosku treba da imamo vrednost koja se navazi na jednom elementu. Treba da bude manja ili jednaka od one vrednosti koja se navazi na narodnom elementu. To je predikat, znači mi želimo to da se desi. Dobro, da bi smo to napravili, mi moramo možda da radi u permutacije vrednosti koji nam dolaze. Znači da menjemu mesta odmijeg podata kako nam dolaze, da bi smo ovu dobiljali kao konačan rezultat. I koji sad ovih cijk procesa je pitanje? A ok. Ajde, znam ja, sad šta treba da odradi? Evo, koliko ima podata? A, n. Može da bude poznato u naprednjih. Svi proces imaju statički betilison od nizi do življimnjost. Ajde, to je to. Uga varijanta može da bude napravljenu da o ne što nam kaže šta treba da se radi, nam kaže koliko iznosi ta prva vrednost i možemo da koristimo specijalnu vrednost za oznočavanje kraja našeg niza. Ako odete pogledajte one predkoni primer, vrlo jednostavan, ali je primer koje nam omogućemo da vidimo da postoje te specijalne vrednosti. I ovih ovde, ovo je bila specijalna vrednost Kerejči Tern, a ovdje smo slalike o specijalnu vrednost na kraju End of Line. Ako li ćemo vidjeti da te specijalne vrednosti mogu da postoje i ovamo, EOS se najčeće znavatite specijalno prim, a koje će nam oznočavati da radi se o kraju ovog toka naših podata. Ako treba kroz to dopraimo neku dodatku kumri. Šta smo rekli, na koje način je dobijemo dužine tog da što treba da se obavlja, ne samo podatke, ili će biti svima poznata u napreda, niz dužine 100 kraj, samo se to radi. Ili ne vam pojima koja je dužina, znam da će to biti prvi element koji treba da se pošaljem, a koji svi treba nekakvog doda. Ili sledeće varijanta koristit ćemo specijalne vrednosti da kažemo da smo došli do kraja te naše koristite, tih naših podata. Značemo napravi pauzu, posle pauzu ćemo vidjeti kako da povežemo ove naše elemente u jednu brežu sa bidervnim stablom, kako bi smo mogli da odradimo sortiranje. Da li možete imati nekih pitanja? Ako njelopitanja pauzam. Dobar dan. Dobro došli na ješen čas predavanja na prebjetu konkurentno i distribuerano progremiranjem. A vidim da je bilo nekih pitanja pred kraj predtkonog. Časno pa ide da odgovorim na to premiglošno krememo dalje. Predtkonog godine bio jedan zadatak sa filterima, a koji je koristio ternarno stablo. Da smo imali tri ulazna kanala, koji imao jedan izlas, koji preko kog treba da se šalje taj sortiran nis. Mi ćemo danas na ovom času raditi kako se radi sa bidervnim stablu. Znači sličanje postupak samo što ćemo morati da posmatramo tri ulazna kanala, a ne dva kao što imamo ovde privirno. Ništa se mnogo neće razlikovati, nače posmatraćemo prvi, drugi, treći. Unao će biti komplikovanija logika. Da li smemo da baferovamo podatke, a ako drugače nije rečeno u samoj postaci. Filterski proces i u principu smiju da baferovi tluvaju podatke 1, 2, 3, 4, 10, 50, 10.000 podataka u tom našem izlu premiglošto se ti podaci prostvežaju dalje. Ali je ideja da se možda što manji broj tih podataka čuva. Možda je dobro da primite čita vniz, onda da ga sortirate pa da pošaljete dalje. Možda to nekad jeste dobra ideja. Da primite veću kolicinu podata kao jedno. Zašto? Jedno zašto možda drugo? Treba da razmišljate. Kod distribuiranog programiranja postoji. Komunikacijoni trošak. Kako se cena transporta poruke, plus koliko je cena obrada. Kako je cena jen, ne obrada ili više tih obrada, koliko godine imamo. Koliko je cena da se poruka transportuje. Veme koje potrebno se poruka transportuje može da bude nezanimarljivo. Ako se setite, odok što ste smošali na mležama. Ako ste svali, byte po byte. A vidite, na jedan byte poruke da nakacite 100 byte za glavlja. O, nikako ne valja tako da ste. Ako da u distribuiranom programu, trebalo da proces, nekako, koliko će iznositi ta obrada, koliko će iznositi to što treba da se transportuje. U primari jedno mi je bio na ispitu, ne ispite, na projektu zadatak, da se napravi distribuirano sortiranje niza. A tu nikako nije bilo dobro da se byte po byte odnosno podatak po podatak šalja s jednog racunara na drugim. Ustav očekivalo poslati u jedan megabyte ili nekoliko megabytea, pa tamo on neksortira tih milijona elemenata, pa ću na drugi racun na poslati milijon, pa ću ja posle raditi usortiravanje tih izola. Ako ćemo još morati da vodimo na čerit, ovo sad pitanje da li ćemo morati da vodimo racuno o tome šta smo poslali, da bi smo vodili evidencija o tome, da smo poslali duplikate, da smo izbacili duplikate, to bi možda internom logikom moglo da se realizuje. Ako čvor, dobi je vrednost koju već ima, ja imam broj 10 i dođem im broj 10, ili ja imam broj 6, dođem im broj 6, ja ne. Treba dalje da prosleđem tu vrednost, ja već znamo. Alaz. Vidim ćemo kad budemo razmatrali problem krivenje topologije mrežu, to ćete raditi na veznom, postoji materialima. Il treba da se šalje topologije čitove mreže, da il treba da vodimo racuno o svim u kojem smo poslali porođe. Ako ne moramo, olje da ne šaljemo sveta, da ne čuvamo tu ogromu količino informacije, koji će vremenom samo rasti, nego minimalnu količino informacije, koja nam je, na primer, da li slati topologije mreže ili ne. Možda, možda je to dobro, a koji ćemo unutar same poruke, možda da odredimo kojem putanjem želimo da se poruka kreće i onda možemo da odredimo smanjenu broj transporta poruki. Ovo ćemo da minimizuvimo, kako ćemo puta transporta vati poruku, samo što će poruka biti znatno veća. Če tu opet treba da se proceni. Koliko iznosi komunikatir i troškovi, koliko iznosi troškovi obrade. I sad koo procenite, da li se više ispatiti čuvora ili možda još jedan korat išobrada, ali ako se ponavljaju isti brojevi, kada čvor dobi je vrednog z koju već ima i je pitanje, ja što sad s tim treba raditi. Da li ja treba da sačnom 10 puta broj 3, ili treba da sačnom 10 puta da se pojavio broj 3. Znači da će da zipujem tu informaciju kocebe ili me. Če to je nešto...