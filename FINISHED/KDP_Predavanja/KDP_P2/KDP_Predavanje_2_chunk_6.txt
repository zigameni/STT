 A wait nije in 2. Ako proces 2 nije u kritičnoj sekciji onda in jedan jednaku true. Onda dođi kritična sekcija i onda kažemo in jedan je jednako false. Možemo dodarni in jedan jednako false ilom ovde treba zagradica već je manje. Pa sada bilismu kritičnoj sekciji, pa onda samo jedana, al dobro, ali ma jedna druga svar. In jedan jednako false. Šta to znači? False je nešto što se srečunava u suštini samo na lokalnim promenjima. False je lokalna promenjiva. Mošte tako posmatrati. A in jedan je jedan kritična resurs koji dodajemo, ovo je kritična referenta koji dodajemo vrednost. Tako da ovim ovde posljednjem vrednom imamo ispunjenu svojstvo at most ones property. Kako izgada kod zove drugi proces? Pa opetisto. Kažemo wait. A, ok in 2. Opojto opet za prvi proces tamo tako stavljeno. Nije in 2, in 1, jedan jednako true, kritična sekcija, in 1, jedan jednako false. A za ovaj drugi, da ću vidjeti, samo se tu promenjimo brojkica. Koga čekamo, šta postavljamo. Ivo ovo radi? Ili ovo... Ne radi takoć? Znači ovde sad pitanje. Dale, ja ovo await. Mogu transformiti, u while... Sad vi tu imamo not, not in 1, skip. Ali not, not, to mogu obrisati, nisu i potrebna 2. Znači 2 puta komplementiram nešto, to je kao da nisem to nešto ne stavio. Ako to nešto buv. Nije problem da se ovo ovde provjerili, ali je problem što će ovde dođi... in 2, jedan jednako true. Nije problem da se ovo kao await, realizuje nedeljivo. Ovo možemo provjeriti nedeljivo. To je ok, to sam gore napisao. Ali ovde gore između već je manje, ne stoji samo to, nego imajuš jedan deo. In 2, jedan jednako true. Tako da nije ovde ispuneno, mogu svanj s proportima. Ovo ovde takođe ne radi, kako ne radi, pavalj da radi. Ajde, ponovioš jedno, što ovaj ovde ček. While, provoću da napišam sa to kao while in 1, skip. I ovde do ovde stoji, in 2, jedan jednako true. Pa onda radi to što radi, in 2, jedan jednako false. Što radi ovoj drugi? While in 1. Izvijenc, while in 2, skip. In 1, jedan jednako true. To što vić treba da se radi, in 1, jedan jednako false. Zašto ovo ne valja? To je da bi se odbitno stvar. To što smo za ovu ovde možda imali nešto da možemo dodradimo, ili to baš tačno da smemo dodradimo tako. Odgовор je, a nije, jer što ovde možda se desi? Šta je na početku? In 1 je false, in 2 je false. I šta bi se ovde desilo ako bi prvi došao na uslov i drugi došao na uslov i sto vremeno? Prvi bi pročitev in jedan jednako false i prošao bi daj. Znači ne bi valja se ne bi izvršio. I drugi ako bi isto vremeno došao, ovde dođe scheduler za ustavi toga, pusti ovu drugu stranu, izvrši se in i on bi prošao. Tako da bi se desilo da 2 procesa uđe u kritičnu sekciju i ne bi bio ispunjeno što se predikat, odnosno sistem ne bi radio to što treba da radi. Nije ispunjeno to što radi naš problem. Prdikat koji opisuje šta ne smije da se desi, odnosno šta mora oveg da se desišava, bi bio false. To što sam ja samo prebacio, da je in jedan jedan ko... tako nešto to ne vadja. Znači ono await ne možemo uvekt transformisati u while skip. To smo imali maločas, nismo mogli da odadima čekaj za nismo ja pročito, da je ono in jedan atmost once property. Na toma mesto je atmost once property, ali ne na ovu i ovde ce li nije smo mi već gore garantovali ovdje da je kritična sekcija, da se izvršava samo jedan. To smo već nečim gore drugim garantovali. Ali kada smo proveravali, ova dva uslova, mi uopšte nismo imali. Čekaj smo ušli u kritičnu sekciju, sikornu smo jedini. Ali dok proveramo taj uslov i ovaj ovde uslov uopšte nismo u kritičnu sekciju, ako nismo u kritičnu sekciju, onda ovo nije atmost once property. In jedan se postavlja s jedne strane, a koristi in dva, ono drugo ima kontra, jedno postavlja drugo koristi. Znači i jedno i drugo se pojavljio isa jedne i sa druge strane, tako da nije ispunjeno svojstvo atmost once property. Ako nije ispunjeno svojstvo, to ne znači da ne radi. A u on konkretnu sluči smo pokazali da ovo rešenje ne valja. Uspeli smo da uteramo dva procesa u kritičnu sekciju, da će i jedan i drugi sušni u kritičnu sekciju. Kako smo ih to uveli u kritičnu sekciju, tako što smo postili prvi, oni od radiovate, završili smo blakpa slučeno se, desilo da ga scheduler zaustavi. A mi ćemo ovde koristiti da slučeno scheduler zaustavi na najgore moguće mjestu, zato što to služi za testiranje. U većini slučeva, kada biste pokrenuli ovaj program na nekom računarom, mi sasim lepo radio. U većini slučeva. Samo što bi se u nekom teravitku desila katastrofa. To nije nešto što mi treba da isprogramiramo. Možda nekde drugo je dozvoljeno da se to desi, ali napredve to konkurentno i distribujereno programiranje mi moramo to obovizno da izbegnemo. Znači ne smete da dozvoljite da dva procesa uđi u kritičnu sekciju, jer mi to ovde treba da garantujemo da se neće desiti. Dobro. E onda su ljudi uzeliti da razmišljaju. Ovo sa dve promenjive. Uff, to baš i ne pijevot. Miš možda i možda sa dve promenjive da se resi, ali ovo mnogo komplikovanu. Možda i nije. Ali onda su ljudi reakli, ok. Mogu si jednu promenjivom je ovo da razreši? Mogu je ovaj problem da resim si jednu promenjivom? Znači neću da imam i njih jedanih. Pa, nekogću zeti jednu promenjivu koji se zove LOC. LOC kaže, neko koristi kritičnu sekciju, ili niko ne koristi kritičnu sekciju. Mezobzir, da sam to ja ili neko drugi. Ako je LOC jednoko false, niko nije u kritičnu sekciju. Ako je LOC jednoko tri, a drugi, neko je u kritičnu sekciju. I ovde resenje koji smislaoći u da posmatramo, usluštini je potpuno simetrično, da li ima 2, 3, 4, 5, 10 procesa potpuno sve jedno. I kako bi to glasila? A wade, not LOC, LOC jednoko true. Kritičnu sekciju. LOC jednoko false. Zašto nam ovde dole nije neobhodno da stavimo? Če to sad vi na ispitu, vi treba da staviti to? Ili ako ne stavite to, ako da stavite komentar, zašto nam ovde nije neobhodno da stavljamo ovo znake veći manje, koji bi rekli da to mora da se odradi nedeljivo? Zašto se to već radi nedeljivo, iznada stoj kritična sekcija, već je jedan jedini proces koji se tu nalazi. Ako u kvom slučem dobijete, dopišete neki algoritm, kad go pisujete, ili stavite da je ovo između veći manje, ili ne morate staviti pošto se to ne nalazi, nego sa strane napišete komentar, ovo ovde se već izvršava nedeljivo. Zobavizamo, u slučenih sklonitove znake veći manje i sa strane stavite komentar, ovo se već izvršava nedeljivo. To je super za jedan red, ako imamo jedan red koji možda se desi. Ali će nastati problem, a šta ako imamo dve dodale vrednosti tu na kraju? E, sad je tu bitan i rednost, pokom ćemo mi to nešto raditi. To ćemo videti, da gludemo došli do jednog od algoritma, da je bitno, pokom rednosti ćemo postavljati dve promenljive. A bit će bitan na rednosti. Tako da tamo tu baš morati da naglazi.