 Na predstavnom predavanju ste čuli nešto o tome kako funkcioniš u federacijednitete, odnosno načinu na koji se ostvarove single sign on kada se koristi samu protokol, odnosno samu ljeg jezik. A sad ćemo se pozavovati o njim drugim delom te priče, odnosno u jednim drugim protokolom koji radi to slično. E sad tu ćemo istoći malo koje su razlike. Najma i on, takođe, mogućava single sign on samu najden malo drugačiji način, a to je protokol koji se zove o autohu, odnosno open authentication. Dakle, federacijedniteta se koriste u onim situacijama kada imamo različite firme koje imaju ili servise ili pruže identitete gde onaj srednji entitet odnosno, onaj korisnik koji koristi resource provider, njemu ne može da se veruje, odnosno može da se posumlja da će on izvršiti promenu poruki koje ide od identity providera prema resource provideru, te je onda potrebom samu kako bi se te poruki zaštitilo. I videli smo, to sam vam pokazalo i na primerima, i u krajnjelinii u demonstraciji druga vrsta protokol i druga vrsta, da kažem use case na gdje smo vjeziku, je ono što radi o autoh i to je ono što ste videli verovatno verujem da ste do sada probali i da ste imali bar neki put to iskustvo da odete na neki site i da vam pružat ve opcije, jedna opcija je da se ulugujete da napravite nalog na tom siteup, onda imate još jedan alog koji treba pamititi, koji treba čuvati, a druga opcija je da se ulugujete na taj site, koristići vaš nalog sa neku drugog sistema, taj drugi sistem može da bude Google, Facebook, Microsoft i tako neki veliki provider IT usub. E, u tom slučaju se koristi o autoh protokol. E sad, ja vam neću ispričati i ove scenerie u koji ćete vidjeti ovde za korišnjenje o autoh, neće biti za baš taj slučaj kako se radi log u imes na određenih sistema A, pomoću kredinicijala sa sistema B, li ćemo ovde uroditi jedan malo drugačiji primer, ali suština je istara, zumećete, bi će vam jasno da, zato što se zapravo ova šema koji će vam pokazati je služeniji o te šeme proveri identiteta, jer uokiru ove šeme je sadržena i proveri identiteta i pruženja nekih daljih uslita. E sad, vajde da vidimo šta ovde imamo i koji su ovo entiteti koji ovde postoji i šta je scenerie, o koji ćemo popušiti da obradimo na uokiru ove priče o autoh protokolu. Dakle, predpostavit ćemo da postoje dva interesantna internet servisa, jedan internet servis i servis koji vam pruža mogućnost da na internetu imate svoje slike koje stitulali i recimo ako imate android i telefonu da znate da ove šta goda slikate na telefonu pojavići se u onom Google Fotosu, dakle to bi bio takvim servis. A drugi servis to je sad neka firma, recimo zamiste neki startup koji je došao na jako lepku ideju, da može da vam omogući da bilo kako slike koje imate, da ih očstvam pa da napravite da imate neku fizičku uspomlenu sa vašeg neku značinog događaja sa svatbe ili neku putovanja i može da vam ištam pa te slike, pri tom to će da ištam na nekom jako kvalitetnom papiru, da napravi knjigu od toga, dakle da se to uveže i da napravi tu vrstu da odatne urpuk. E sad i takve usluge veći postoje, možda je nekod vas čak nešto tako i koristije. E sad, ono što bi bio najprosti i da kažem najglupli način da se tako nešto realizuje, jeste da koji imate slike, recimo slike sa neku putovanja, da uzmete sve te slike da downloadete sa aulog servera, vada onda te iste slike uploadujete prema servisu za štampanje i da vam servi za štampanje naplati uslugu i da vam da odstampate. Ono što bi vam je bilo zgodnije kada se to već sve nalazi negde, to je da u mestu ove putanje koje je išla od kroz vas, kroz vaše čunar i kroz da je upload slika na site za štampanje, druga opcija bi bila da nekako ova dva servisa komuniciraju i da servis za slike prebacite slike direktno ka servisu sa printovanje, a da vi ne morate da učistujete u tom. E sad da bi se to desilo, ono što u suštini trebao da se desi, to je da servis za printovanje zatraži od servisa za slike, da mu vam pošalje slike. E sad servis za slike to ne bi trebalo da smedaj da uradi, pošto slike su vaše vladi što tu postoje vaš privatne informacije, vaša slika je vaša stva. Ne bi smo jo te kako da prosledite slike, tako da ono što ovaj servis za slike mora da uradi tu, mora da vas pita i vi morate na neki način da odubrite to korišći. E to je scenariju koji ćemo pokušati sada da obradimo u opirove priče o autoheprotokolu i to je jedan primer u kome se ovaj autohepo koristi. E sad ovdje samo htev da napomenem jednu bitnu razdiku u to modelu sigurnosti u odnosnu na ono priču o identiti provajderima i servis provajderima. Dakle, ako bi smo zamistili ovde situaciju da je ovo neki servis provajder, dakle, ovo sad nije priča o autoh, nego priča o federacijem identiteta. Ono što sam vam rekao na predkodnom predavanju i što sam vam pokazo, to je da ono čega se plašimo ovde, to je da kada se, znači, scenariju tako da se vi obratite servis provajderu, servis provajder vas redirektu je ka identiti provajderu, obovi se autentikacija koristnika između identiti provajder i koristnika i ako je sve u redu, onda se ovaj odgovor kroz browser redirektu je prema servis provajder. Ono gde je opasnost u ovaj situaciji, to je da, recimo, ako u pitanju neki servis gde je vi kao student i ja kao profesor ne bi smo imali istu usubu, naprimer, ja bih imao nešto više, ako u pitanju neki fakutecki servis, ima bih nek, više mogućnosti nego vi. Ono što biste vi možda želili ovde da urodite kada taj odgovor prođeg kroz vaš browser, to je da ga presvetnite i da promenite neki atributi u tom odgovoru, kako biste omogućili sebi pristup kao da ste profesor. Da bi se tako nešto sprečilo, onda zbog toga je kod Federaci Identiteta uveden saml, i u okuru tog samla to sam pokazala, to ste videli da postoje, postoji mogućnost da se taj odgovor podpiše, da se ti atributi i sve to što je u okuru samog odgovora tigitanog podpiše, tako da vi ne možete da izlušite promenu tog odgovora, a da one servis provider to ne detekte. Eko u ovaj situacijku kada govorimo o oponententikešnom malo je drugačiji model zašto, zato što biste legitimni korisnik i ovog ovde servise za slike i ovog ovde servise za printlje. Dakle, ono što se ne očekuje, to je da će ovaj ovde korisnik m, hteti da modifikuje te odgovore, odnosno te poruki koje budu prolazili kroz sam browser koje se budu redirectove, tako da je nivost i burnosti koji u ovom primjero koji ćemo sad viditi nešto niži od onoga što pruža federacija identiteta i vidjet ćemo da ovde nema, ne mora da postoji, može a ne mora da postoji digitarno popisivanje ovih poruk. No dobro, nadam se da ja sam scenariu koji hoćemo da obradimo, a sad ćemo da vidimo samo kako funkcioniš. Znači prenego što u ovšte krene bilo kakva transakcija, ono što mora da se desiti, to je dve firme, jedna je firma za slike, druga je firma za štampanje, moraju da uspostave neki ugovorni odnos, odnosno moraju da se dogovori uvezi sa tim kako će se ovakva transakcija obaviti, da bi se to obavilo, da bi se to desilo, klient mora da se registruje pod servera i ono što će klient tu dobiti, dobije će neki svoj identifikator, dakle ova firma sa slikama će ga upisati u neku svoju bazu koristika koji mogu da koriste njegova identitete, on će dobiti svoj identifikator i dobije će se neka delje na taj nadrednost. E sa čem je oslužeta delje na taj nadrednost, zavisi od mehanizama, sigurnosti koji će se koristiti, pa ćemo to isto malo prokomentarisati nešto kasnije, ali u principu to je proces registracije, taj proces registracije podrozumeva da se ove dve firme se dogovorili, da će se za štampanje slika i za princip slikama koristiti nalozi ove firme sa slikama, naprim. to je Google, da će tu biti neki iz-a ekonomisti financanski interes ili tako nešto nije pretrenobitno, samo prosto da razumete da prenego što krene bilo kakva transakcija, mora da postoji ovakvom. Takođe, ono što mora da zna klijent odnosno ova firma koja se bavi štampanjem, ono mora da dobije neke adrese na koje će se javljati kada treba da se izdrši ovakva transakcija. Znači to je adresa u koje će dobijeti neke privremene kredincijale, odnosno te tako zvanje privremene tokene i tokene, da će to prosto skupurilo preko kojih se komunicira. I takođe adresa preko koje se vrši autorizacija. I to je nešto što se dješava prenego što ste vi izamislili da hoćete da izvršite ovakvom transakciju, da očnampate slike koje se nalaze na nekom drugom servisu. Esad, ono što se dješava kada vi dođete tu, naravno vas interesuje da štampate slike, što će reći.
 da prva stvar koji treba da oradi, to je da odjete na site za štampanje koje ima neki svoj url. Tamo možete da se uloguje te na bilo kakav način, to može da bude ili možete čak site radi tako da nema logovanje do trenutka na primer dok se slikine prebacije ili dok ne dođe faza plaćanja, pošto predpostavim da takak knižitra koje se štampo bi trebalo nešto i da se plati. Zvakom slučaju vi, kako koristnik odlazite na stranu printex.com tam obirate servis koji hoćete da koristite i u okiru togo biranja, on sad može da vam kaže, na primer sad naravno zamislit ćemo kakva aplikacija funkcioniše, možemo da predpostavimo da postoje dve opcije, jedna opcija kaže upload da uploadujete svoje slike i da je tamo imate neki foto album koji ćete da složite, a druga opcija kaže transfer u slike sa sajta, sa ovog servera koji se nalazi na sajtu za slike. I onda ako se tako nešto desi, o prvi korak koji treba da se desi, to je da se ovaj sajt za štampanje obrače sajtu za slike sa zakdevom da dobije tako zvanje privreme nekredenciale. Videćete u celom ovom procesu se dva puta traže kredenciali, znači u ovoj prve faze se traže tako zvanje privremeni kredenciali, odnosno privremeni toki. I kada sajt za štampanje se javlja sajtu za slike, on u okiru tog za svog zahke, u okiru oje post komande, on mora da pošalje zvoj identifikator, pomoću koji ga će ga prepoznati, i pošalje svoj ključ, takođe može da se definiše mehanizam digitalnog popisivanja poruka koji je ovde definisam da bude chmac sa SH1 algoritmom kao hash funkcijem u okiru chmaca i šalju se i neke slučajne vrednosti koje su potrebne sada za te mehanizme digitalnog popisivanja. To je prvi korak, sajt za štampanje se javlja sajtu za slike i kaže daj mi privremene kredenciali. Sajt za slike prepoznaje korisnika, prepoznaje njegov ključ, čitra ove digitalni podpis, zadovoljenja ovakim zahkemom i šaljec za slike odgovara privremenim tokenom to je string koji izgleda ovako. To je neka kada string koji je dobijen koji je se u doslučen na vrednost, nema neku pozadimu i za to ve kako je formiran i šalja ga prema sajtu za štampanje. To je ono što ovde može da nam bude čudno. Dakle, kao što možete da vidite, ovo ovde to je deo urlija i u okrhu urlija se, košte to čak i da vidite, sugeriše na koji način će biti poslata i token, znači šalje se okr u urlija i kao što vidite, taj token je u otvorenom obliku, znači može svaku da ga pročitati. Međutim, ono što nisam napomenu, ali nije kasno sada da kažem, to je da podrazumeva se da sva komunikacija između browsera koristnika i sajta za štampanje, između browsera koristnika i sajta za slike, i između dva sajta je zaštićena Telesu. A to znači da sve ono što se šalje kroz ove poruke će biti e kryptovanu i nećemoći neku treće lice koje bi eventuorno presetalo te poruke da dođe do ovog sadršenja. Znači, ono što će uraditi sajt za slike, u koliko je provario klienta i zadovoljeni njime, on će mu poslati ove privremeni toki. E sada, to je da tako veš neku inicijalno upoznavanje, odnosno prakajša kroz ove inicijalne toke se definiše ta transakcija jedna, a ono što sada treba da se desi, sada treba ovej sajt za štampanje da redirektu koristika prema sajtu za slike, kako bi on autorizoval pristup svojim slikama na ton sajtu. I to je ono što je sliječi korak, znači, sajt za štampanje, zahteva autorizaciju od sranih koristika i preusmerava koristika na sajt za sliki. I ono što će se desiti, to je da će u browseru koristika, sada da se pojevi nova stranica, koja će pripadati ovom sajtu sa slikama, gde će ono imati priliku da unesi svoje kredicijale, a ono što ovde postoji, dakle, u okru overe direkcije postoji oznaka tok tokena, kojem se zapravo označava, o koje transakcije i reći, zato što su su i u kasnijih porukama referisati na taj toke. E sada, e mu nosi svoje tradicijale, ako je sve u redu, ako je dobijeno do duvarijicji odgovor, opet označava ići poruk o nim prvobitnim tokenom, sajt za slike, šalje taj tako zvanim verificator, koji im potvrđuje da je u pitanju taj korisnik, i ta informacija se prosleđuje prema sajtu za štapanje. Znači ako je sve u reda, oddajmo slično funkcionisani je kao kod federacija identiteta, provere kredicijala i onda redirekcija nazad ka sajtu zaprituva. Međutim tu sad nije kraj, u ovaj fazi, ono što se dosad desilo, to je da je sajt zaprintovanje zapravo dobio potvrđu, da je korisnik M autorizował pristup svojnj slikama, ali taj zahtev da se pristupi slikama još nije poslj. Nakon što je klijent za štapanje, taj sajt za štapanje dobio ovu verificaciju, on sad da šalje noviji zahtev koji će se dobijeti noviji set tokena, znači on sad da šalje noviji zahtev ka sajtu za slike, da je kaže, ja sam taj, taj, ovo je taj token inicijan privremeni koji ste mi poslali, a ovo je verificator koji je potvrdio da se koristik slaže sa ovakim zahtevom, i on ovde sad traži ne pristup slikama, nego traži noviji set tokenu, odnosno noviji token. Sajt za slike odgovara novim tokenom, ka što vidite možda sad ovako na obrazinu kad se gleda prezentacija, ti, te vrednosti nisu, niste uhoterili da su istali, kad budete pregledali prezentaciji, vidite ćete da to nisu iste vrednosti. Znači, sajt za printovanje dobio noviji token i taj noviji token mu sad o mogućeva da on pošalja ove get zahte, komu će da kaže pošaljimi slike sa raspusta, te i te, i da pošalja odgovaraće ove token vrednosti koji moći potvrditi da je sve u pitanju te, da je sve što je ovde što se razmenuje, deo te transakcije. I naravno, slike će biti poslati. Dakle, to je cela ova transakcija i kao što vidite, ovde celo sistem malo drugači, znači, sigurno celog sistema se ostanje na te, da je lese koje postoji zm. svih henditeta. E sad jedno od stvari koji ovde postoji, koji će om prokomentari set, i to je ono što ovde postoji kao metod za podpisivanje koji u okru ove poruke definisam kao chmac sh. To znači da u okru te poruke postoji ovaj ovde digitalni podpis koji je dobijen kao rezultat chmac funkcije, vidjet ćemo šta ulozi u tu chmac funkciju malo kasnije, čime se potvrđuje autenticno stoje poruke, odnosno čime se sprečava mogućno sda se poruka promene. E sad što se tiče mehanizama, sigurnosti koje pruža o autah, tu postoji nekoliko mehanizama, znači jedan spovidali to je ovaj chmac sh1. Druga varijanta je da se radi rsa pa sh1, dakle da se te poruki koje se šali izračuna kao sh, pa da se foda taj hash kryptuje privatini tijuče monoglasko digitalno popisuje. Ar ono što je treća varijanko to je da kao digitalni podpis imate plain tekstu, odnosno praknočno da ne imate ništa. I to je ono što može da bude čudno a zašto ne bi bilo digitalno opisa, epodgod na to pitanje je baš u onom mješta što se vam pomeno na početku časa, što recimo u ovom primieru koji smo ovde videli, da će browserem, odnosno koristnik M, hteti da na neki način manipuviše o nim odgovorom koji je poslalo sajt za slike. Zato što u njegu vam je interesu da se ta dva sajta povežu da on ne bi morao da downloaduje aplodu sa slike. I preto on ima pristup i jednom i drugom sajt. On nije zainteresovan da menja odgovor koji stiže od sajta za slike, te u takoj situaciji, a opet ako pretpostavimo, a danas je to u gotovo 100% slučajeva, da je sama komunikacija zaštićena TVS-om, da ću u takoj situaciji onda praktično i ne mora da postoji digitano potpisivanje. I te ono što sam rekao zašto ovde kod obog ovo govautu hve sam ta use case, odnosno zamisljen koristniški scenario je takav da ne mora da se pruži najviši nivo sigurnosti. To su mehanizmi kojima se štiteve poruki, dakle nešto je sam mehanizam jednostavni. Što se tiče toga, kako se izračunova HMAC-SHA, ovde imate tačno definisano kako se radi. Postoji ključ, to je onaj ključ koji je deljeni ključ, odnosno imate tačno napisano kako se formiraj ključ, to je konkatenacija, a one je deljeni lozinki odnosno onog deljenog ključa, tačno određeno karakter, baš je predefinisano i to je to. Što se tiče onog ostatka, onog što ulazi drugog što ulazi, znači sam je poruki koje ulazi u HMAC funkciju, to je nešto što se zove base string. Na narodnom slajdu imate definisano i šta.
 da je base string, odnosno na ovom ovde slajdu. I naravno ne morate da bubate. U suštine da u tu hmat funkciju ulazi sama poruka koji ste videli, tako je formirana, znači je ono get ili post poruka kojem se zahtevaju odgovarajući tokeni. Pa sada ovde je ona na neki način modifiku, ona način šalja se urljila i neki specificni znac i end, ali suština je da je sama poruka podpisana i da se koristi ili hmat, ili ova varijanta sa RSA algoritmom, da je se opet koristi privatnik ljudški klijente, onoga koji potpisuje tu poruku, a opet ka ulaz, kao sama poruka se šalja ovaj isti base string. I to bi bio o autoh, odnosno to je način kako funkcijoniše o autoh. E sada ovo što ste videli, to je o autohe verzije 1. U među vremena je nastala o autohe verzije 2. I ono što interesantno to je da 3. verzije nisu kompatibilne. Ne može da se desi da jedan saj tradi sa o autohe verzijom i jedanada drugi saj tradi sa autohe verzijom 2, nego moraju da budu verzi u sanglošene. I danas je u većini slučaje se koristi o autohe verzije 2. Ja opet nisam hteo tu da ulazim sa ovih detalji da vam pričamo razdika, mi zmiju to da 2 suštinski je isto, način nema neke razdike. Pritom je o autohe verzije 2 napravljeni da bude nešto jednostavniji, zato što, kao što vidite, ovdje ima dosta razve na porubnih koji idu u različnje smerovima, a to sve je dodatni posao za server, odnosno dodatno opterećuje server, tako da su pokušavali, to je inicijativa koja potiče od tih najvećih web service providera, da se na neki način pojednostavi samu funcjonisajnje ovog algorina. Dobro, to bi bilo košto se tiče o autoheprotokolo, sad ću vam samo još par minuta da kažem dopuniti kompletnu sliku, da vidite što tu još postoji što se tiče mehanizama koji se koriste za autentikaciju sa kojima ćete se možda sretati tokom vaše profesionalne karijere. Esad, način, ono u okviru ove prezentacije broji, to je prezentacija broji 9, koja se odnosi na autentikaciju na aplikacije, je ovaj četviti čas, koji je posvećen suštenski različiti mehanizmima tako zvanog single sign-on, odnosno mogućenšaju da pomoću jednog skupa kredinicijala dobijete pristup različitim servicijom. I onda smo videli prvi takav sistem, to je Kerberos, koji se koristi za pristup različitim servicijom u okiru neke windows lokalne vreže. Onda drugi takav sistem je federacija identiteta, gde postoje različiti web-servici, odnosno servici koji su dostopni preko weba, kojima se pristupa preko browsera. I videli smo ovaj autoh koji je nešto slično, nešto tome, samo je nivosigurnosti nešto manji, nego u onim situacijama kada se koristi samo. Pokalili smo servici u lokalnim reži, pokalili smo web-interface, odnosno web-servise, je ono što je ostalo i što nismo poklili, to su mrežnih reže. Jedan od izvora i jedan od razloga zašto je veden single signulac upravom mrežnih reže. I tu je nastav jedan protokol koji se zove radius. Taj protokol je nastavl prvo da reši jedan problem, koji su imali ljudi koji se bavili mrežama, a problem je sve deći. Ako neko radi u nekoj iole velikoj firmi, na primer nekoj administrator i održeno infrastruktur u neke banki, ako ta banka ima dvesne svojih ispostava, ona ima dve star različitih routera, pa još koliko ima svičeve i ostali huriđe koji postoji u toj banciji, i sad se postoja pitanje, kako organizovati pristup s jednog i mrežnim huriđem. Mrežnih huriđe kao i svaki drugi računar imaju potrebu da se imaju neki način u granici prijutnima, i da samo oni ljudi koji imaju pravo da pristupe, mogu da pristupi u rećegu. I jedno rešenije da vi napravite na svakom huriđaju user name i password, ali onda zamistiti situaciju u kome vam iz firme odlozi čovek, koji ima nalogi na 250 različitih huriđe, znači vi morate da menja termi 250 različitih huriđeja prava pristupa. I to je onako prelično nezgodom posav u su automatizaciju kao i može da dovede do nekih problema. I onda je nastava protoko koji se zove radius, koji je omogućava i ovde imate šemu kako to funcjoniše, koji je omogućava da umesto da se čuva baza koristika na svakom podirnošnom režnom huriđaju, da postoji server na kome se nalazi baza koristika, a da je na samom režnom huriđaju podešeno da se provera identiteta, ne vrši tako što će da se proveri lokalna baza, nego kada neki koristnik pošal je svoj uzar nemij pasvorn, taj uzar nemij pasvorn će biti prosleđen ovom, ovaj mašini koje ima centralnu bazu koristika i onda će ona izvršiti prover u to koristika. E sad šta je ta baza, baza može da bude bilo neka SQL baza, bilo neki direktorijum, ali sam protokol kojim se komunicira između mrežnu huriđe i te baze se zove radius i ona mogućeva da se kroz poruke radiusa razmenjuju informacije i o kredencijalima i o koristickim imenima, pa i o različitim atributima koje taj koristnik može da ima. E sad, takle slična ideja, postoji posebom protokol koji služi da se ti podaci prenosje, zašto je ovo interesantno? Ovo je interesantno zato što kada se pojavio tako mogušno da se napravio ta vrstu centralizacije koristniških imena i da se na taj način pristupi mrežnu huriđe ima. Jedan od mrežnih huriđa koji je u posljednje vreme postoje sve interesantni, to su bežni access point. I sad vi znate, da postoji, moželost nismo na fakultetu inoče bi ste mogli odmuživu i da probate da na fakultetu postoji mreža koje se zove edurom, koja vam omogućeva da pomoću vašeg user name i passworda koji ste dobili na fakultetu, imate pristup internetu na fakultetu. Znači opet to je sad vrsta single sign ono u kome ste objedinili pri stup nekim web servisima i pri stup mrežnim uređeima. I za svega ooga postoji baza jedna jedinstvena baza na fakultetu a ta baza je preko različnih protokola povezana sa ovim servisima i omogućava da na kom god da se pojavi access pointu koji se nalazi na fakultetu da možete da dobijete i ne samo to, nego ima još jedan detalj, a to je da može da ti radi u serveri mogu da budu povezani učite u hierarchiju i radi u servera, pa onda vi, na primer odete, kao što nove sdici imamo neko studenta Marka koji otiša u Francusku i na primer nalazi se na Sorboni, na toj Sorboni postoji ista ta edurom mreža i naravno ako biste probali sada odete, nažalost, opet i putovanje su, ove smanjena, tako da ne možete da se lično uveriti u tako nešto, ali ako ustreti dojete nekde možete ovo da isprobate i krajnju linii može da bude i korisno. Ako uklatite nekde u inostranstvu edurom SSID, ono što će se desiti, to je naravno da neće taj access point imati vaš uzernim pasvod, neće imati kredenciale, već će kroz žitavu hrarchiju u radio servera, biti taj vaš zahdaj, odnosno vaš uzernim pasvod, prosleđen do one tačke gde se nalazi vaše identity provider, vam slučaju to je ETF, da će se provjeriti na ETF-u vaši kredenciali i da će onda biti javljenu tom access pointu koji se nalazi u Francusku i da vas pusti na intera. Dakle, to je načina koji se omoglućava da imate praklično prijstup internetu preku bilo koje tačke bilo gde u svetu, gde postoji edurom SSID. I naravno ne morate da bubate s kako funkcioniše radio, samo ovo je više da vam podpuni ovu sliku, ovo ćemo lagano preskočiti, odnosno, ne morate to da gledate, više samo ova zadnja sličica koja treba da vam odprilike šemadski prikaže na koji način se omoglućava, da vam podpunili razno raznih servisima, bilo da su oni mrežno, bilo da su oni web-servisji korišćenjem jednete i ste bazi koristika. Znači, negde na fakultetu postoji mašina koja ima bazu koristika, bazu svih studenata i njihoj kredencijala i ta mašina korišćenjem samolu protokola može da razgola sa web-service providerima, a korišćenjem radiju z protokola može da razgola sa razno razim access pointima i da vi pomoću istih kredencijala, istih hjuzernemove pasvoda možete da objeti i pristup internetu na fakultetu i na drugi mestima i pristup različstvim web-servisima koji upadaju u tu federaciju identitetu. Dakle, to je ono kako danas izgleda jedna dobra moderna infrastruktura za federaciju identitetu, odnosno za omoglućavanje siglesajno ona za razne vrste servisa. I dobro, to bi bilo to što si tiča ove prezentacije uvezi sa autentikacijom koristnika. Dakle, ove ideo ko' radiju se više informativno nemorate to da bubate zato što ako bih smutili da ga isprišamo na dovoljnu mi volu detalji, onda bih nam otišao još jedan čast, ako dovolj je više da steknite tu vrike osjeći šta može da se vradi i da to zaista može da funkcioniše. A ono što nam sada sledi je naradna prezentacija, a to je prezentacija koja je govori...
 u tome na koji način se štite podaci na mrežnom nivou, odnosno vidjet ćemo kako funkcioniše protokolo koji se zove IPsec, IP security. Do kraja ovog časa ćemo samo malo dovedemo koncep zašnite na različnimi osje slovima i da razumimo što je to što radi IPsec, a onda ćemo posle na drugom času da se pozabovimo kako to techničke, odnosno technološki IPsec izvodni i koju brstu zaštute on pruža. E sada ide prenego što uđemo IP i IP security, malo ćemo se vratiti neki korak ponazat da vam ispričamo ješto o tome, odnosno da vas poctim kako, šta smo do sad naučili. Dakle, jedan od mehanizama koji smo do sad naučili, koji služi za zaštitu povada taka, a koristi se kada se podaci prenose preko nekim reže, je TLS, odnosno TransBotler Security, odnosno takvašen kolopilno HTTPS. I tada smo videli da ako postoji neki website i ako postoji vaš browser, kada pristupate tom websiteu, može da se napravi da se iznađu tog websitea, znači, ovaj neki www, da se iznađu tog websitea i vašeg browsera koji se nalezi na vašem učinaru, da se postoji kryptovan i mrežni tun. Esa dajde da malo uslužnimo u sliku, kada pretpostavimo da je ovde neka korporativna mreža, i da u toj korporativnoj mreži postoje različiti servici koji svi raduje preko weba. Recimo jedna takva korporativna mreža bi bio čak i naš putet, gde to sad vi ne znate, znači, jaka u profesori imam pristup posebnom site za zaposlenie, pa onda postoje posebni site u recimo nastavno naučih veća, pa posebni site nekih komisija na fakultetu, da to su sve posebni site u recimo zahtevaju posebnu autentikaciju. Ako bih ja htevo sa svojog računara da se povežem na sve te lokacije, ono što i recimo u jednom trenutku u svom browseru otvorim tri taba i u svakom tabu imam pristup pojednoj od tih weba aplikacija, ono što će se desist ist, je to da ću ja imati otvorené tri tls sesije, da će se za te tri tls sesije napraviti tri handshaka i da ću ja imati u mnom browseru, ili na mnom računaru, da ću ja imati tri skupa ključeva koje se korite za zaštitu. Znači, biće jedan skup ključeva za komunikaciju za prvim site, drugi skup ključeva za komunikaciju za drugim i treći skup ključeva za komunikaciju sa trećim site. Sa druge strane, svi tih web site-ovi, odnosno, sve to se nalazi na jednom fizičkom, fizičkim istom mestu i ono što bi neko mogalo da si pita, to je, a zašto bi ja moro da pravim posebne tunele, dali bih ja mogao, da napravim ovako nešto? Ovde postoji neki mrežni urđi, koji povezuje sve ove web site-ovi, dali bih ja mogao da napravim jedan ovako kryptovanim mrežni tunel između tog routera i mogra čunara, koji će me me upomogućiti da šta god da pošadjem prema bilo koja je mašini koja se nalazi u ovim mreži, pa ne sa cao prema ova tri, nego i prema mail serveru, i prema još neki mašinama, šta god da da pošadjem, da prođe kroz tu kryptovanu zaštitu do routera i da onda prođe i zađe u korporativnu mrežu. E upravo, ovo što vidite na ovako trapavu na crta mjestic, je suština razlike između zaštite na mrežnom sloju, to bi bilo ovo plavo, znači to je zaštita komunikacije između neke dve ip adrese ili nekom skupa ip adresa i zaštite na transportnom sloju ili aplikativnu sloju. Znači kad imamo zaštito na transportnom sloju, a to je tls, a praktično je i ste stvari sa zaštitom na aplikativnu sloju, nijamo tu situaciju da svaka instanta aplikacije će zahtjevati poseban kryptovan i taj tunel sa posebnim kredencialima, odnosno posebnim skupom ključeva za zaštiti pojada. I u situaciji kada moj računar ima potrebu da napravi više takvih sesija, on će potrošiti neko svoji procesorsko vreme i neke resurse i na uspostavljenje ključeva na ii resa ili defihelna algoritma, šta vić postoji pozađen, i to će izvršavati više puta u isto ili slično vreme, ali moraće više puta to da ponoviti. Sa druge strane, ako postoji zaštita na mrežom sloju, onda ja mogu da napravim, naravno u situaciji kada to ima smisla, doće mi isto pro komentari sa ti kada to ima smisla, tada ja mogu da napravim jedan ovakav tunel, da napravim samo jednu razmenu ključeva, koji će mi je mogućiti da bilo šta što prolesi između ove dve lokacije bude šifrovo na tim ključeima i da bude zaštit ćeno u ovom ovde delo. Dakle, razvijeka između zaštiti na aplikativnu sloju i zaštite na mrežom sloju, tome što zaštite na aplikativnu sloju podrazumiova da svaka instanca aplikacije i svaka aplikacija posebno moraju da obezbede svoju sigurnost. Odnosno mora da se napravi posebno razmenu ključeva, mora da se napravi posebno inkripsija podataka. Sa druge strane, zaštite na mrežom sloju omogućava objedinjavanje svega toga, odnosno formiranje tako zvanih tih mrežnih tunela i to ćemo sad vidjeti šta to pračno stači, ako im mogu da obezbede da se kroz taj jedan kriptovanim režnih tunel prostledi komunikacija više različitih uređe ili više različitih aplikacije. Nadam se da je to jasno, malo razmisi, talo mislim da ćemo i kroz ovu prezentaciji i kroz ovu što je na drugom času još objasniti, i detaljni, i da će biti jasno kako se ofuncijaniš. Na onslajdo imate još jednu stvara, to je zaštite na data link sloju. Ako se seti, po šta to beše data link sloju, ako se setite kako izgleduju paket i koji putuju przmreže, oni imaju različite protokole, pa na data link sloju imate protokol koji se zove ethernet. Na sloju iznad, odnosno, ono što je enkapsulirano ethernet i ip, a na sloju iznad i ono što je enkapsulirano u ip, a to je tisipi ili u deped, a to je transportni sloj. I sad neko može da kaže pa, ok, videli smo da može zaštite na tisipiu, to je tls. Vide ćemo sad da može zaštite na ipiu, dakle to može isto, neko može da se pita, ali može da bude zaštite na još nižem nivou, dakle na data link sloju. I može. I u istori se pojelivali neki protokoli, koji se koriste za zaštitu na data link sloju, ali sad ćemo da vidimo zašto to nije nešto što ćete koristiti i nije nešto što ima pretrenost misli. Ako pretpostavimo da ovo ovde što vidimo je putanje izbiđu neka dva računara koji se nalaze na internetu, dakle neki recimo računar i neki server. I ono što možemo da pretpostavimo, to je da ta dva računara komuniciraju kroz više nekih uređaja koji se nalaze u različitim rešani. Ono što može da se uredi, to je da se napravite zaštite na data link sloju. Esad ono što je prognos na data link slojem, je sledeći. Pretpostavit ćemo da je na svim ovom ovde segmenti meterni. Na ovom ovde prvom segmentu koji ide od računara do prvo grutera, će biti jedno ethernet zaglavlje, znači ovdje će biti ethernet i jedn zaglavlje. Pa onda kada se dođe do prvo grutera, to ethernet zaglavlje se skida iz paketa, a stavlje se drugo ethernet zaglavlje, znači ovdje imamo ethernet zaglavlje dva. Pa onda na narodnom skoku ćemo imati ethernet zaglavlje tri i tako dalje i tako dalje. Šta ovo znači? Ovo znači da ako se uspostavi zaštita na ethernet sloju, recimo ako ja kažem da sam na ovom ovde grutero r1, uspostavio zaštitu na ethernet sloju, ja mogu da uspostavim tu zaštitu najdajlje do prvog samo susedno gureće. Šta znači da ovde ako paketi prolaze sleva na desno, na prvom ruteru će izvršiti inkripsiju, a na drugom ruteru će izvršiti dekripsiju. A šta to dalje znači? To znači da ne imam zaštitu skraja na kraj. Ne imam zaštitu od ovoga ovde računara, do ovoga ovde servera koji se nalazi na drugi stran. Ako hoću da imam zaštitu skraja na kraj, ja onda moram da uspostavim novu zaštitu na data link sloju, da ću ovde da izvršim inkripsiju pa ovde dekripsiju. I ovde moram da uradim to isto, pa ću i ovde da izvršim inkripsiju pa da ovde izvršim dekripsiju. I već, ovo bi trebalo da vam ukraže da ovo nema smisla. Zašto? Zato što svaki paket koji bude prolazi, će morati da bude n puta inkriptovan i n puta dekriptovan, da bi bio zaštitim skraja na kraj. Svaka inkriptije i dekriptije dodojuju na kašnije i otežavaju prolazak paketa kozmežu, usporavaju tu komunikaciju i to neavnog smisla. Znači prosto bi će sam utisak koji bude, sve smika će biti da tam mreža ne radi dobi. Sa druge strane, ono što takođe nema smisla, bi možemo da zamestimo sa sljedešem situaciju. Mi se nalazimo u Srbiji, a naši paketi prolaze naprim. kroz Nemačku i na kraju završavaju u Velikoj Britani. Kako bi smo mi mogli da obezvedimo, da postavimo ključeve kojima možemo da verujemo na svim ove tačkama, da se na svim ovim ruterima uspod koji se nalazu u nekim tužim mreža? Nemože. Dakle, zaštite na data link svojim teoreckim možedati da su postavi. Postoje neki mechanizmi stariji, više o 25-30 godina, na modemima koji su omogućavali da se izvrši takva inkriptija, ali zaštite na data link svoju ne mogućava zaštitu skraja na kraju mreža. To vam pruža zaštita na mreža.
 Režnom svoje. E sad zaštoče nam režnom svoju podrezumeva da treba da se formiraju, odosno mogu da se formiraju tako zvanih VPN-ovi i vi ćete taj IPsec ako go budete poristili, našli će koristiti kao neka forma virtuolne privatne mreže, odnosno klienti, odnosno software koji se koristi za usposteljeni tih tunnela, se vrlu često zove VPN software. Funcija IPsec, al tome ćemo se vratiti kada budemo pričali i konkretnim protokolima, odnosno zaglavljima koje se dodaju. Funcije secure VPN-ova su da obezbede poverljivos, tajnos podataka, odnosno da šifruju podate, zatim da obezbede integritet podataka, odnosno da obezbede nepromeljibos podataka, da neko ne promenite podatki do prolaze i da o moguće autentikaciju porijekla. Bilo autentikaciju IP-adresse, sa koja je stiga određen i paket, bilo autentikaciju samog izvora informacija koja se nalaze u tom paketu. IPsec pružate u sluget, očemo vidjeti na drugom času konkretno kako radi, a pre nego što zavošimo ovaj čas, ali da samo jedna napomena, koje su to dva osnovra scenarija zakorišnje IPsec, a ona su ovde nekako šemacki prikazan. Jedan scenariju zakorišnjenja IPsec je tako zvaný lan-to-lan, lokalna mreža na lokalnom bežu i to bi bila veza između ove dve lokalne beže. Ovo ove možete da svatite kao da je jedna postovnica jedne firme, a ovo ove druga postovnica jedne firme, na primar firme ima svoje postovnice u Belgrade, no, Sadu, Mijšu i Banja Lupci. I hoće da ostvari poverljivu komunikaciju između tih lanova, ono što se tada radi, obično se na ovaj neki izlazni uređaj iz tem reže, tako to je neki router ili neki firewall. Između ova dva uređaja se uspostavi ta kriptovanja veza, bide ćemo na koji način i šta se tu radi. I onda se omogućeva da bilo kakva komunikacija, između bilo koja dva para uređaja koji se nalaze u ovim ovdem režama, da kompletna ta komunikacija prolazi prostupriptovanu veza, odnosno da sav sadrešaj te komunikacije bude zaštiti. I to je jedna klasična primjena, gde neka firma formira praklično svoju tutaku zonu virtuolnu privotnu mrežu, kojem povezuje svoje lokacije. Drugi model korišćinja koji je veoma karakterističan za ovo današnje vreme, kada ljudi radi od kuće, to je povezivanje tako zvanih nomadskih koristnika, odnosno pojedinečnih koristnika. A šta tu imamo? Tu imamo centralnu lokaciju firme, dakle to je ovo ovde lokacija. I imamo čovek koji naprimer sedi u svoje kući, zato što zbog covida nesme da ovaj ode naposal. I ono što on, naravno, on ima potrebu da pristupa nekim informacijama koje se nalaze u lokalnoj mreži firme, dakle to su neki poslovni podaciji, to čak može da bude mogušno da on ima pristup svojom poslovnom telefonu i razvoraznih stvari koja mogu da se osvare. Ono što on treba od uredi, to je da od svojog računara do opet ovde neku koncentratora do neke izloznetačke iz ove mreže uspostavi šifrovanim režnih tunel. Tako da sve ono što prelazi preku interneta, znači između računara i ovog koncentratora, biva šifrovan i zaštićeno. I onda on može da pristupi, bilo čemu, kao da se nalazi u svoje kancelari, kao da se nalazi u lokalnoj mreži t-firmi. To je drugi karakteristični senarij o korišćenja ipsec. Naravno, ovo je stariji od covid-a, cela ta ideja i koristi se i vi ćete isto, ako nismo na sad koristili, koristi ćete, kad budete počli i naradite, ako ste na primer neki friglenser, koji radi za nekoliko koji na stranstvu ili ako odjetete na službeni put ili bilo kad imate potrebu da pristupite svojim internim podacima firme, onda će za vas biti napravljena oako neka vrsta VPN. E dobro, tu ćemo stati za prvi čas. Šta su prednosti korišćenja ipsec? Videte ćemo, delo toga sam već pomenu na preklubom času da jednostvari koje ipsec pruža, tu je mogućnost da više aplikacija objedini zaštitu svoje komunitacije kroz jedanji i dizisterni ipsec. Unavom mislim da će se sve te prednosti korišće ipsec, odnosno mogućnosti koje on pruža najbolje vidjeti kada budemo detaljno oglastani mehanizam njegovog grada. Sam ipsec je nastavo daostu davno, to sad već ima 20 godina kako je ipsec ubacim prvu ipv. 4. Ideja da se ubaci neki mehanizm sigurnosti ip komunikacije na 100 sredinom 90 godina, to je bilo vreme kada je postojo samo ipv. 4. Tako da je prva vrezi ipsec, odnosno kada je nastavo ipsec zamislim kao dodatak na ipv. 4. A onda pošto je nakon nastanka ipsec i cele te ideje se pojavio ipv. 6, ipsec je uključen kao sastajno ideo ipv. 6. Tako da možda ste to pominjeli na mrežama 1, ako ste pominjeli ipv. 6 da tu postojo na dodatna zaglamda koja predstavljaju ipsec juriti. Ono što su osnovu komponente ipsec, to su dva zaglamda koja se dodaju u pakete i koju omugućavaju različite sigurnostne servise, to su tako zvanim AH, odnosno authentication header i ESP, odnosno i encapsulating security payload. A ono što, to ste se veći verovatno i navikli, no sada mora da postoju u svakom takom sistemu, to je neki mehanizam za razminu piučova, tako da ipsec u to postoji, to je posebom protokol koji se zove internet key exchange, odnosno icky ili ike, kako ga čitaju u americiji. Arani je u prve verzi ipsec postoju jedan dodatni protokol koji se zvao internet security association and key management protocol, ovo isakrno pd. Ali je ono u jednu revizi protokol koja nastala nekde sredinom 2000 godina izbačen, kako bi se pojednostavilo funkcionisani ipsec, tako da, mada, nekim implementacijama ipsec kaći to juš uvijek na ići na ovu skraćeniku, tako da ako nekog bude radi, s tim da je to prosto nezbudni. Vidite ćemo da ipsec ima dva režima rada, to su tako zvanje tunel i transport režim rada, a koji je režim rada zavis je toga gde će se staviti to dodatno zaglavlje, odnosno, da će se vbaciti ipsec, izmađu kojih zaglavlja o oroginojnog pakete. Pa to će biti najbolje vjasniti na samom primjeru, odnosno, kada vam budemo bišnjavati konkretno authentititiješa header i isp. E sad šta pruža ipsec, opet to ću vam ispričati za konkretne protokole, ono što je karakteristika ipsec, kao što, recimo, kad se koj te lesa uspostavlja sigurno koneksije, imamo te les sesije, tako da ipsec se jedna takva sigurnosna sesija, zove sigurnosna asociacija, sigurnosna asociacija predstavlja skup parametara koji određuju koji paketi će biti na koji način zaštičeni i jedna sigurnosna asociacija je određena sa nekoliko parametara, prvo je identificator sigurnosna asociacija, odnosno, ovaj tako zvani SPI index, seki odrti parametar index, koji nije ništa drugo do jedan nis bita koji je jedinstveno određuje datu sigurnosna asociacija, zatim ip adrese, znači skupa adresa koji određuju odakle dok će biti zaštičena komunikacija i onda oznaka protokola dali u pitanju authentication header i ISP i koji se sami protokoli korise zašta tu dali u pitanju as, 128, as, fd6, mdp, tha, šta već se koriste. Znači to je ono što karakteriši sigurnosna asociacija, a sigurnosna asociacija ono što interesantno kada se formira izneđu neka dva uređaja, sigurnosna asociacija služi za to samo da prenosi pakete u jednom smeru. Dakle ako imamo dva uređaja A i B, jedna sigurnosna asociacija će prenositi pakete samo od A k B. Ako bi smo želili da imamo dvosmernu komunikaciju između uređaja, ali ako je između A i B i A, moraju da se formiraju dve sigurnosna asociacije koje će imati različite oznaki, imaće različite SP indexe, ali one će imati najčešće i tako se realizuje, košta se u paru formiraju, imaće iste mehanizme zaštite u oba smera. Verovatno da bi mogli da se konfiguriša, ali ne znam zašto bi nekako to radi, da naprimer napravi da u jednom smeru se koristi ISP, a u drugom da se koristi authentication header. Tako da to je nešto što je karakteristicno za sigurnosna asociacija, je sada ono što, kako se to funkcioniša, šta se dešava sa paketima kada, recimo, neki uređe i šalje pakete koji su zaštićani IP, sakom sada ćemo malo da pro komentariša. Akko posmatram, recimo, ona je i slučaj nomadskog koristnika, a u principu nema nikakva različi između toga ili situacije u koji imamo neki router koji ima razni interface, pa se sada tog router postavlja IP-SX i gurnosna asociacija. Ono što vi znate, to je da vaš laptop ima sigurno jedan interface, to je wireless interface, preko koga, ako sada ovo slušete preko laptopa, preko koga je taj vaš laptop povezan na internet, dakle, kao ima najmanje taj jedni interface, može da imaš...
 interfejsa ako ste na desktop u li tako nešto, pa onda preko tog, preko žice, preko kabla, pristupatinte. Kada se uspostavi IP-SX i gudnost na situacije, ono što će se desiti na svim ovinom uređeima, dakle bilo da je pitanju, bilo da je pitanju vaš privatni računar, bilo da je pitanju neki router, to je da će se formirati novi interfejs, virturni interfejst, naravno nije fizički, ne možete da ga vidite, da kažem na routeru kao noviji port na njemu ili ne možete ga vidite na vašom laptopu kao novom mesta da će li uboditi neki kabl, dakle formirati virturni interfejst, to je tako zvaniji tunel interfejst i takođe u računaru, odnosno u routeru se formiraju dve tabele, to su tako zvana security association database i security policy database. Ajde, sad ćemo da vidimo šta radite dve tabele, znači, ajde prvo da vidimo šta bitu radila security policy database, znači security policy database u sebi ima ovako nešto, dakle sad ću ja izmisliti neha hipoteticka pravila, li će vam na ostavu koga biti jasno šta se tudešalo, znači, ovo, ova tabela će imati, napr. ovako nešto, ako je ip-adresa paketa, recimo, destinacijona ip-adresa paketa 1kx i ako je source ip-adresa paketa 1ky, onda na te pakete primeni spi, napr. 10. Znači, svi paketi koji imaju destinensiju addressu x i source addressu y, kog čemu to x i y ne moraju da budu adresi samo jedno guređe, nego mogu da budu celi adres skupu oriđe, odnosno mreža, za te pakete će se primeniti spi 10. Pa onda može drugi ulus da bude koji kaže destinacijona ip-adresa 1kog z i source ip-adresa 1kog wb za njih će se primeniti spi, napr. 50. 53. Esad, naravno, ovo nije dovojno, ovo samo kaže za koje pakete će se primeniti ip-sec, znači, za koje će se koristiti ip-sec. Da bi se znalo, tačno što se dješa ovo se tim paketima, onda mora da postoje i security association database, znači, ovo je sA baza koja kaže sledeći. Ako je u pitanju spi 10, onda spi 10 znači da će se koristiti espi, i da će u okurutog espi da se koristi as i napr. sha. A ako je pitanju, ova, sigurna sassociacija sa espi indexom 53, ači ova druga, onda se tu koristi authentication header i koristi se napr. chmac sa sha algoritm. Dakle, pomoće ove dve baze, pomoće ove dve tabele koje će, koje se formiraju kod ljubom instalacija ip-sec, se praktično kaže vašem računaru, ili se kaže roturu da u koliko paketi imaju tačno određenje oblik, da će na njih da se prijimeni odgovarajuće sigurnosna asicijacija. I ovom mora da postoje i sa jedne strane kako bi se paketi posloji na drugu stranu i zaštitili na određenje način, kao i da se izvrši u kontrasmeru, zato što videte ćete da u paketima postoji spi index, i onda kada računar dobije paket koju sebi ima ip-sec i u okurutog paketa će postoji spi index, on će da pročita da, primjer, da paketi ima spi index 10, i na osnovu toga će znati da taj paket ti treba da deshifu repođu i sa agoritmama da koristi s haza da izdečunavanje heša i tako dalje. Znači to je ono što mora da postoji u svakom računaru i postoji tajga osnovni koncept sigurnosna asicijacija koja prestavlja jednu, da tako žel se sigurnosno vezo iznudži dva uređe, a ono što sam takođe rekao to je da mora i da postoji prakvično iznudži dva uređe, a dve sigurnosna asicijacija svaka za sigurnoslanje u pojednom smeru. E, sa dolazimo do samih protokola da vidimo šta oni tačno rade i koju vrstu zaštite pružeju. Prvi protokol, odnosno prvo zaglavlje koje se ubacuje je tako zvanje autentikejšan heder, odnosno autentikacijano zaglavlje, i sada ćemo da prođemo kozi njega da vidimo šta u njemu takočno postoji, nači šta ono radi i gde se smest. Ajde prvo da vidimo gde možete se smesti i da razunemo u čemu je raznike iznudži u transportnog i tunore žima rade. Znači ako pogledam ovo ovdje, ovo što je sve zelenom bojam označeno, to je origino nipaket. Origino nipaket ima svoje origino micu i zaglavlje, ima svoje origino zaglavlje transportnog boja što je PCP i VDP i ima neke podatki. Znači ako u pitanju web komunikacija, biće IP adresa browser i servera, biće TCP u koji će u sve bi imati port, na primer 80 ako nije HTTPS i ove će biti neki HTTPS protocol i neki podacic koji se šali. Ako se koristi autentikejšan heder u transportnom režimu nada, onda se autentikejšan heder ubacuje ovde, nači između originalnog IP i originalnog zaglavlja transportnog sloja. Tu će se ubaciti autentikejšan heder u transportnom režimu nada. Ako se koristi autentikejšan heder u tuner režimu nada, onda se autentikejšan heder zaglavlje stavlja izpred kompletnog originalnog paketa, ali sada pošto ako ovde ubacimo nešto novo, ako bi smo ovde ubacili autentikejšan zaglavlje, a ovde smo imali Ethernet. Ono što je problem što kada takav paket bi posledi nekom routeru, router bi očekival iz-a Ethernet da postoji IP zaglavlje, da bi mogo da rutira paketa da ga negde prostedi. Znači ovako nešto ne bi mogo da funcjonišem, nego onda u tom slučaju mora da se doda i novo IP zaglavlje. Znači ako se koristi tuner režimu nada i zato se iz ove tuneranog režimu nada, onda ćemo u okrog paketa imati dva IP zaglavlje, imaćemo originalnog IP zaglavlje, imaćemo novo IP zaglavlje i njihove IP address-e okruti zaglavlje ne moraju nežno da budu i ste. Vide ćete malo kasniji jedan primer koji će da vam to razjasni. A razlik između ova dva režima nada, pora toga, naravno, da smo smestili authentication header je i u sigurnosnoj funkciji koji pruže, a to ćemo sada dobi ostaviti. Dakle, nadam se da je jasno koja je razlik između transportnog i tuneranog režimu nada i šta znači tunelovati nešto, to znači dodati jedno novo zaglavlje koje će služiti za premos paketa kroz internet. I videli ste koja je razlik u tome gde se smestili authentication header koje transportnog i tuneranog režima nada. E sad da vidimo šta samo zaglavlje radi. Zaglavlje prvo polje koje ima, polje koje se zove next header i to polje označava šta je ono što se nalazi desno da tako kaže mod authentication header, odnosno šta je to što je enkapsulirano u authentication header. U slučaju transportnog režima nada, u polju next header će stajeti ozna kada je u pitanju enkapsulacija TCP ili UDP protopola, a u slučaju tuneranog režima nada će u polju next header stajeti da je narodni header IP zaglavlje. I praklicno to polje next header je bitno za ono stranu koje dobija authentication header da odmah prepozna dali u pitanju tuner ili transportnog režima nada i da zna kada pročita sve što ima authentication headeru u koji del, koje funkciji da prosledi taj paket na dalje parsiranje, da prosledi na dalje parsiranje IP zaglavlje ili da prosledi na dalje parsiranje zaglavlja transportnog svoja. Stveći polje koje postoje, polje koji se zove payload length koje označova dužinu payloada tako zvanog, a payload je ovo ovde poslednje polje koje postoji u sound paket, odnosno u authentication header zagljobu ili inacija. Šta je payload? Payload je integrati check value, odnosno vrednost kojem se proverava integrite, tako se zove u okiru IP seka, a u suštini ono što se nalazi okiru payloada je izlaz hmac funkcije. Znači ovo ovde je praktično hmac, nečegaj, sada ćemo to videti čega tačno. Esad pošto znate da kada se koristi hmac mogu da se koriste proizvoljne hash funkcije, a pošto mogu da se koriste proizvoljne hash funkcije, možda se koristi na primer sh 256 i možda se koristi sh 512, koje imaju različite dužine izlaz hmaca, onda će vidi i različita dužina tog payloada, da bi će ili 256 biti ili 512 biti, pa je z toga potrebno da se ovde u okiru ovo polje payload length, označi kolika je dužina ovog payloada, da bi se znalo da je desna granica authentication header, odnosno gde nakon authentication header počinje naravno zagljobu. Pa onda ima neko polje koje se trenutno ne koristi, pa onda imamo polje u kome se nalazi SPI index, rekli smo da on označava jedinstvino svako sigurnost na sociaciju i imamo tako zvanit sekund celih broj paketa, dakle okiru IP-seka, jedna od terakteristika IP-seka je da su svi pakete numerisani, a ovo je bitno zato što je to jedna od zašljita, dobat na zašljita replay napada, na ime ako posmatra moniz paketa u okiru neke sigurnostne sociacije, oni su svi numerisani i sad ako bi se desilo recimo da nakon paketa 153 se pojevi paket 54, znači neki paket s značajno nišim sekund celih brojom, to bi mogla bude indikacija da neko pokušao da izvrši replay napada, dakle to je jedna dodatna uslube koju pruža authentication header. Ja sad mislim da je...
 Ovo sve jasno, jedino što je ostalo nejasno da se objasni to je šta zapravo radi authentication header kada je ubačeno ovde, odnosno šta je ulaz zaspuhmacfunciju? Esad. Kojd authentication headera, ono što, da se samo malo podstvimo, znači ihmacfuncija ima ključ, oključevi me će vam pričati na kraju i sa drugi strane ima ulaz, to je neka ona poruka M. A kao izlaz se dobija taj message digest, odnosno i crvka koja je ovdje nazvom. Kod authentication headera, ono što čini ovu poru kojemu, odnosno što je ulaz u zaspuhmacfunciju, je sve ono što se nalazi desno od authentication headera. I već ovdje možete da primjetite da utuneli u transportnom režimu rada nije isto, sato što će u transportnom režimu rada biti zaštićeno od promene ovo što je desno, to su samo zaglede transportno tloje i podacim, a vokiru u transportnom režimu rada će biti i origino no IP zaglavlje, a ako imamo zaštićeno origino no IP zaglavlje, onda možemo da budemo sigurniracimo IP adrese koje se nalazi od crvkog zaglada, da ih nikod nije promenju uspuda, nikod nije radi u adresu uprimu. Dakle, kao poruka M, sve ono što je desno od authentication headera i još nepromenljivi delovi ovog ovdje IP zaglavlja koje se nalazi levo od authentication sve nepromenljivi delovi zaglavlja, to isto malo morate se pocitite iz mreža 1, kako izgleda IP zaglavlja, mislim da ćete setiti ključnih elementata, recimo jedan od bitnih elementata u IP zaglavlju je ono porlje TTL. TTL se dekrementira krihlikom svakom prolaska kroz neki router. Polje TTL nije nepromenljivo, znači polje TTL se menja na svakom spoku i sada ako zamislimo neku putanju koja prolazi kroz nekoliko routera, ako bi smo stavili da polje TTL ulazi u ovu message authentication code funciju pošte će se TTL promeniti dok dođe da destinacije, destinacija ne bi mogla da provori odmastom destinacije bi smatrava da je paket izmenjeno. Znači polje kao što je TTL koje se menja usput, ne može da uđe u chmat funciju, a polje koje se menja ne može da uđe u chmat funciju, a polje koje se ne menjaju, a to je na primjer polje verzija ili polje za IP adresu, ali to je sad specificno i tu možete usluvno da se schvati zato što u principu na putanji kroz internet IP adrese ne bi trebalo da se menjaju, ali vi znate da postoji translacija adresa, pakog postoji translacija adresa onda je to problematišno. U svakom slučaju postoje neka polja koja su promeljiva, polja koja su ne promeljiva, ona polja koja su ne promeljiva ulaze u message authentication code. Što znači da kada se koristija authentication header, ono što zapravo dobijemo, to je ako je paket primljen korektno i ako je izračun chmat zavok paketa uporadjen sa ovim payloadom, sa ovim ICG vrednošću i ako je to jednako, onda onaj koja je dobio taka paketa može da bude siguran, da po datciju u tom paketu su sigurno očuvani, da su TCP UDP zaglavlje očuvani, je sad uzavisnosti od toga da li se koristi transportni ili tuner, tuner režim rada, ako se koristi tuner režim rada može da bude siguran u originalno IP zaglavlje i još plus može da bude siguran u ne promeljive delove ovoj spoljašnih zaglavlje. Dakle, authentication header ne pruža zaštitu poverljivosti, odnosno zaštitu tajnosti podataka, zato što nema inkripsija, authentication header baš radio ono što mu je ime, on samu šti i ti integritet podataka koji se šalju kroz mrežu. Nadam se da je to, da je to jasno. Dobro, što se tiči tuner i transport režim rada, to ćemo još malo pro komentari sati, a sad ćemo da vidimo šta je ovaj drugi mehanizm. Drugi mehanizam se zove ESP, odnosno in Capsulating Security Payload i sad već ste se navikli na ovo, može da se koristi u transportnom i u tuner režimu rada. Esad razlika između authentication headera ESP i u tome što authentication header ima i zaglavlje i tako zvanih trailer. Znači ima prvi deo to je ESP header, ima drugi deo to je ESP trailer, odnosno kraj, kraj ESP-a. Kada se koristi transportni režim rada, onda se ESP header stavlja kao kod authentication headera između originalog IP zaglavlja i zaglavlja transportnog sloja, a na kraj i za svega do toga se stavlja ESP trailer, odnosno završetak. A ako se koristi tuner režim rada, onda je kompletan originlni paket, znači kompletan originlni paket uključići IP zaglavlje, je enkapsuliran u ESP header i u ESP trailer. A da bi tako paket moglo da bude prinesen, opet mora da se doda novo IP zaglavlje. I to je, ja verujem, jasno, ono što samo treba da se razljesni, stvarno što je šta radi ESP. Opet da prođemo koje zelemente ESP zaglavlje, ESP zaglavlje ima security parameter index, odnosno ima oznak u sigurnostne situacije, ima sekvencijalni broj paketa i to je jedinu što se nalazi u okiru ESP headera. Ovo što je čudno, to je da pogledamo ESP trailer, u okiru trailera, znači na zadnji strani se nalazi nex header, znači negde o ovde se nalazi polje koje se zove nex header. E sad to polje nex header označava šta je prvo što je enkapsulirano u okiru ESP? A u ovom slučaju transportnog režima rada, taj nex header će kao i kod otvdikešnog headera označiti ovo ovde zaglavlje TCP odnosno UDP, a u slučaju tunel režima rada će označiti IP zaglavlje. Polje nex header označava šta je ono što je prvo enkapsulirano, malo je neovičan polože njegov na samom kraju paketa, a označava ono što se nalazi enkapsulirano odme iz ESP headera, ali tako je urađeno. Zatim, sledeći polje je polje koji se zove payload length, znači slično kao što smo imali kod autentikečnoj headera, jedino što je payload sad nešto drugo. Payload je ono što se nalazi između ESP headera i ESP trailera, pa različito u transportnom režimu rada. I sad tu postoji još jedno polje, a to je polje koje se zove padding. E sada kod ESP-a se vrši enkriptija i ono što će ESP-u raditi, i to je da će ESP-i enkriptovati sve ono što se nalazi između ESP headera i trailera. Ovo što se nalazi između te dve stvari će biti enkriptovano i biće nevidljivo za potencijalnog napadača koji posmatra prenos ovih paketa. A ono što znate, pošto se enkriptija vrši simetričima aguritnima, to je da su simetričima aguritnih, imaju blokovsku strukturu, pošto imaju blokovsku strukturu, cela poruka koja se šifruje, može da bude jednaka celom broju veličine bloka. A pošto paketu u opštom slučaju nije takve dužine, mora da postoji ovaj pedig koji im će se paket dopuniti, tako da se natera da bude dužine koja je jednaka celom broju blokov. Tako da to je ključna uloga ESP-a, je sada ono što ESP-i ošima dodatno, a što nismo razjastili, to je ovo polje koje se zove authentication data. Ovo polje authentication data je ponovog izlaz hmat funcija. Ovo polje authentication data je izlaz hmat funcija, pri čemu ulaz u hmat funciju je ono što se nalazi između header i trailera. Dakle, ovo što je šifrovano, to može dodatno da bude zaštitčeno i hmat funcija. Odostnom voga bismo da kažemo da ako koristimo ESP, ako bih smo chceli da napravimo, recimo da natrstamo nešto slično, kako smo imali ranije, kada smo opisivali manipulaciju sa podacima, to znači da prva stvar koja se urodi to je enkripsija nekim simetrišem ključom K, a onda se vrši hmat funcija, sada nekim ključom K2, to su ključevi koji su izvedeni iz razmine ključeva, i da se onda ovde vrši konkatenacija T2 poruke i da se tako šalje. Imašo šifrovano poruku na koji je dodat njen message authentication code. Kada se ovo desifroje, odnosno kada se radi u kontrasmeru, prva stvar koja će da se urodi to je da se proveri hmat, da bih bila sigurni da neko nije promenio sadrže paketa, zašto zato što hmat traje kraće, odnosno manje vremena je potrebno, nego da se vrši dekripsija, i onda će se prvo proveriti da neko nije meni oporu, kako neko nije meni oporu koja, ako smo sigurni, onda će se izdoršiti desifrovani. Ono što možete da primjetite to je da ESP, da kažem, ima bogatiju funkcionalnost nego authentication header, u smislu da pruža kako zašto integriteta podataka, tako i encrypciju. I onda ne vi trebalo da vas čudi da se u praksi ESP koristi u 99% slučevo da se authentication header koristi relativno redko. Jedino što authentication header radi, a što ESP ne radi, to je da authentication header ima mogućno zašto integriteta ovih nekih delova spolješnjeg IP zagladu. To ne radi ESP. ESP štiti jedino ono što se nalazi između ESP headera i ESP trailera. Ali to je triušna funkcionalnost ESP. Kada se pošalje neki paket, on će biti
 najčešće šifrova no opiru ESP, a nekim algoritmom koji je dogovorim, to ćemo vidjeti malo kasnike, kako se dogovaraju algoritm koji će se koristiti i u z to može da bude zaštičen integrite takve prenosa takve boruki. Dobro, to je obišljeno. Ja sačemo da vidimo samo jednu posledicu toga, kako tog tuneržima rade šta je jedna dodatna posledica, odnosno šta je to dodatno što on mogućava tuneržim rade da zaštiti u prenosu podata. Ovo ovo ovo što vidimo, to je ona neka situacija koji sam na prvom čas ovogiasnjaju, kada imamo LAN to LAN komunikaciju, imamo dva LANa, to možemo da svatimo da je ovo ovde jedna i druga poslednica neke firme i da su te poslednice firme povezane preko interneta. Imamo ovde nekih hostove, na primver to su ako, reći, uzmo primver neki bank, je to bi bila i oni ljudi koji rade na šalterima koji imaju neki računer, koji im obavljaju razne interacije, a recimo, ovo se desne strane, sa tu postoji neki centralni server, kome oni žele da pristupe, kako bi provere li dalje i taj klient koji je došao i sa kvim oni razgovare, ima dovoljeno para koje hoće da podigne. I uokvjuru tem reže, ovo je ovde radnik koji ima adresu H1, on komunicira sa nekom adresom H2. I njegov računer, pristup, rećimo, neka je to neki server i neke u pitanju web komunikacija, on formira svoj paket, u kome je destinacijom adreza H2, koja je te mašine na drugoj lokaciji, source adrese, adrese H1 i formira, orgvareći paket, ima TCP, ima HTTP zahtev i to pošali. Dakle, ono što treba primetiti, to je za ovo koristnika H1, kao je za ovo koristnika koji se nalaze na mestu H2, da oni nisu svesni postojanja IPsec, znači uošta ne moraju da budu svesni da postoji bilo kakva sigurnos. Oni formiraju običan paket kao da su direktnu povesa. Sada taj paket dolazi do ovog ovde eruređe, znači do routera koji presreći takam paket koju se bi ima one SADB i S5DB polise, koje kažu, ako je paket ide od H1 ka HADBA, onda na njega primenjujesz sigurnosna oficijaciju koja je koristi ESP u tunur režimu rada. I taj ESP u tunur režimu rada enkapsulira kompletan orignoni paket, dakle primetite da je to, da je ovo ovde potpunisto, kompletan orignivni paket enkapsuliran. Ovo ovde što se nalazi između ESP headera i trailera je šifrovano, a ono što mora da se dodat, to je spolješnja IP zaglavlje, u kome se nalaze IP adrese ovih ovde routera. Dakle, kada neko ovde na internetu posmatra tu komunikaciju, ono što će on videti, on neće videti da komuniciraju međusobno hostovih s adresama H1 i H2, on će videti komunikaciju samo ovih ovde routera R1 i R2. Znači, ono što IPsec, kako se koristi tunel i režim rada, pruža dodatno kao sigurnost, to je mogušno sa sakrivanja toga, da li na ovaj ovde lokaciji ima 55 ili ima 500 čunara i da li na ovaj ovde lokaciji ima 4 ili 400 čunara, to se neće videti, zato što sve te pojedinačne IP adrese okvirulanova će biti sakrivene, odnosno biti šifrovanje, kada se šalju putem IPsec. I ovo je danad razloga zašto je propisan u IPsecu, da ako se koristi lantu-lantu komunikacija, da mora da se koristi u tunel i režim rada, prosto da bi se na padaču otežalo da prepozna kakva je internastruktura mreža koja postoje na jedno i na drugo ilokaciji, zato što jedna od prvih aktivnosti koji rade na padači na određeni sistem jeste da uzmu i da pokušaju da vide koliko ima računara ovde, koliko ima računara tamo da prikupi što je moguće više informacija o infrastrukturi, kako bi mogli efikastni i da izdršena. Ovo je nima značajno otežano u koliko je komunikacija kroz šifrovanje mreža i tunel, zato što se kroz tako u komunikaciju ne vidi koji računari međusobno komuniciraju. Odno što sam pričao šta je zaštićeno hmat s funkcijom koda autentikešnj heder i kod ISP je u transportnom i tunel režimu rada, to sam već izpričao, vam je samo dato na ovo dva slajda da imate kao referenci. Takođe, postoje mogućnost da se u jednom paket ubaci više sigurnostnih asociacija, ali ja pokon svoj gradnog veka to nisam nikad videa, znači postoje mogućnost da više puta enkapsulirate napr. 2 ISP enkapsulacije, padravite duplo ekipciju ili radite ISP i autentikešnj heder, ali ja to nisam video i to nije trenoracijno, ali zva razloga. Prvi razlog je svako dodavanje novih zaglavlja u paket smanjuju korisni del o paketa, dakle raste broj i bita u razno raznih zagladima i procentualno je to oduzima veći del o paketa u odnosno nekorisni del, korisni del su podaci koji se prenose, pa to onda dovodi do nekih drugih problema kao što su da takvi paketi mogu da prekrše maksimu transfer i unit i tako dađe, tako dađe, dakle to je sta je iznam problem, a drugi problem je što svaka sigurnosna asociacija podrazumeva neku sigurnosnu manipulaciju koja troši procesorsko vreme uređe je usput i unosi dodatno kašnima, tako da ovo možete zaboravite dovoljno ako verujete s ovom sistemu da je implementiran kako treba dovoljna je jedna kvalitetna sigurnosna asociacija. I sad dobro, u ovom do sadašnjem delu sam vam ispričao o tome šta se radi na koji se nači štite podaci kada se prenose pute majpiseka i ono što smo implicitno podrazumevali to je da u okviru tog prenosa možete da se vrši ili inkripsija zašta nam je potreban simetrični ključ ili može da se vrši prover integriteta podataka, odnosno zaštiti integriteta poruka, tako što će se koristiti hmac funkcije a za hmac funkcije nam je takođe potreba neki ključ. Dakle, ono što je preostalo da vam istočno dokra je to je na koji način se razmenjuju ključevi u okviru ipseka i kao što sam nagovesti o to na početku ovog časa, za to se koristi protokol koji se zove internet kick change i takođe sam rekao a vas aču ponoviti da tu postoje neke dve verzii internet kick change, prva verzija koja nastala u okviru originalu ipsek protokola i druga verzija koja nastala nekih 5 godina kasnije zato što vidjet ćemo sad pokazati vam kak u izleda internet kick change razmena jedan, ona ima neke svoje probleme dakle mogla je da se poboliša. Dobro, sama internet kick change razmena se zastnila na difi helman razmeni, dakle koristi se difi helman algoritama, ali ono što ste videli to je da i što smo već pričali, to je da originalu difi helman razmena je problematićno zato što je podložna ili napadima meni do midlu napadima ili ripli napadima tako da ono što ćete vidjeti na kraju kao i kod teela, je to da je sama razmena hvijučeva odnosno cijel taj protokol razmene značajno kompleksni nego protokol razmena koji ovo je originalu difi helman razmena, dakle umesto razmene dve poruke vidićemo da ovde postoji razmena čakrniki 9 poruk, slično kao i kod teela je se da postoji razmena većih broja poruka. I zado ono što je problem i razmena zašto dolazi do meni do midlu napadima, to je problem autentikacija, odnosno problem vezivanja identiteta učestniku komunikaciji sa javnom difi helmanu vednošću pa to može da se u ip seko izdraši na razne načine, to je bilo bi digitalnih certifikatima ili digitalnih potpisima, dakle da te javne difi helmanu vednošći budu digitalno potpisane ili da budu ekliptovane na primer privatim mere sa ključem u okoliju digitalnom certifikata koji se razmenjuje, a ono što ću vam da pokažem to je varijanta u kojoj postoji u naparji da razmenju ni ključ. Dakle, ona dva entiteta koji razmenjuju ključeve, tij neki i i b, prenego što je počela razmena su se dogovorili i upisali su neki u napred razmenju ključ koji se koristi za verificaciju identiteta, verificaciju identiteta se vrši tako što je tim ključem šifrovan identitet koristnikar, na primjer neka identitet moja, identitet moja e-mail adresa, ja ću vama dokazati da sam to ja, tako što ću šifrovati tu vrednost plus neki nonz plus neki ona i slučaj androj, to ću šifrovati ključem koji smo u napred podelili i onda ako smatramo da samo mi ove grupi imamo taj ključ, ako imate ključ koji smo mi podelili, mi ćete moći da kažete da to je to je ovom postovo, zato što je to šifrovanog ključa koji samo ja i ono imam. Dakle, sad ćemo viditi kako izgleda ta razmena kod internetkih exchange. Evo je ovde. Znači, ovo je varijanta razmene koje se zove internetkih exchange, sa u napred razmene ključe. I kao što vidite, ima 9 poruk i vidite, struktura je dosta slična struktura i te lesa, razmog su to je verovatno taj što je i nastalo u sličnom vreme pa je način, jazmišljene bio sličan. Dakle, postoje dva entiteta, jedno je tako zvan i taj inicijator, ono su oniko i inicira celu razmene.
 drugi je responder, odnosno, neko i odgovor na tu, na početak razmene. I, ono prvo što se šalje, dakle svaka poruka ima neki taj internet i exchange header, ne, nije bitni, to je samo sintak sa poruk i kako izgleda, ali prva poruka koja se šalje je tako zvana SA poruka, odnosno, security association poruka, u kojoj se, u kojoj ovej inicijator šalje skup svih kritoglickih protokola koji on podržava, koje može da iskoriti za zaštitu dalje razmene ključeva. Dakle, to je vrlo slično onom client hello koji postoji ko te lesa da je vaš browser ka server u šalje skup svih mogućih protokola koje on može da iskoristi za zaštitu, podatak odnosno za, za enkvitiv. Pa onda u drugoj porunci kada je dobio to responder, ono dovolja sličnom porukom, jedina razdika što ono dovolja sa skupom svojih algoritama, dakle neće ono dabrati sad jedan tačno odvrađenje, nekoma pošli skup svojih, pa je onda pravilo da su ti protokoli porađeni po nekom prijevitetu, pa oni pronađu one koje najvišli prijeviteta koji je jednak i to je protokol koji će se koristiti, odnosno to su algoritmi koji će se koristiti za dalju zaštitu razmene ključeva. E dobra, ako su tu pronašli nešto što imaju jedan i drugi zajedno, onda ide poruka broj tri u koje su dva ključna dela, prvi deo je deo koji se zove kick change i u opjoru ovog ovdje dela je javna dif i helmon vrednost inicijatora i drugi deo je nonz, odnosno slučajom broj koji služi da se spreče replay napadnja. U poruci broj četri je javna dif i helmon vrednost respondera, ovo ako se šadju i plus nonz respondera, ješi jednost slučaj na vrednost koja služi da bi se kasnije izvršila verifikacija i da bi se proverile sve ove poruke. Dakle, ono što je ovde interesantno i što je ukranilini i loše i zašto je napravljeno in trg tih šeć v erzija dva, to je da se u porukama tri i četri odmahšali dif i helmon vrednosti i ono što se zahteva od obje strane to je da nakon poruke tri i četri oni izračunaju ključ na osnubu ovih dif i helmon vrednosti. A da se provera identiteta vršite kojada u porukama pet i šest. Znači, praktično, ovo je otvorilo mogućnost jedne vrste dinavar u sveve snapada, da je bi, recimo, inicijator slao lažne zahteve prema responderu i slao gomilu lažnih zahteva u kome bi on poslao poruku jedan i poruku tri, to bi izazvalo kod ovog respondera da on pošalje ovo ovde poruku četri, ali da počnete izračunava ključ. Izračunavanje dif i helmon ključa traje neko vreme i ako bi ovoj poslao veliki broj zahteva, postojeva bi opasnost da on previše zaposli njegov procesor da se ovaj bavi samo izračunavanje tih dif i helmon ključeva. Tako da to je nešto što nije dobra strana ovog interneti i tih šešnjš vrednosti je jedan, pa je to, su pokušali malo da modifikuju narodni vrezijan. Ali ajde, da zanema ima to. Znači, ovkaj u poruka tri i četri se šalju dif i helmon vrednosti i nakon toga, i inicijator i onaj responder mogu da formiraju ključ. E sad, taj ključ koji je tu formiram u ovi tački to nije ključ koji će se koristiti za zaštitu pojetaka u okviru onog ISP-a ili u okviru authentication header-a. Odnosno praktično, veoma je sličan proces neće uloziti te detalje kao kod TLS-a, taj ključ koji se dobije master ključ i s voga se generiš u drugi ključevi, ali dakle, ti ključevi koji će biti generisan i nisu ključevi koji služa za zaštitu po ataka, nego ključevi koji su dobijeni u ovoj tački su ključevi koji se koriste za zaštitu naredne fase u razmjeni ključevo. Znači, ovo ovde, što imate ovo zvezdicu u okviru header-a, to znači da od ove poruke, od poruke 5, od poruke 6, ove naredne poruke, poruka 7, poruka 8 i poruka 9, da su te poruke šifrovane ključem koji je dobijeno u ovej prvoj fazi razmjeni. Esad, u poruci 5 se šalje identificator i ako je u pitanju provera autenticnosti sa u napravih razmenjenim ključejima, to je onda naprimer njegova imel adresa koja je šifrovana, naprimer, tim ključem, plus neka funkcija ovih slučenih rednosti koje su poslate da bi se sprečili ripli i napadi i plus hash koji služi upravo za tu vrstu provere. U supratnom smeru, risponder odgovara svojim identificatorom i tu se završava ono što se zove main-mode. Dakle, tek nakon poruki 5 i 6 obje strane su razmene na ključeve i provere le identitete jedne drugi. Ako nešto niju redu sa proverem identiteta u poruci 5 ili poruci 6, tu će se stati i ovi ključevi koji su generisan i neći biti prihačen. Ako je sve u redu, znači onda imamo razmenjen taj prvi skup ključeva, onda se prelazi u drugu fazu, a druga faza je tako zvanji quick-mod, a u quick-modu se radi isto što se radi u prvoj fazi, samo u tri poruki. Dakle, ako pogljate šta se nalazi u poruci 7, u poruci 7 se nalazi ono isto što postoji u poruci 1, pa onda plus ove dve vrednosti koje su isti kao u poruci 3 i onda plus još ova identificator koji isti kao u poruci 5. Znači to je sve spakovojeno u jednu poruku, a ono što možete da primjetite, tu je se šalje nova javna difihelmon vrednost, i u povratnoj poruci imamo to isto, imamo novu javno difihelmon vrednost koju je šalje risponder. Na osnovu ove dve difihelmon vrednosti se formira novi ključ, odnosno novi master ključ, iz tog drugog ključa će biti izvedeni ključevi za inkripsiju podataka u opiru ESP-a odnosno za hmac funkciju u opiru authentication header. Dakle, ono što je karakteristicno za IPsec razmenu, to je da ona ima dre fase, prva fase koja se zove main mod, u njeć se formira prvi skup ključeva, taj skup ključeva služe samo za zaštitu drugih fase razmene ključeva, a u drugu fazi razmene ključeva se dobijaju ključevi koji se poriste za zaštitu podataka u IPsecu. Zašto je ovo napravljeno? Ovo je napravljeno zato što vreme života ovih ključeva je druga čije. Ovaj ovde prvi ključ njime se šifruje relativno malak koji će ima podataka, njime se šifruje samo ono što se nalazi u porukama od 5 do 9. I taj drugi ključ, pošto se njime šifruje relativno malak koji će ima podataka, ono može dugo da traje. Znači može da se kaže, recimo da će ovaj main mod da se vrši jedno mesečno, ne mora češći da se main. A sa druge strane, ovaj ovde drugi ključ njime mogu da se šifruje veliki koričen poatak. Na primjer samo uvediti download nekog filma i to je već nekoliko gigabyte poataka koji su downloadovan i šifrovani ovim drugim ključom. Taj drugi ključ bi trebalo da se relativno često meni. On može da se menja na neku vreme, na primjer svakog gadana, a može da se menja nakon prenenite određenje koričenu poataka. Na primjer da kažete nakon prenenitih 10 gigabyte poataka, ja ću menja ti ovaj ključ. I onda u takve situacije ne mora da se vrši kompletna InternetTikChangeVezija 1 razmena, nego može da se vrši samo ovaj quick mod. I to je ono kako je osmišljena razmena kod IPsec. I ono što bi trebalo da zapuntiti, to je globalni izgled ove razmene, ove dve faze i šta se u svakove tih faze vršal. Ono što se desilo kasnije, to je da je napravljena InternetTikChangeVezija 2, koja je napravljena da bude brže, jednostavnija da malo bolje i da bude odpornije na neke vrste dinarab service napada u kome se troše resursi ovih uređe koji učestuvaju u razmene. Ovde imate datu kako izgleda ta razmena, kao što možete da vidite, opet globalno je ona istakao u InternetTikChangeVezija 1, dakle ima dve faze, fazu 1 i fazu 2, samo što se ne zovu sad više main mod i quick mod, nego se zovu faza 1 i faza 2. Ali ono što možete da vidite, to je da je broj poru kasmanjen, dakle umestno 9 poruka, ovdje imamo 6, ali ako biste se sad malo udubil i pogledali šta pospoje, okru tih poruka videli biste da je to sve velo slično, znači ono što je ovde uređeno, to je recimo da u okru prve poruke imamo ona i sada je o pojemce specificira sigurnosna asociacija, pa imamo ovo što je delo poruke 3, dakle to je difih helma razvena plus nonce, a onda u ovih poruci broj 3 imamo slanje identificatora ili slanji certifikata ili slanje neku digitalnu potvise, zavisio toga šta se već koristi za razminu ključeva, ne morate da učite ovo prosto da znate da postoji internetki išli versija 2. I dobra, ovim smo završili i temu koje se zove IPsec.
