 U stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, U stanii u blokiranju, u stanii u blokiranju, u stanii u blokiranju, u stanii u i pristupa za izvegavanje dobro. To je jedna. A možemo da primjerimo izvešno broje kod zavristo. Što je sve našim problemu, znači im pravo i koji kaši je gredite. Imo već u broje razlišati. Znači nemožemo svaki pristup. Uziči da mi ti malo teža da moš konkretom problem svedanje koje imaš u tom pristupu življim. Pa tišete rešer. Nemojte da napravite življim. To je jedno do nako već i greko. Šta je sveče stvara? Nemo nepotrebnog kašnog. To znači nemojme. Ako neki drugi proces i nisu u kripicnoj tekcii te sve bi ti samo jedne. Zastav je nepušta. Zastav čekamo da se desi još do alne pušta. I ovde treba da vodimo racete. Da smanimo ovreme čekanja da povećemo mogućno da svi oni koriste rešer se da što manje dvuje tu okolo čim je mogući da se pristupi neki prešer se da nemojte. Nemojte i ako to ne potrebno da zaustavljate nekoga nemoj potrebno. Ako znamo kao maločnih nekrih, p je jednog ka p plus 1 ima da brajim synchronizaciju kad nam da sam jedini nešto radio. Nema synchronizaciju. Ako drugi nisu u kripicnoj tekcii svo meni zabranje nije učinit. Ako nije učinit. Imovo još jedni stvart lenčovo enskri. A treba da garantujemo da naš proces može dođe do naredi da otredi nekog pradnega. Ako se ovo ovde nedajse, mi ćemo imati izglednivanje. Koje sledeći pitan deliti greh na ovom predmetu da napravite izglednivanje. Neki proces i samo zato što je takav slučano redostacio tika nedajsi naredi. Znači da ne bude, da nekad može da uđe, da koristi resmet, može stresiti na naredi. A kad pišete vaše više, nije mora u ovstvom tekstu zavatka da treba da izbeći izglednivanje. To morate dobezda. A ali sada nekada ćete pročitati, piše izbeći izglednivanje. Izbeći izglednivanje. Piši izbeći izglednivanje. A to kad vam piše da izbeći izglednivanje. Ako imate per, da primu seno. I ako vaš proces ne može nikad dođe na red, onda rešenje nema. A ako imate per seno, i vaš proces može dođe na red, onda kažem da se rešenje dovoljne. Ali, ako treba da izbećnete izglednivanje. Kakim kad imate nepošten seno for morate da garantujete da će vas pročiti, pročiti red. To je da izbećnete nešto. Znači kogode ne pošten o statak sveta da bude, vi morate da obezbedite da to što ste napravili pošten orat. Kogode da je nepošten o statak sveta, vašo par će morati da radi pošteno. I mi ćemo onda viditi ovdje nekog. I je kako to možete. I li vi ćemo neka 3 algoritme. A o mogućemo. Če tikega algoritma, andresenima algoritma i cah algoritma. A ako to treba da nam obozvediti. Možete se setite kajte radili javu. Tamo nam se negarantuje redosa. Što je jeste tačno i nije tačno. Da odredimo signalizaciju na nekim objektom u javi. Nam se ne negarantuje redosa. Osim u jednom specijalnom slučaju. Ako postoji samo jedan koja zablokira. Garantovan oće ta i jedan da se probala. Ako ima više zablokir, na njih njih nije garantovan. Ali posto postoj ta i jedan. Pecijalni slučaj. Ako postoji samo jedan, da je garantovan, ovo da će ta i jedan da bude probala. Ko možemo koristiti. U tim slučajima kada treba da garantujemo. Da garantujemo da nećemo značiti. E predvijednje facija. Zglednivanje nikako nesmete da napravite. Izglednivanje dolazji. Ako je možda tako vrednose procesa koji dolaze. Da neki proces ako se došli dani u nikadne doce. Pazite. Ako vi napravite rješenje. Kod koga može doći da izgledivanja. Ali nikad neće doći u realnom kućaju. Zato što se nikad neće besiti neki dovolj. Ako vi imate neku dodati informacije. O ponašlju vaših programa. Vi možete poiskoristiti da napravite vaše rješenje. Da bi brši. Po rješenje. Če se izvom nredo raditi. U kućaju da ne dođe do veliku priliva neki proces. U kućaju može doći da izgledi. Da se sad reka. Da rješenje može biti dobro u jednim kućaju. Kolazan ka procesa. A u drugim kućaju da ne bude dobro. U tako neku rješenji će biti dobro u kućaju prije u 5 procesa. A preko toga možda u ostaniji će biti dobro. A tako da i u tome treba voditi rečen. Ako neko vama kaže ima ih 3. Ima ih 1. Ima ih poliko, nema ih više, neko je drugi garant ovo da ću to da se biti. E onda to možda možete da izgledite. Napravite da vaše rješenje bude brže. Bolje. Kasnije da koristi sve te resursa kućaju. Odlično sad. Da limate nekih pitanja? Ako ne imate pitanja pauzam. Dobar dan. Dobro došli da ješ jedan čas predavanje na predmetu konkurentno i distribujerano programiranje. Na predkodnom času smo krenuli da razmatramo kritičnu sekciju. Videli smo da ono rešenje sa zaposlanim čekanjem kod prezvodjača i potrošaca možda možda prođe, možda ne može da prođe. Ali mi smo mi to sad želili lepo da opišemo. Kako da se realizuje? Chod ćemo da to realizujemo pošto one mali problem. Jer P i C su dve kritične. Ako su dve, ne može biti realizovano kao at most ones property. Samo sa zaposlanim čekanjem. Svaj pitanje je, da li bi možda mogli to da realizujemo na drugi način? I odnosu ljudi razmišljeli i trebalo mi je neko vrijeme da smisle neki način. Kako može da se napravljamo? Ako se možda neko vrlo, da se neko vrlo, da se neko vrlo, da se neko vrlo, da se neko vrlo, kako može da se napravi synchronizaciju za dva procesa? Znači za sada ćemo krenuti da posmatramo slučaj, ima dva procesa, nema ih više, samo dva, koji ćemo da se ikronizujemo. Posnoćemo vidjeti, da li algoritme koji posmatramo? A možemo primjeniti i za slučaj da ima više od dva procesa, tri, četri, en, koko god da ih ima? Ako može super, ako ne dobro ne može, možemo malo dopromjenimo naš algorita. I onda ćemo vidjeti da naši algoritmi za synchronizaciju ima variantu za dva procesa, ali da imaju nešto malo oslaženije variantu slučaju da treba da synchronizujemo više od dva procesa. I prva, prvo rešenje, koje mi ovde posmatramo za dva procesa, a hoćemo da imamo koji prednikaj, odnosno koju oslov treba da bude ispunjen. A nikada nećemo imati i proces 1, i proces 2, i proces 3, i proces 4, i proces 5, i proces 6, i proces 1, i proces 2 u kritičnoj sekciji. To ovaj ovde pregdikat kaže. Znači ovaj ovde oslov kaže šta treba da bude ispunjen uvek in 1, and in 2, proces 1 u kritičnoj sekciji, proces 2 u kritičnoj sekciji, nikad se neće desiti da i jedno, i drugo bude jednako true, pošto ovdino možemo ovde kao negaciju, ovaj je kada naš sistem funkcijoneš, to se zove predikat, koji opisuje rad našeg sistemu, maločo smo imali predikat koji opisivalo kada možemo ući u prodilu srkodži uber, to je sad u suštini samo želimo da realizimo u pomoću in, i, i, i, i, i, i, 2. I sad ćemo imati različit kot za proces 1 i 2, malo se razlikuje. Šta mi želimo da se odrati?