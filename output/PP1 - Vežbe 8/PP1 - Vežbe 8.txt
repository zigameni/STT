 Užite se da se učivite, da se učivite, da se učivite, da se učivite. Užite se da se učivite, da se učivite. Užite se da se učivite, da se učivite. Užite se da se učivite. Užite se da se učivite. Užite se da se učivite. Užite se da se učivite. Užite se da se učivite. Užite se da se učivite. Užite se da se učivite. Užite se da se učivite. Užite se da se učivite. Užite se da se učivite. Užite se da se učivite. Užite se da se učivite. Užite se da se učivite. Užite se da se učivite. Užite se da se učivite. Pako je nitad nastavni, kad je ovo oka organizacija Kursa prene go što krenem no u danasnjom teme. Oko je eventolo nešto ina da pita, ja ću u kratko šta je plan za danas. Na prvom delu časa ovdje. da imamo uprosjeku po jedan zadatak iz Teta Bela Simbola, tako da je odosta često se javljio ti zadaci. Baš vunako tipski zadaci, tako da videteš ti danas u čemu se tu radi, a na drugom delu časa tamo negde ako nam ostane vrema, naveratno, hoći će možete skinuti tu tabelu simbola njenu realizaciju sa sajta, kako ona izgleda u vašem projektu i onda ćemo zapravo što ću ja pričati sada na prvom delu časa kroz zadatke, pogledati kako sa to izgleda se reprezentacija Teta Bela Simbola kako izgleda u projektu koji vi radi. Pitanja, koko vidim nikakvih ovdje na četu nemat, tako da ja ću da krenam, vi ako našto bude trebalo među vremenu, vi ime zaustavljiti. Najma redom, dakle, šta je ovo što je danas na tabela simbola? To smo našto kratko spomenili proši čas, dakle, vi sada kada je obujete pisali svoj projekat, vi dobijete, imate nekako tako tamo gramatiku i je o tako kada budete parsirali neka ulozni program, treba sve te informacije o tim promenljivimo, o metodama, tlajsama sve našta ne ilazi, tako u toku parsiranja, treba negrečuvati informaciju svemu tome da biste kasnije, te informacije koristili, tako bi ste proveravali neka pasemantica, pravilili i preolivali igreške u treći fazi i u četvopoj fazi kako biste moglili izgenerišite neka kot koji će zapravo našto svabno da izvršava. Vjela simbola će se u jaziku microreala sastojati od 3 vrsta čorola i prva vrsta čorola će biti nekakvim tiju objekni čoroli. Ja ću odmah prikazati kako izvršava taj jedan objekni čor, kako ćemo ga mi je ovdje crtati, posto ćemo vidjeti kako ono sve reali zelo na lidu nekakva plaste, tiju objekni čoroli biće zadužene da čuvaju informaciju s im deklarisanim imenim, kada kada je kajemo deklarisan na ime, onda znače ako imate nekakvim klasu kog znače koji se nazvali k, onda čuvaju nekakvim informaciju u tome k. Ako se ne izvršali nekako globalno promenljivu koja se zove var, treba vam nekako da sačuvate sve informaciju to i promenljivo i var. Ako imate nekakvim konstantu, ako imate neku metodu, dakle sve što se pojavlje dok vi parcirate taj nekakav ulozni program, sve to je u svariji predstavlja nekakvo ime i to osvećemo predstavljat u svariji jednim objeknim čorom, tj. jednom klasom koji će se nazivati tamo na negde oblijegnicu. Ja, ta je jedan objekni čor izgleda ovako, ja vam sad rednom da prođemo šta je ovde sve od ovih polja označala. Dakle, ovo pro kajem dobdim, treba da ima moguće vrednosti neki od ovih ovde zadati. I sad uzavisnošte je toga šta je varijanta projekta koji vi radite tekući godine, mi je ovo priloglađavamo naravno i ovu trabelu simbolo, ovo je u jeziku mikrojava, to je to i tekuće varijanti, ovdje je predstavljena jedna od varijanti koju najčaršće ovdje osnovna koji moramo da koristimo, a to je da vrednosti budu da je to u svariji ovo kon, neka kva konstanka, da je neka kva promeljiva, da je definicija neka kuktipa iliti na primer klasse, da je definicija metode, da je definicija nekog polja u nutar metode, ovo elem je specijalno vidjet ćemo zašto smo to koristiti i ovo prog ćemo koristiti, da u svariji odrtimu kako su zove cero naš program, da ještri videli i tamo ako ste gadili gramatiku za projekt koji koristimo, da svaki program počinje ključnom reču program i onda ide naziv tog nekakog programu, tako da ovo pro ćemo koristiti specijalno samo za taj jedan slučaj, o tako uloznom programu, o to je sam naziv tog nekakog programu. Za sve ovdje u našoj tabeli simbola postoje neka kva konstante koji ćete vi koristiti i to ću ja kast mi pokazati gde možete pronaći. Drugo ovo polje su odnosit na samo ime, dakle bilo da je promeljiva, kako je klasak i šta je već samo ime, kako je ona nazvana, kako je nazvana promeljiva, kako su dolajte metoda, kako su dolajte klasak i šta je već. Što spiđer treći polje ovog tipu ovdje, tu treba sada doopišamo koji je tip. I sad kaj pričamo o tipu, ukoliko se radi o konstantiji promeljivo, je obmanam jasno to je koji je tip, te konstantiji li promeljive, ukliko se radi o metodi, ovdje ćemo čuvati koja je povrata na vrednost, na primjer te nekakve metode. Če se stvarno, kako se koristimo, kako se koristimo, ovog polja ovdje tip, a da bi smo sam tip opisali, koristimo posebne vrste čorova, koje ćemo zvati strukturni čorove. I strukturni čorove ću svariji opisivati te nekakve tipove i oni ćemo svediti u opisivanju odmah napadnovih objeknih čorova. Ovo polje ovde nekakve je naglašeno samo da znate, da sa onoj u svariji ulančavaju. Tako da videte se kada budemo crtali tuto belu simbolu, da samo imam jedan objeknje ovaj čor, zazim ću imati pokazivioč na sljedeći i to su u svariji pravi nekakva ulančan list. Što se je tika oga polja Adere, ovaj sad polja na dalje dole, dakle ova poslednja tri polja, će biti specibitno uzavisnosti toga koji je ti po objeknog čora. Dakle mi ovdje na predmetu i na vašem projektu koristimo tu nekako, u tako zvanu, ravno im sa mentaciju tabela simbola. Profesori na predavanjama ovdje otno već pričao o tome dosta, pričao o različitim organizacijama tabela simbola, kako se to može da izgleda, to ste radili tamo se njim, mi ćemo ovdje na vežbama i uzvedacima i u projektu se baviti sam o tom tako zvanom ravnom implanetacijom, tako da se ja neću ni oslanati na te ostale, ali nemojte zanimarivati to što Profesori pitao. To je pričao tamo, jer je otakmo može dodobiti eventovno u vidu nekako uzvedatka, nešto od njega, što je vezno za te drugi implementaciji tabela simbola ili eventovno da napr. prodiskutujete koja imetana implanetacija u vidu nekako pista moh ješta, bela, tabala i čega se ne ne, pa onda on tu zna da postoji napr. neka pitanje, šta je bolj izbog čeka. Tako da kažem to, pogledajte, tamo mi ćemo odvijati sam ovoj ravne implementacije. Vlijat ćete ravne implementacije, ovdje imamo jedno polje koje smo nazvali ADER i kao što kažemo, ovo je vlačić ovdje, dakle, kada budemo pričali o metodom, okuliko opisamo nekakom metodu, odliče čuvati adresu, gdje se tam je to da napr. napravno nalazi ona nekako boj kod sekciji. Dok, napr. zapr. menljive i polja klasa odličemo čuvati njihove redni brojne. Ukoliko sad objivo imate nekakom metodu i ona sad tu ima nekakove svoje lokalne promeljive, njih ćemo redom numerisati brojima 0, 1, 2, 3 i da, i onda ćemo vidjeti hasnji do fazi generisanja koda, zapravno koristimo taj redni broj, napr. lokalne promeljive, kada generisamo nekakom istruciju koja ću pivitati nekolokalnu promeljivu na stek, i onda moramo da je kažemo koju po redu u koji imamo svar i promeljivu i to ćemo svar i čitati o dat. Zatkađam, ja ću ovo sve oveko lepo da nabacam, do stakl gdje štao zašto služi i onda ćemo posljike, bojemo radi zadatke, već ćemo to olako leći. Use tiče polja ovo da je ovdje level, to polja level ćemo za promeljive koristiti i da je kažemo, da je su to nekakva lokalne ili globalne promeljive i opet će nam to služiti u fazi generisa njakoda, zato što tamo jezik mikrojava kada budemo pokazivali njegu u virtualnu nošinu, vidjet ćemo da uzavisati doga, da je neka promenjiva lokalna ili globalna, koristimo razljitite instrukcije za učitavanje i smeštanje, dakle koristit ćemo ili load ili nekako get static. To ćemo veći raditi na sljedećem čose. Što si tiče metoda, ovo ovdje polja level ćemo koristiti da kažemo, koliko argumentata ta nekakva metoda ima. I što si tiče o poslednog bolja locals, za same metode ćemo koristiti ovo locals, to lokal su u svariji presalja novu kolekciju ovih objeknih čorove i to lokal je celu jednu ulačan listu ovih objeknih čorove i za metode tu kolekciju ćemo koristiti da čuvam u njoj argumentate metode i lokalne promeljive, dakle ovdje naglašeno samo lokalne promeljive, ali i argumenti će se navaziti tu. I spetijelno, tako, jedna situacija će biti da ćemo za program, tu videte, ćete kastnije sve na kraju ulačati. Dakle, sve što se navazili u nutar programa sve klase, sve metode, sve globalne promeljive i td. Sve one će biti ulačane na kraju u stvari u ovu locals od tog naše glavnog programu. Drugi tip čorvo će biti ti nekakvi strukturni čorvi, koji ćemo služiti dopisujemo nekakve tipove. I kako izlaj i an strukturni čor, ja go prikazam ovdje, što se ti čovih, dakle, oblik, oblik jeste da oblik ničor treba da izgleda ovako kao provogavanik, ovaj strukturni čor će ima uvek crtati ovako nekako zaobljeno, ali što si ti čovih boja, ako si prikazam na slideu, dakle, ne morate da bojite na ispit, na ispit, z kroz ok, da ih samo natak. Naravno nini važno, i znači, ćete sad ovo zaobliti ovako ovaj strukturni čor, ali u lano mu zalismo tako taj tu konvenciju da ih tako crtati. Jedan strukturni čor ima ova četiri polje, i ta četiri polja, ajmo da imamo što znači, dakle, moguće vrednosti ovoga, ovdje, kajnce će biti, ovo nan ćemo koristiti za void stvari. Znači, kada budete tamo imali nekako metodu pa ima povratno vrednost void, onda ćemo koristiti u stvari ovo vrednost nan. Zatim imaćemo standardno ovo int, čar, bool, ilišta već imet od primitivnih tipova u projektu, i imamo ovdje, kao posebne dve izvojeni ovo array i class. Dakle, strukturni čorom ćemo moći da opišamo i nizove i klase. I sad ćemo vidjeti kako sajte nekakve dodatne informacije okunizove i klase ovdje u gada ćemo, a ja ću kasnje pokazati i nemojte se zbuniti u koliku stvari.
 možda vezi gledali implementaciju te naša tabela si bolo koja je okacena na sajtu, dakle tamo ćete u ono strukturno čoru naći još nekakve dodatne stvari kao što su enu, interface i još ne znam nja, dalje još našto ostalo od pre. Dakle vas to ne treba ništo da brine, to su su su tu jednu tabelu simbolo koji srećemo veći godinama i tako tu mikrojavu menjemu dosta, tako da jedne godine smo imali nekakve interface i drugi godine smo uvacili nekakve enume da se pojavljuju, koji vas toga svega ove godine nema, tako da vi samo te dodatne stvari koji se tamo pojavljuju da ne mariti. Ako se nevaram sve što vama potrebno ove godine i jeste prikazano odranutno ovdje na on slide, ovo to su inz, čar, gul, re i klas i ne bi trebilo ništa više tamo se. Zatim sveća stvar, ovdje LM type, to polje LM type ćemo koristiti samo ukliko se radi o nizovima i klasama i to za nizove ćemo reći da su to nizove i pa onda ćemo ovim polje odrejiti kok tipa. Kad je kažete da je nešto niz intova, vi ćete zapravo ovdje u ovom e kind postaviti da je u pitanju ovdje nekakav niz, a u ovom je ovdje LM type ćete u stvari postaviti da je tu u stvari int. I onda ćete reći da su tu u stvari ovdje ovdje nekakav nekakav niz intova. To se tiče ovo polje LM type, njega ćemo koristiti u slučaju klasa i pomoći tog polje LM type koji je isto tipa ovoj strukturni čvor. Ovo mi kao da imati pokazivac na razad na jedan strukturni čvor, ovo polje LM type ovdje će pokazivati koji je tipa naša nat klasa, u koliko se radi o klasa. Naravno, u koliko nemamo nat klasu, onda ćemo ovo polje ostavljati ovdje. Ovo polje N ovdje će biti koristiti u strukturni čvoru samo u koliko se radi o klasama i tu ćemo čuvati broj polja klasa. Zašto nam je važno to polje tu. To polje će biti važno kada budete alocirali prostor za noviji obikat, onda ćete samo pogledati strukturni čvor na klasi koji je utravljno alocirate, koliko ona polja ima i na osnovu toga ćete zakličiti koliko memoria treba da alocirate tamo na gdenah hip. Ovo poslednje ovdje je avlja se polje field i to polje tu zapravo je nekakva kolekcija ili tako ovih ovakvih ovde objektnih čvorova i u tom polju tu fields ćemo sa svaku plasu određivati koja su to članovi te klasika. Ja kažem članovi mislim naravno na polja i na metode koja se nalaze unutar tene kakve klasije. Ajmo dalje i osjena čvor pa onda predstavim da zadatak pa će na biti se tako dosta jasnije. Dakle, kod ore dova dva čvora imamo i čvor popsikom. Popsik nam služi, to kažem već je prostor odratna prešla tajden na predavanjima i to ste odratno slušali dosta puta na raznim kurserima. Dakle šta znači nekakva popsika. Kada kažem ona ove promenljiva koji sam definisa ovdje je vidljiva unutar pa na primer ovaj nekakve metode. Ili na primer ovo polje ovdje pošto je privatno, vidljivo je unutar ove klasi. Da bihmo definisali šta je gde vidljivo i da bihmo tako prečeli da se to nešto koristi van tog nekakog obsigu u kome jeste vidljivo, uvodimo ove nekove čvorove obstiga i taj čvor će ih zledati ovako. Dakle, crta će mu ga kao ova jedan provogoni gde je godni del izdajlja nova dva nekakva pokazivača. Jedan pokazivač će pokazivati novo autor i to tu autor će u svare biti pokazivačno okruživiči obseg. Dakle, bih, na primer, imate sada jednu klasu i otvorićete jedan obsegu u kome ćete u kako definisati sve što se naozi u nutar te klasi. I sad sve promeljive metode koja navodite u nutar te klasi će biti vidljive u nutar klasi. Mi djutim kada sad u nutar te klasi otvorate, toh zgada definišete nekakog metodu u nutar te klasi, vi ćete otvoriti novi sada jedan obsegu u kome ćete sada definisati nekakve lokalne promeljive koje se naozi u nutar te metode i one će biti vidljive samo u nutar te metode. Kada zavrašete knu metodu zatvarate taj obseg i vraćete se na one obsegu tako klasi u koje ste bili. Uprvo zbog toga imamo i pokazivarčinoopružoviće obsegu i onda ćemo u crari zapravo praviti stack tih nekakvih obsega. Ovo je pođe lokal, će naravno pokazivati na kolekciju tih objekaj čorovak koji su trenutno definisani u nutar tog jednog obsega i ovo pođe dole nvars će u crari govoriti koliko to u crari promeljivih trenutno definisanu u nutar na primer jednog obsega. Če smo ovog otaku ispričali, hajmo onda sad da vidimo sad kako izgleda ove jedan univerz obseg čim o to zvati. Ovo kad pogleda to ovde sad verovatno u vam je lošel, a možete mislite koliko je bilo mene da ovo sve ovde istrtam na ovom slideu i ovo je nešto što mi zovemo univerz obseg. Dakle, ovo je nešto što mi u jeziku mikrojala ilu već predefini sam. Dakle, ove svari vi nećete u projektu sami otaku ubacivati u tabelu simbolu, ove svari su već upračene tamo, ja ću vam posleda otvoriti tu tabelu simbolu i pokazati da se to zapravo se već tamo nalazi. A sad ćemo samo proći da vidimo što je ovdje, da je nije ništa komplikova, na vidjetisni reć. Namjerno ovde sad da pričamo ovom univerz obsegu da bi smo videli šta je to tako što već postoji u jeziku mikrojala, a mi ćemo uvek na ispitu naglašavati, kao što ću joj auto-datcima danas da bude vradi. Dakle, naglašavaćemo da ove univerz obseg nije potrebno cetati, jer otaku da ne gubite vreme na ovo sevo. To je definisano sve u jeziku mikrojala. Podmah je ubačen jedan čvor, ajmo da krenu mi spročetka ovde. Dakle, jedan čvor vidite koji je tipa type, koji opisuje neka ka v tip. I to su o tako za svaki od primitivnih tipova koji imate tamo. Ja sam ovde navel o it i char, vame su tamo veratno biti navedani i o tako i ono i bult, to ću proviriti kasnije za jedan pribeš sa vama. Ali na primitivi vidite o det definisani da postoji neka ka primitivni tip int i definisani da postoji neka ka primitivni tip char. Ove trebali te ovde, dakle su vidite, samo pokazivac, da su oni vstvari sri u ulančanju nekakvu listu. Ajmo da redno da imam što je ovo type od tipa. Bit, on je int, a njegovo ovo je ovde tip pokazuje na jedan strukturni čvor. I evo ga dole, dole smo za svaki od primitivnih tipova napravili po jedan strukturni čvor, da smo rektili da je to nešto o tako što je tipa int type bit. Dakle tip je ovde int, a nazvali smo ga int type da bi smo ga kasnije koristili kada je negde gdeg od treba da kažemo da je nešto tipa int, će o tori koristiti ovo int type. Na ovo prvom slajde ja sam namernosti u da bu kao ovde linije je o tako da vidite, da to zapravo stvarno je smo nekakvi pokazivac i nekakve objecte, kasnije ću samo koristiti ovog ovo u referensu int type. Dakle, ako sam postoji neka tip int, postoji neka tip star. Ja sad pogledo to do ovdko treće sta imam već predfinisan u jeziku mikrojava. U jeziku mikrojava postoji jedna konstanta, koja se zove eol kao hand of line, koji je njen tip, pa vidite da vucem jednu linju dole kroz do ovoga čar, dakle to je neka kova tako karakter. Pokazivac pokazuje vam sledeći šta već ima, ovdje vrednost rektismo za konstanta, če ima odmah u tabelu simbolu pisivati njihov vrednost. Hand of line ima on vlask i vrednost 10, zato smo odupisali odmah 10. Ovo dole polja, gdje goce to je crtice, to znači da o tako za ta i neki tip ne koristimo ta polja, tako da na primer polje level i polje local se za konstante ne koristimo, tako da ostavimo ili hili, prazne ili sta imam celice. Zatim postoji još jedna konstanta, koja se zove null, i ako pogledajte kog je tipa tako konstanta, ona putuje dole skroz do nekakog strukturnog čvora, kaže da je to klasnog tipa, ali to je ili tako null type koji će mu uvesti, koji će videti postoja ili tako u mikrojavi, on narodno da nema nikakva polja, nema nikakva ni polja, ni metoda unutar te neka klasne, nego je to samo neka konstanta koji koristimo tako koja pokazano, neku ima gdernu klasu i ona kaže to je nešto što je null. Zatim pogledajte što imo dalje, imo jednu metodu koja će se zvati cihră, i ta neka metoda će nam služiti da u svariji od nekakvog inta dobiljimo neka kav karakter. Dakle to će biti ove metode cihră, kako imate cihră, imate i ovde orada i to ga se možda sečete samo na nej zepu paskal, ilik desite vi spominio, levatne neke metode. Dakle metoda cihră tip, dakle tip metode cihră, vidite gdje je vode ostrajelica, spušte se ovu da ovamo skroz dole, povratna vrednost metode cihră će biti čar. Dakle, opet pokazuje novi strukturni ovde čvor, koji je tipa čar type. Ako pogledate dalje, što imamo još da tu nekakvog metodu, ovde treba da stoji njena na adresa, naravno ja se stavio crta, tato što ne znamo tako gdje se metoda trenutno nalazi, to ono ovde nije nevažno. Koliko argumenta ima ta metoda, ima jedan argument, a vidite ovdje ovdje ovdje ovo njeno po lje lokal, se sada treba da pokazuje na listu tih argumenta i lokalnih promenjevi koje koristimo metodi cihră. Ima vidite jedan argument i ovde sam ga nazvav al i možete ga nazvatite kako godi hoćete, kažem to je nekako al tako promenjiva, kog je tipa taj argument, pa vidite s trelici da vam ovo, i pa je uspario oga im. Ovo ovde ovde nekst polje, njega nijega nista, njega niste, njega niste, to je jedina koja postoji promenljiva uonutar ove metode, kažemo nalazi se ovde ovde na nulltom nivou i ovdje ovdje nivog neždena je jedan. I je globalna, nego u stvari nekako promenljiva koji deti nisano uonutar metode, zbog togo ovdje stoji jedinit. Analog na tom imate i ovu oradu koja je ov tako šta smo dobili ovde. Oradu će biti int tipa, ako argument će imati jednu promenljivu koji smo nazvali cihr, koja je u stvari tipa char, i imamo predefini sano u jednu metodu koja se zove len, koja je služio tako za određivanje dužine nekako gniza. Ako pogledajate šta je njenom povratna vrednost, pošto određujemo dužine od nekako gniza, povratna vrednost će biti u stvari opet int. Dakle, c'e obroje jedan vrat ćemo, koliko givemo argument, da jemo jedan argument i ako pogledamo šta je sada argument, ovako je metode len. To ćemo malo biti, možda, progun u projektu da realizujete. Blagi problem. Dakle, taj argument metode len treba da bude niz, ali kakav niz? Niz bilo čega. Dakle, za sve nizove koje god možete zadeviniši, to o metode len se koristite da vrati njiha u dužini. Tako da ja ovdje kažem argument metode len je nekakva promeljiva koji sam nazvo arr, opet ovog dole 0 i 1 kao imalo premidljutim šta je tip, ove promeljiva arr. E pa ja sad ovdje definišem novih strukturničvor kojim sada kažem. Ok tip, ovoga, al tako tip te promeljive treba da bude niz, ali čega niz? Rekli smo do ovodrgo polje koristimo da kažemo čega je to niz, e čega je to niz, ovdje ćemo staviti na n. Dakle, koristimo taj no tight kao najvojt što sam malo prenaglasio da će biti korišćen. Evo, goto to je taj vojt ovdje, ja ću onda zapravo reći da ovamen to da len pa ima niz vojt tipova, a zapravo hoću time da kažem da ona može da primi bilo šta.
 I sad to je možda pretravno sad ovako kompletno, ka krenajim prvi zadatak, ovaj bi sve trebalo dolegne i da bude jednostavno. E, na sljedećem slajdu sad kada pređemo dadu, ja sam namernoje linije ldevuka, kažem još jednom, da bi ste svatili da svi oni zapravo pokazuju da će biti u stvari referenciji, da postoji samo jedan ove int-type, jedan char-type, jedan null-type i jedan ove no-type. Za te predetimista ne tipove, i stvarno tako u sve mojim poljima će biti referenci samo ka tim jedinstvenim čvorovima koji postoje. Kako to sve zapravo izleda, a ako sad za nemarimo da njih ne moramo za crtamo ovde, to će onda zapravo izledati ovako. Dakle onda ćete samo ovo polje ovde gore, gde treba da se napiša nekakak tip, za setet ove koji su predetimista, ne mi ćemo ovde samo odmah pisati, da li je to int-type, ar-type, null-type, null-type ili šta nam je već poje. Dakle to nećemo nikad crtati pepe. Posebne strukturne čvorove zaprimiti na tipove, njih već pretpostavimo da oni tamo nekde postoje. I na kraju, ono što sam rekao, dakle uvek ćemo za program naš tu imati jedan objektni čvori iz-z-a-njega, naravno, on će biti null-type, nema nikakog vrednost, koristite ćemo vojdi za njega, i na kraju videte ćete da će ovo njeguo lokal se u-lanchati, tako i svi objektni čvorove koji se budu pojavljivali u to neka pomulozanom programu, ću u stvari pripadati ovom programu ovdje. Ajde da ne dužim nogo, da vidite kako izvaj jedan, sad mini, naravno, zadatak, ali primer al tako zadataka kako možete očekivati, naravno, vidite ćemo i neke malo kompleksnih ili znani. Dakle, ovo su zadati, kaže, prikazati izgled tabeli simbola u karakteristićim tačkom, označenim sa, pa sada u tako timi nekim grovim u zagradama s vredicama, i za priloženim i kriavama programu. I tamo ćemo uvek naglošavati da ovo i univerzopsek nije potrebno crtatit. Dakle, crtatit tamo, ovo se osto što se pojavljio u programu, podrozumelite da se što je predefini se, no već, postoji u toj nekogu tabeli simbola. Evo da nekog program kako izvaja, primvara nekog programa napisana na mikrojavi, i mene sada zanimo za svaku, odali še stačaka ovde, tako u svakom tom trenutku izgleda o tabela simbola. To osmoli, mislim, kada budete radili na koloklima ovoje zadatke, dakle, o dosta često ljudi, sada koloklam izbis redno, dosta često ljudi uzna i nacetaju celokomu tabelu simbola. Dakle, mi ćemo uvek u programu baciti konkretno na jednom mesta, na primvara, ode, tačka četri. Tačka četri, tačno se zna gde je. Dakle, ono je tu kada ste vi prošli od svako deklaraciju ove metode gore i za počinjeta njenu telu, ali još uvek niste završili tu metode. Tačka pece, naprim. nalazi teku trenutku kada ste vi završili od svako celokopnutu nekakvu metodu. Tako da, ajmo sad redno, da imamo kako ćemo ovi zadatke u stvari da radim. Evo da se prisetimo, da bi smo trtalili tu tabelu simbola kako ona izgleda, poristićemo ovako nekako pričvora i sad je potrebno njih sada spakujemo u zavisnosti doko što se nalazi u ovom uloznom programu. U tački jedan, ta naša tebala simbola izgleda ovako. Dakle, ja sam ovdje sad zanimario sve ono što se nalazi u celokopan, ono i univerzopsek i ono što su pojavljio ovdje, jeste ovoj naš program koji se zove ABC i naravno on je tipa no type. Ovo njegovu lokal, stravno ovdje visi, kasnje će biti uločno na nosi, veš to posloji. Depinišam noviji program, tako da se otvara noviji opsek i ja se spušlam ovdje dole. I ovdje ovdje vidite, postoji jedan pokaziva što beza simbola koji se zove topscope koji pokazuje na ovaj opsek koji se nalazi na vrhu tog nekako u našeg peka. E sada ko pogledamo, gde se nalazi tačka dva. Tačka dva se nalazi nakon što smo prošli, definiciju nekako je 3 globalne promeljile. Jedna je tipa niza karakter, a druga je tipa int i treća je tipa kva. Kako će zglijati ta bela simbola u toj tački dva? U tački dva ta bela simbola izgleda ovako. Novi topscope koji je trantno otvoren, smo batili 3 nekakve promeljile što znači da su ovdje meni, ovo je broja, će pokazuje sada da imam 3 promeljile. Idemo rena, što imam? Imam globalnu promeljivu koja se zove, al tako ovdje pišem šta je ona, to je var. Tako se zove ta promeljiva u zove sec. Kog je tipa ta promeljiva, ide jedan pokaziva, čokoliko se ne radi oprimitivno tipu, onda imam da crtam sam strukturni čvor koji ću. Samo da imam neko me nešto pita, izinjam se, nvar si je 0 u najvišom bloku kada se definiše progrup. Ovo je nvar se ovdje će govoriti koliko imamo promenljivih unutar jednog oprezika. Pa sada ovde pošto nemamo nijedno promeljiv u gore, on ću uvek zapravo biti tu 0 u ovom otaku i univer za opreziku, ovom glavnom opreziku u gore. Ovde dole je malo prebio 0, ja sam ka sada podigao na 3, zato što sam definisala od 3 nekakve nove promeljile. Ovdje, da imam še jednom, dakle var c, ovde definiše motip. Reklo sam, koliko se radi oprimitivno tipu, samo ću kao napisati int type ili char type. Međutim, pošto ovde nije primitivan tip, nego je neka nizka aktera, prtate ponovnovi strukturni čvor i njime obisujete taj neka kav tip. Taj tip je u stvari r, dakle u pitanju neka kav niz, i rektim smo ovom drugom pođućemo reći nizpega, pa sada odel tako pošto se radi oprimitivno tipu, nema potrebne crtam novih strukturni čvor da bih opisao čega je to niz, nego samo napišem char type. Nastavljate dalje, ide pokazivačko o vamo, 0 je promeljive, o tako gore prva koja se pojavlja u programu, i narodno, ova 0 ovde kaže da je to nekakva globalna promeljiva. Dakle, idete, da će sve 3 u ovom polju ovde imati 0, zato što su sve 3 globalne promeljive, a ovog ovoj uredni brojčima znacavate o tako koje su se pojavile o programu. Dakle, ovo je 0, ovo je prva i ovo je druka. Majemo slijedeću, ovo max, dažete što je, što je to, to je nekakva promeljiva, kako se zove, zove se max, kog je tipa, primitivan je tip, tako da ću samo napisati int type, prva je po redu globalna, locals za promeljive dole nenom. Sveće, imamo promeljivu novu, zove se mpp, tipa je char type, druga je po redu globalna i tako dole locals opet nemam. Tako da je ovako izglata, bela simbola u tački 2. Majemo da je dje. Tačka 3 se nalazi kada sam ja ovde zapuče da definicuju nekakve nove metode koje se zove put. Tako će sad izgledati tačka 3, pošto za počinjem, novu definicuju tako novaj metod ova put ovde i ovo se što se bude nalazilo nakon tački 3, kao što napimera ovo int x ovde i biti vidljivo samo u nutar te nekakve metode, to znači da treba da otvorim nov i obzik. Tako da o tački 3 ja u stvari ovde na ovo c max i ntp lepim i novu metodu koja se zove put, a zna nju otvorim dole nov i obzik, koji naravno trenutno u sebi ima nula promenljivih. Ako pogledamo kako izgleda objekni čvor koji im opisujemo ovu metodu, dakle što je to, to je nekakva metoda. Kako se ona zove, zove se put. Ovde rektisimo ovopolje tip, koristimo da kažemo što je povratna vrednost nekakve metode, povratna vrednost tojemo je metode int, tako da ovde pošte primiti ni tip, samo pisem int type. Ovo ove, ovo ove bi trebalo da zbeležimo, ov tako adresno na koji se nalaze ova metoda, ti me se nećemo odbaviti da nas, dakle to ćemo ostaviti za sljedeći čas, kada se bojemo odbavili generisani koda, pa ćemo nešto malo komentari sa tegupštom, koji se toga tiče tu, ali ov tako za sada samo ovde znate tu će stajati adresno ove metode, ja trebantno pošto ovde sada ne vršim nikako generisanje instrucija nikakvih i izlazno opajte koda, dakle ovde ne znam koja je njena, treba da se upiše koliko ima argumenta ove nekakvove metode, pošto ja još uvek nisam obradio celokupnu metodu ovdje ove stoji crdica, ali to ćemo na kraju poponiti, a na ovo ovde, na ove ovde pokazivač, treba da su uveže lista svih argumentata i svih lokalnih promenljegih uunutarte nekakvove metode. Ja to i dalje ne znam, tako da ovo i dalje listi, ali videte ćete kasnije, ćemo to pokupiti iz ovog obsega koji smo zapravo ove i otvorete. Tako da za sada u tački 3, kada bi ste na primjer dobili ovako našta odcratate na ispitu, u tački 3, vi samo znate da postoji metoda put, ovi informacije ovde i dalje ne znam te, zato i dalje niste prošli ovo intiks, nici pelo temetode i dalje niste zatvorili ove obsek, tekste otvorili taj obsek. U tački 4, što se desa? U tački 4 ja sam prošao ove argumenti, dakle znam sad koji su to argumenti i koje su lokalne promenljive, zato što bi se lokalne promenljive u jeziku mikrojava javile pre ove vitiče ste zagradili ove. Tako da, prošao sam ovako te argumenti i lokalne promenljive i ovak je taj argument i x će se pojaviti ove, u ovom novom otvorenom obseku. Naravno, ovde menjamo ovde brojna jedan, nije došlo nova promenljiva u taj obsek tu, a se pojavilo promenljiva, ove argumenti ćemo isto voditi kao nekadlje promenljive, kako su zove x, tipa je int type, koji je po redu nultije, odde sad se javile jedinica, dakle oviša nije globalna promenljiva, nego ovo je sada promenljiva koja se nalazi u unutarneka metode, tako da ovde ovo je broje 1. Zašto ove broje 1, napr. koja je promenljiv x, ako do ovo ovo max stoji nula? Dakle, nosnovan ove nula i ove jedinice, oddaj ćemo praviti razlik u generisanju koda za učitavanje ove promenljiv x i generisanju koda za učitavanje ovo max. Za ovo ću koristiti instrukciju u load, zato što je lokalna, a za ovo ću koristiti gore na ekonstrukciju get statika, da su to je tako globalna promenljiva. U svakom tučaju, ajmo dalje, u tački 4, mi dalje imamo samo otvoren ovaj obseg ovde. Tek, kada se završi cela metoda, dakle to će biti tačka 5, kada imate u zatvorenu, vidite čas u zagre u c metode, i tek, u tački 5, mi zatvaramo ovaj obseg ovde, to ćemo viditi sa jednom slajčem slajdu, dakle ovaj obseg ovde ne staje, sklanjam ovo top skopo da vde, a sve ovo da vde, dakle se što se nalazi unutar tog skopa, a to je koji mene sam ovo promenljiva x, u launch'a vam zapravo da pripada ovo je nekakoj metodi ovde put. Tako da, u tački 5, to u stvari ih uvijedamo ovako. Dakle, ažuriramo ovde da metoda put ima jedan argument, i u tom trenutku njeno ovo locals stavljamo da pokazuje na taj zatvoreni obseg. Zatvorni obseg se sklanja, a top skop se seli na pa, vidite ovaj počemu sada služi, ovaj pokazioš autor, način, on treba da o tako da vam pokaže našta da treba da se vrati, ili te da se sada vrati u stvari na ovaj obseg ovdje gore. Ako pogljavamo dalje, šta ću se desiti u tački 6? U tački 6 završili smo celo kupan program. Dakle, došli smo do kraja programa i u tački 6 ćemo samo uraditi tako prevezivanje ovoga. Tako da sve ovaj ovo ovde, sve ovo je promenljive, reko sam sve ovaj, vidite, sve tri promenljive i celo ovo metodi ovde, si oni zapravo pripadaj ovom nekakom programu gore.
 Na kraju, na kako me nešto pita, nešto ponovim, ponovim nije problem, samo da završim, na kraju kada završimo tako parsiranje celokupno ulaznat programa, ovako treba da izlatila tabela simbola. Dakle, imamo program koji ima ulačano u sere, sve što se naozi u programu, a ovaj pokazivaš top skog, mora da pokazujem na taj gore univerzopsek naš koji je otakvo postojeo i u startu odakle smo još ikrenici. Kajaš, kolega, da li mogu da ponovim šta je ovo jedan kod x i os jedan? Ove jedinica ovde. Taj jedinica tu ku toga x i u stvari ono naše polje level i ono u stvari označava da ovo x ovde nije globalna promeljiva, nego se nalazi unutar nekadme metode, dakle lokalna je za tu nekadme metode. Znači to ću u stvari označavati, ja ću ovde nula će biti u stvari sve ove lokalne promeljive, jedinica će biti nekakve lokalne promeljive argumenti, naprim. ovih naših funkcija, a vidiš samo kasnije u zadatku, ja viće si neka dvojka koja će nam reći da je to, naprim. neka promeljiva koja se nalazi unutar metode, unutar klas, dakle to u stvari Entrepreneur. Nivon na kom se promeljiva nalazi. Ne manacam. Gjel imamo nekih pitanja, ajmo slobodno ovde ako nešto sad nije jasno, dakle, ovo ovo je sad najmanji mogući zadata koji, prim. nečega što bi trebalo da se crta, naprim. ne ispi. Pa se zarajem neke malo komplexnije zadatki. Kaža kolega, znači samo nam treba odvajen broj za svaki mogući njivo u celom projektu. Pa ne, ne, nećete li imati neznam njako liko nivoga, dakle, najveći mogući nivog neždje način koj vas biti u stvari dva. Jer tako nula će biti globalno, i jedinica će biti ovaj lokalne i argumenti nekakvih funkcija, i dvojka ćemo će da budu stvari samo ta promeljiva koja se nalazi unutar metode, unutar klas. Jer ne možemo dublje da idemo, ne možemo, ne možemo jaziku mikrojavan da definišemo na primer metodu, unutar metode, tako da biće samo tako nula i jedan i dva. Sad vidite će tu projektu, vama zapravo nini važno tamo da li će to biti jedan ili dva. Vama je zapravo samo važno u projektu, da li je to nula ili je veći od nula, jer nula će govoriti to je globalna, a ovo se što je veći od nula je to znači da se nalazi unutar nekakvog funkcija, i onda će tu uvek tukoristi u stvari tu instrukciju load. Dakle, pojete toga nije da vi sad brojite na komjona nivog, samo da znate pri likom generisem je koda koja instrukcija treba da se isporisti. Dobro, ajmo nijegu kako je zela drugi zadatak, pa ako nešto gove trebalo, vi uspod pišite. Dakle drugi zadatak, će vam malo ozbiljnije, dakle malo veći zadatak, i sad malo više ojih nekog tatičaka koja treba da gledamo, ali nije to sad ništa kompleksnije, nogo svem što imamo sad nekakvog klasku ovdvod ubrčenu, pa ćemo sad zemimo šta se svem tešava. Dakle, nije moj zadatak dva, ajmo ja ću malo produžiti sad o tako ovoj prvi čas, sami malo kastinje, opet, izvinjala. Dakle, da završemo ovoj drugi zadatak, pa ćemo napravimo malo paluzut, onda imamo jedan zadatak treći koji ogromno zadatak sa još nekakvim izvođenjem klasa da vidite kako se i to trta, pogotovo zone, tako ambicijozne koji planiraju da rada nivog c, i onda kažem na kraju to grubu čase ćemo da odrdim u jednom malu simulaciju svega. Ajmo redno, nemo kako to dovo izvaja, dakle, opet koristimo ovo sva 3 čvora ovdje i sad treba da istrtamo ovo se. Krenemo rednom, tačka 1 nećemo komentari, se ti videli smo malo preko kako izvedala. E sad šta se javlja ovdje, do tačke 2 ja ću proći jednu konstantu koja se zove c, imam rednost 15, i promeljivu r. Tako da, to dvoje izgledaće ovako, dakle javlja se ovdje 1 čvora, obradite pašno samo ovde zvode stoji 1, dakle, ovde broj, broj promeljivih, dakle, konstanta nije promeljiva, tako da ona neće biti uročno od tvoj broj. Dakle, tazim, ovde redno, šta opisujem, trantno opisujem nekako konstantu, kako se zove konstanta c, kog je tipa primitivanje tip, tako da pisanjemo odva samo int type i redno smo za konstanta u polju adera, odmah opisujemo njihovo rednost, a to je rednost 15. E sad ovdje, ovako, kad bakla, to me čvora, vi sad ne zna te šta je ovo 15, ovdje našto se to odnosi, ne morate brinete za to, na ispitu ću vam uvek mi datim na druge strani ispisa, dakle poslalno one naspune strane, ide jedna strana koja svar je pocitim, kako izglede ovi svi čvorovi naši, naravno nećemo reći šta gde treba dopisak, ali bi ćemo tamo naznačiti naje ovo je polja adera, ovo je polja levelitode, tako da nemorate koda pametiti napometne dobog. Zakom, konstanta ova druga dva polja dole ne koristim. Dalje šta imamo iemo promeljivu koja se zove r, koja je tipa čar, tako to je nulta promeljiva po redu i ovde nulo stoje, zato što je to nekako u svariji blobna promeljiva. Ajmo sad ovdje, koo zadatku namerno sad preskačam, dakle ove tačka 3 se nalazi nakon cele definicije ove nekakve klasi. Dakle ova klasa nema nikakve metode, ima samo jedno polje u sebi i to polje je tipa niza intova, zove se u. Ja sam namerno sad atak u 3 stavio nakon cele ove klasi, da bi smo videli samo kako ona izgleda, a u zadatku 3 ćemo vidjeti redom kako izgleda i parsirajne kada vi prolazite kroz nekakvog klasi. Dakle, tačka 3 će izgledati ovak. Vi sad ovde, kada pogledate šta vi zapravo definišete. Vi definišete nekakav novih tipa. Ovo ovde klas u nutra nije nikakav nije objika, to je ove klasa njišta, to je u svariji samo od nekakav da definište repostoji samo nekakva klasa. Te kastne ćemo nipraviti objekte od tako te naše klase. Tako da ja ovde sad zna definišem tip koji se zove u nutra. E sad, tako definišete taj tip, ovo njegovo type sad treba da pokazujem na jednu strukturni čvoru koji zapravo taj tip i opisuje. I ako pogledajte, kažemo, to je u svariji nekakva klasa. Reklo sam, ovo polje ovde ću kod klasa koristiti da oznočim njihov u natklasu, pošto ova klasa nutra nema natklasu, ovo ovde je tako uzemljeno, odma nema ništa. Ovo je ono polje n koje će govori tkoliko polja ta naša klasa ima i ako pogledajte, ovdje ono trant nema samo jedno polje. I reko sam, ovo poslednje ovde lokalst će li svaril tako pokazivati na niz objeknih čvorova opet koji opisuju u polja ime tode te nekakve klase. Ako vidite, pogledajte ovde, ta klasa ima jedno jedino polje i kad vidimo kako smo ga sad odopisali. Dakle, što opisujem, tol da je u pitanju nekako polje klase, kako su zove, zove se u, kog je tipa, tipa je niza i tova. Tako da sad ne mogu samo da napišem to, nego opet pravi novih strukturni čvor, da je kažem to je neka kamiz i to nis čega to je neka kamiz i tova. Zatim kažete ovdje tako koja je to polje po redu, to je neka konulto polje i ovod dođelo tako više nekoristimo, tako od ruga dva polja za polje. Evo, kako izgledu svariji definicije ove naša klasa je ovdje tako kada je istratana. A sad odmah, mako nove tačke 3, se nam doći tačka 4, gde smo mi u među vremenu imali definiciju nekakve globalne, promeljive koje se zove k, ako je tipe ovoga u nutra. Kako će onda izgledati to? U tački 4 vi u svariji dobijete ovako našto. Kažete to je promeljiva, zove se k, ako g je ona tipe, onda samo ubacite jednu referentu koja treba da pokazuje novaj strukturni čvor, ovdje koji ste i tako malo prekrirali. Naravno, ovo je promeljiva ovdje koja je po redu, to je prva promeljiva, jer ovo je ovdje bilo anulta i ovdje stoji nula, zato što je to globalna promeljiva. Ali ovaj važno moment na tog li vidite samo, da će se promeljive koje su tipe ovoga u nutra, zapravo vidite ovde pokazivati na taj strukturni čvor koji opisuje tu nekakvog pasu. Znao da ko pogleda to, vidite ovu promeljivu k, gubite totalno informaciju da je to nešto što je tipe koji se zove u nutra. Ali vas, vas u vaku kada budete generisali kod, neće ni zanimati u svariji kako se zove, to nešto, nego će vas uvako zanimati koja je to polja tu ima, kada bude treba o našto da se avocira koje to metode ima i stečno. Kada bude treba odvijete, da li je ispravno da neko dole kasnije, ako nađite u programu napiše k, tačka pa pozove nekakvog metodu, kako ćete proveravati, da li je to k, ima nekakvog metodu. Tako što, naprimer, ovdje, preko ovog polja dođete do njegovog strukturnog čvora, a strukturni čvor ima u vsebi uvezano ovo locals i to locals je ovde imati hi, polja i metode i sve, i li je onda samo pogledate, da li ta metoda postoji u ovu listi ovde. Ili, naprimer, ako neko kasnije koristi k, tačka u, vi preko ovoga dođete tu, pogledate ovom locals i vidite, aha, to postoji ovog polja u i vidite koji je ono tipa i onda vidite da li je naprimer neko ispravno koristi to k, tačka u. Islično. Dakle, ovdje, naravno se da je jasno. E sad, ajmo dalje. Kaža, tačka pet, tačka pet se nalazi, sada zapučali smo nekakvog metodu koja se zove m1, a zove m1 je povratnog tipa int, ali još nismo prošli njene argumente, tako da se ona javlja sada i za oga kao vamo. Evo je ta nekakva metoda m1, njena povratna vrednost je int, vi je to ovdje dalje crtice kao i malo pre, i naravno otvorili smo novio opsek za ono što treba da se nalazi unotar ove metode m1. I za ovu klasu je bio otvaran njen opsek, ali kako izgledalo to parsiran i kažem, namerno, tačka ovdje z kroz, i za te teleplase to ćemo da vidimo kasnije. Sami vidimo da kli u pitanju metoda koja se zove m1, njen povratni tip int type otvoren ov je opsek. Pek, kada dođemo u tačku 6, ćemo prooći zapravo sada ova dva argumenta ovdje i ako pogledajte, imamo jedna argumenta koja je tipa int i druga argumenta koja je tipa ovoga u nutri, tako da oni se sad pojavljili u ovom tako novu otvorenom opsego ovdje i izgledaće ova, dakle imamo promenljiva, zove se duplo v, int type, nullta poredu unutarte nekakve metode, i naravno jedinice da kažemo da nije globalne, nego lokalna zato nekakve metode. Vite, ovdje se ovo promenilo na dva, jer u trenutnom opsegu jemo dve promenljive, a ako pogledamo vamo, imam promenljivu koja se zove d, kog i tipa promenljiva d i vidite da ponove idu referenci na ovu ovde našu zapravo klasu koji smo malo pre koji smo napravili tako obišljiv. I ako pogledajte, naravno ovde dve jedinice, ovde nećih fisnih komentari, sada ti trebalo sada da ja smo do sluva rednih brojevi, da ovdje označilo da je to nekakva lokalna promenljiva. Šta se deša u tački 7? U tački 7 sam ja završio metodu M1, što znači da se zatvara ovaj opsegu ovde i ovo ve ide treba da se uvežu na ovu našu metodu M1 gore. Kako to izgleda, to izgleda ovak. Dakle, top scope se vraće na ovaj predkorni scope gore, zatvorili smo ovaj scope ovde, ovde metodim M1, vidite, uvezujemo da ovo pripadna njoj,
 ovo duplove i ovo d, td promeljive tu i ovde menjamo da je broj argumenta metode m, jedan po stvari dva. E, pa se dašala dalje. Dalje dolazimo do metode main i tačka osam se nalazi po ulasku otaku u tu metodu main, ali naravno nismo još uvek prošli ove dve lokalne promeljive. Obratite pažno sada su ovo i b ovde u ovom primjeru navedeni kao lokalne promeljive nisu argument jer se ne nalazi ove zagradi ovde, a nalaze se prejviti čas te zagradi u jeziku mikrojava sve lokalne promeljive. Tako da, tačka osam, naravno ovo je mg1 i dalje pokazuje novog, da se zgunite vidite da ovo je top scop je trenutno praza ovde. E, nismo ove samo se pojavila jedna metoda, nova, koja se zove main i naravno njen tip je no type, košto je to vojit nekad par metoda, dakle nema pogratnu drujednost. Ovo je kao i do sada u tako visi čeka da se pokupi sve ove informacije. E, sad, pa se veša ovo tako dve. U tako dve ja ću sad zbog tako što ovo ne može da stane na slide, ovo ve ide da pomerimo vamo desno, vidite ćete već kako. E, a tačka, a i b treba da se pojavila u ovom novom obfigovanom. Tako da, ovo i ovo ve ide smo prebacili ovamom za metodu m1, a za al tako ove i main se pojavljiva u promeljiva a i promeljiva b koje su tipa inttyp. Šta bi nam bilo ovakše, a imamo ovako koji ću, ovo samo da isključimo ovde. Da bi mogu da pratim sada sve vreme sa vama ovde, ovaj program odjeće moći da se o tako osklanja i prikazuje kako mi kad bude zatreba. Tako da, a ovo sad da vidite u stvari šta se ovo pojavilo za ovom metodu main, tako kojavilo se promeljiva a i promeljiva b i ona smo stvari ove tipa int, bi imamo ovdje tako dve promeljive svetrno u obsegu i standardnovi brojevi se ovde nula 1 i 1, 1. E, šta se desava na, na, ajmo da se vratim sve, možete mi lakše vakon. Šta se desava nakon tačke 9, sljedećena je tačka 10 gde smo zatvorili već ovu metodu main. Ako sam zatvorio metodu main, znači da se ovaj sada obsegu ovde koji postojal tako na vrhu zatvara i sve to se ulančava, tako u ovde moje main. Tako da vidite da linija ide o da vde, sprozovamo do ovoga a i b koje se ulančavaju taj main. Ovde nula stoji i to opratite pažnju, dakle stoji nula, zato što ove broje ovde, ajmo ješ jedno ću ponoviti, taj broj tu kod metoda se odnosi na broj argumentate nekad ve metode. Dakle, ne odnosi se na lokalne promenjive, ako se prisetimo, ajmo je da se vratimo još jednom, gde mi je ovdje. Dakle, ako vam pokažem primjer još jednom, dakle ovo a i b su u svariji bile nekakve lokalne promenjive u nutar toga main, tako da zbog toga ovde stoji nula, a ne dva kao ovdje. Ako pogledate tačka 10, lakon sam se nalazila tu i naravno, izgledi tačka 11, dakle ovo sam samo a i b prebacio vam, u tački 11 zatvorit ćemo i ovaj obsid u ovde i samo ćemo sve ovo kao i malo preuvezat u stvari da pripada ovom nekadom glavnom programu. Tako da za ce, ove neprimjer koji smo videli i veliki malo pre, u stvari ovo je rešenje, je o tako zadatka, dakle ovo sve treba da bude istrpno ovako za ovaj program, ovde na kraju, dakle u tački 11. I sad, kad pogledate vi ovo ovde, ovako, sad ovdje i za ovoga svanom može dosta informacije da se izluči. Znajmo da par samo za točica da prokomentarišim, na primer ovde. Ovo se informacije koje vi sad imati u tabeli simbola nakon tog prolaska tam, sad imate nakon, koji se prošli izgradili tabelu simbola, proverili sa semanticka pravila, ospudi slično, imate na primer fazbu generisanja kod. I sad na primer u toj fazi, kada vidite negde tamo da neko koristi konstant u c. Konstant u c, naravno u onom, vašom kad imate generisali kod u onom, bit kod u onom, ovo što neće konstant u c, nego ćete odmah samo, na primer koristite u uvrednost ovdje pek. Ili na primer kada neko tamo bude napisao k.u, ta će tu vradi, otitite u tabelu simbola, načinete naravno to nekako kg, i onda ćete pogledati, dođete se preko ovog ovoj strukturnoj tvoru ovde, videte ćete da postoji to nekako po polje u, i zaključite se da je tol tako nekako po prvo polje, to je multopolje uunutar te nekake klase, i onda ćete izgenerizati tamo nekakom instrukciju koja se zove get fieldu, koje ćemo pričati sveći čas, ali ta instrukcija get field zakteva da je vi kažete koje polje po redu iz te klase, na primer želite. Ili na primer gome lovi stvari ovdje ćete koristiti prilikom semantičke analizie, na primer kada neko tamo kasnije u metodu m1, gde smo definistali ovde, vidite gore gde se nalazi metoda m1, na primer neku umenu možete da pozove metodu m1, šta vi zaključujete sve iz ovoga ovde što piša? Pa zaključujete da ukoliko se koristi negde povratna metoda, povratna vrednost metode m1, morate da vi znaete da to morate da bude nekako int type, dakle, promenljiva, ukoliko smešlete u nju to nekako int type, ili ako rezultate metode koristite, da pozovete drugu metodu, da znate da je ov ovde int. Gledate opet ako neko poziva metodu m1, morate da provjerite koliko argumenta je taj nekod ove prosledjom metodi. I z ovog ovde zaključujete da taj neko treba da prosledi dva argumenta. Oda gledate koji su tipovi tih argumenta i zove liste ovde zaključujete da tipovi treba da budu int type i da tip ove drugi treba da budu tako ove naš tip unutra koji smo neminizavali, to je ove klasu unutra. Dakle, da sve te informacije sve što nam bude bilo potrebno, to za prijavljivanje grešaka i tako provjeru semanitričkih, onih svih pravila koje su navede na ovom dokumentu tamo, to za generisanje koda kasnije u četvotoj fazi, sve te informacije treba da se nalaze popunjene u tebeli simbola naši prolaska, to je nakon parsirane tobne kakoliko ulaznog prokra. Eto, toliko što se tiče ovog delu ovde, meni sada sledi zadatak 3 koji će biti jedna zadata koji ću sve bi imati izvođenje, kao šli ti imaćemo nekakog klasu T-kalke i nekakog klasu A-t-kalke koja izvedena iz T-klase T-kalke i onda ćemo u svariji sad gledati kako sad funkcioniše to tkanja tako tih tabela simbola, šta se zapravo tamo sve deshava kada mi zapravimo i imamo izvođenje i imamo polimorfisa. Al to ćemo sad u nastavku časa, sama zemem kaže kolega, ja mi ne ispitu treba da izvjetamo ponov, ono već nacetano za najdno tачku, samo dodatni stvarimo, idi možemo samo da kažemo šta tiče. Dobro, što se tiče to pitanja tu, mi ćemo u glavnom na ispitu izabrati jednu tачku u koji ćemo tražiti da na crtate tabelu simbola, E-lm tolano maksimalno dve tачke, znači uvek dajemo ja mistim jedmu, ne zblo se deselo možda nekada smo dalje da crtate u dve tачke i ako crtate u dve, onda ćemo sigurno tražiti da nam samo naznačite šta se to promenilo, onda ćemo samo tako nemoj napimet, na tima. Ja ovo radimo ode po različnijim tačkom da biste vi isvatili samo kako se to popunjava, ali kažemo tamo na ispitu na primere o kompretnom zadate koji ovdje i kažemo ajmo u tački 10 ili u tački 9, kako izla tabela simbol. E-lm, i nema na čemu, imam ali još neko pitanje ili ideja pravim pauzu da odmorim glas za daljem. Ako se setite nečega, pišite pa onda nastavljamo ajde u 1,20.
 E dobra, možemo da nastavimo da dalje tamo gde smo stali, jer imate neku pitanje i ajmo neko da mi potrdi samo da li se čuvamo. Podlično, ako se čuvamo, ako pitanje nema, onda možemo da... Dakle, evo imali ste priliki sad novi pauzi i da osmotirite ovoj program kako će izgledati, pa imamo sad vredam, dakle, radimo isto što smo radili malo, da pričetamo tabelu simbola, samo sad od puta sa akcentom na to kako su svari parsira klasa i kako ćemo sad ovede oko izlađenje i tih metodu uunutar klasa, to nismo za sad videa. Dakle, što smo stliča, tačke 1. I dalje isto, kao je malo privedat, kad vam imamo program, zove se ovo, no type otvore novi opstika. E sad, dolazimo u tačku 2 i tačka 2. I'm a someone. Dakle, evo ga, ove c, I'm on the video trenutak, dobro. Evo je tačka 2, tu. Dakle otvorena je sad da klasa te kalk, najšli smo na njenu tako deklaraciju, ali nismo prošli celu klasu, nismo još zapravo došli ni do njenih polja, ni do njenih metoda. Tako da u tački 2, sve što ćemo mi imati, jes, tlaje reće, tako ja se dobro namrno odrezvacam na slajdu da bi se to kastnije lepo uplopilo, ali ta imam, dakle, depinisan je nekakak tip koji se zove te kalk i napravio sam odmah i njegov strukturni čvor, koji vidite gore nazao sam te type, da bi kastnije koristio to da ne bih moro da učem s krelice kao ovom ovde strukturno čvoru. Taj tu čvor je tipa klas, nad klasa te klase ne posloji, tako da ovo ovde uzemljeno odma. Broj polja unotar te klase, trenuta je poslina na crtice, jer ne znam koliko će i biti, to će natitek na kraju, a u koje su to promenjive metode unotar klase, isto tako ne zna, njih ću ulančati na kraju i odmah u ovde već sad sam otvorio jedan novij obseg. Dakle otvara sam novij obseg za promenjive koje se nalaze unotar klase i za metode koje su definisane unotar klase, jer će ono biti vidljive samo, paš konkretno, u toj klasi. Pim zavošim definiciju te nekakove klase sploniće ovoj obseg i sve to ću zapravo uvezati. O ovde kao što smo malo prividali, ono primjero da je to na kraju klase bilo već i uvezati. E sad, kaže dalje, tačka 3 se nalazi kada mi prođemo ovo polje te naše klase koje se zove tax, tako da to polje će se pojaviti u ovom novom obsegu ovom dole ovde i naravno ovde ja ću brojati i polja kao nekakop promenjive, tako da kažem to je nekakop osvoda ileti polje, dole se tax, u ovom primjero ovdje imate double kao nekakop primitivan tip, to ko dva su projekti nekako stoji, ali ja su moji predpostoji da postoji to nekako predefinisano da bilo type kao nekakop primitivni tip. On se pojavlja ovdje. E sad, ako pogledajte dalje, ove metode, sad šta radi, ja sam ovde naravno ostavio te i tačke cijernije no važno ovde šta se deša uonutar metode, to se nobiti važno samo kada budemo generisali kod, nam je samo ovažno da postoje dve nekakove metode koje se zove u kalki check, jedna tipa double, druga tipa int, obo imaju po jedan argument koji se zove kosti ve, tipa su double islično, i sad to smo već videli sa setite samih tih metoda kako su ne parsiraju u zadatku 1 i zadatku 2, tako da ću ih odmah u tački 4 prikazati kako izgledaju obet te metode. Ono što je meni samo važno ovde sada, jeste da se prisetimo jedne svarie koju naravno bi već trebalo da znamo, a to je da, okoliko se radi ove metodama nekakve klasse, pojede dovih argumentata koje vi ovde vidite što su ovo kosti ovve, sluči se kao multijargument obavezno javljati i ono nekakvo diss, i to diss ćemo uvek trtati kada budemo trtali ovu nekakom u našu tabelu simbola, tako bez odzira što on naravno nije prikazano u ovom primjeru ovde, taj diss osvoji i taj diss će naravno biti tipa te naše tekucije klasse koje mi u tom tematu obrađa. Tako da u tački 4 tabela simbola će izgledati ovako, dakle prošli smo definiciju te zve metode, jedna metode se zove kalki njena povratna vrednost je double type, ovde vidite sada 2, dakle 2 argumenta ove metode ima. Prvi argument se naravno je kao prvi sluči uvek uvek javlja ovog var i zadove se diss i ono je tipa taj. Dakle u poliku ovako nešto obeležite ovom srelicom i kažete ovo je taj, onda znači da smo daliti taj nekakom naziv taj, i nema potrebe da ja sad odavde vučem srelicu skrozka gore i konstrukturno čoru, nego ti samo napisate ovdje ovdje o taj. A kao drugi argument se javlja ovo var kosti koje u stvari tipa tako nekakog double type. E sad ovo nula je jedan odnačavaju koji je redni broj i to od nekog argumenta, i vidite ovo je nuti ove prvi, a ovo je dvojka ona koji sam malo prel tako govorio, da će se ovde za promeljive tako navoditi njihov nivo u gniženju ako mi se ono je nalaze, e sad ovde je dvojka pošto ova promeljiva se nalazi unutar klasse koja je unutar nekakog, toh znači unutar metode koja je unutar nekakove klasse, tako da ovde pišemo dva. Mada kažem, važno je samo da je već je od ovdje nulje. E, dakle važan moment sam ovdje da ne zaboradjet na colopium da se ovde nalazi nekako disk, kao nulti argument za svaku metodu koja se od tako nalazi unutar klasse. E, isma tako imamo onulodno tom, tako i ovo ček, dakle metoda ček, povratna vrednost je int type, opet imamo dva argumenta, opet je disk 1 i opet imate t type, ovaj drug je nekakog v koji je tipa double type. E, tako da odnosno ona malo prijedina izmene jeste da se pojavio taj disk. I sad, naravno, i dalje u tački četri, mi i dalje sve ovo ovde definišamo unutar ovog top scope obsegano kome se nalazila i o polje, tako text. Zato što ako pogledate te, to text i o sve ovoje metode zapravo i ja su unutar te nekako ve naše klasse. Tako da ove obsege nemojite uvek povezivati sa ovim viti časim zagradom, one nešto nemoje odnogo veze sa tim. Microjavi smo namerno uzeli tako je komencija da se prvo za svaku klasu malo odde sva njena polja pa te kone idu ove otvore na viti časim zagradom koji ima se specificiraju metode koje se, koje je otvore na taj nekako ve klasi. Tako da metode sudek nalaze posle svih polja i to je namerno tako urađeno da bi smo vam olačali za projekt. Tako da nemojite da zgunjujemo otvore na viti časim zagradom, one su tu samo ovo je notacijeno da nekako sprečimo da se nakon toga projavljuju ova polja. To je da se nakon metode pojavi nekako po novog polja. Tako da isti je obseg i dalje ovde ostaje jedan jer su ovo nekakve dve metode. Brojimo samo promenljive naravno i polja koja se nalaze direktno unutar toga obsega. Dakle ne u ovim ugneženim obsizima kao što je ovdje ove vite za kalk i za ček ovo ovde se ne broji u ovu jedinicu odkona. E sad u tački pet smo završili celokupnutu klasu našu te kalk tako da sve ovo ovde sad da ćemo uvezati, dakle sve ove polje ove dve metode ćemo uvezati ovde gore i ažurirat ćemo ove proj ovde koji treba da nam kaže da sad ova naša klasa.
 da te kalki zapravo ima jednopolje. I to zapravo onda izgleda ovako. Dakle, klasa ima jednopolje i sve ovdje smo ovdje tako nekako ulačali u ovdje lokalste naše tekuće plasi. A ja sad da se vratim nazar, iskličimo ovaj pointer. Ajmo nimo kako idlao ovaj naš program. Dakle, mi smo trenutno u tački 5 i vidite sve to, tu je uvezano u ovu klasu ovdje, nastavljamo dajške. Tačka 6 će biti tačka da mi krećemo sada definišamo ovu nekakvom klasu a, t, kalk, ali još uvek nismo ni došli do dela da je ta klasa izvedena iz ovoga, t, kalk. Dakle, u tački 6 mi svario dobijamo ovako našto. Dakle, u tački 6 pojavlja se novi tip koji su dove a, t, kalk, dobija svoj novi sad namjerno ovako iskrivljen, vidite, poslitašto. Dakle, novi svoj strukturni čvor nega ćemo nazvati a, type i ako pogledate, oni dalje ovde piše da ovim ovde smo naznačili da nije izvedena ovakvasa nije ištega i nema trenutno njega nikakva svoja lokalna polja, ali smo otvorili ovdje kakvom novi obsek smovec premili za tu našu klasu. Dakle, to je ova tačka, ovdje vidite da tek sad, ja treba da dođu do dela da je ta klasa izvedena iz ovoga, t, kalk. E sad, pogledajte še će se desiti u tački 7. Ovo je sad dosad važan moment, ovdje sada ćemo da objasimo neke stvačice koje ste možda prekoristili dok se programirali, a napim. niste znali kako funkcionišu iz vrsta. Pa sad da ima šta se desalo ovdje. Nisa do ovu našu klasu a, t, kalk izvodimo iz ovaj već postojećeg klasa gore. To je vnati do ovu tački 7 ovdje. Ja imam ovu promeljivo ovdje a, ali ću isto tako, košto je klasa izvedena iz ovoga gore imati i sve ovo što imalo ova naša klasa t, kalk. To znači, da, to radite zapravo kada budete pisali taj svoj compiler za projektat. Dakle, vi u ovom trenutku ovdje kada svatite da klas vizudite iz nekada pe druge. U ovu našu tabelu simbola zapravo prekopirate sve što je postojalo u onoj gore tabeli simbola koja se odnosila na našu osnovnu klasu. Kako se vršite okopirani? Dakle, prvo kopirate sva polja osnovne klase, zatim se dodaju ova polja naše klase ovde dole. Dakle, preo ih itičasti iz zagrada ovdje ćete projeći sva polja izvedene klase i nićete dodati na ova polja koja se iskopirali iz osnovne klase. A zatim, u tački 7, sad al tako ušli ove itičasti zagrade, namjero smo tu i stavio tačku 7, tu krećete sada da definišete metode. Prvo iskopirate sve ove metode iz osnovne klase ovde i zatim je onda obrađujete u tako metode ove izvedene klase. Ukoliko najđete na metodu koji već imate, onda ćete samo raditi izmene te nekakve metode. Dakle, ajmo sada prikazam odmah, pa ćemo da je još komentaristite i dakle u tački 7, mi ćemo sada proći da ove postoji nekakva promeliva. Ah, i doće ćemo već do definicije metoda. Tako da će tačka 7 izgledati ovako. Dakle, ajmo sada prikazam moji program je šedno. Vite ovde, iskopiralo, sam prvo sva polja iz osnovne klase. Dakle, ovdje polje tako od ozgoja iskopirano ovde sada da postoji u ovom novom obsegu. Šta se dalje desilo? Pojavilo se novo polje a, evo ga ovde, tu sam ga i ubacio, i zatim prenego što krenem dobro, sve ove metode iskopiralo, ovo tako novu klasu koji treba ono na izvod. Narodno, ovde smo sada pošto smo svatili da je klasa at, atkalk izvedena iz tkalk i je žurirali i ovaj pokazivarš goreg, da je kažemo sada ovim poljem ovde da je ovu svar i klasa koji izvedena iz ovaj klas i goreg. To će nam biti važno posli kada budemo određivali da li nešto može da se prosledi u mešto nečega i sad ćete svećone cele priče. Tako šta je sa tim kompatibilno pridodili i iskopirali? E sada. Šta je na iskopirale važno, sad još da mi primetimo sada. Dakle klasa atkalk izvedena iz ovoga tkalk dodaje ovu jedno polje ovde. Ali to polje kada dodajete obavezno morate da go dodajete tek nakon što i prikopirate sva ova polja iz oznovne klasi. Zašto? U oznovnoj klasi ovo polje teks ovdje ima index 0, dakle to je 0 to polje. Međutima ko pogledate izvedeno klasu, to je klas u atkalk, to teks i dalje mora da ima 0 tu. Zato mora da se pojavlije kao 0 to polje, a onda ovo polje je field, tako ovo a, se pojavlije tek kao prvo polje. Dakle nakon ovoga teks. Zašto? Zato što celo ona priča oko toga da tamo negdje se očekuje objekat nekakve osnovne klase, vi možete da prosledite nešto što je objekat izvedene klase i jeste zasnovana na ovako nečemu. Zašto? Kako je nešto objekat izvedene klase, kako zamišljate objekat izvedene klase? On će imati i jedno i drugo ovo. A objekat ostnovne klasi će imati samo ovo tekst. Tako da vi kada u svariji prosledujete ovo objekat u mesto ovako, nekakog objekta gore, doprvo samo vršite odcetsanje svih ovih polja koja su obojezno dodate na kraj. Tako da ako pogledate gore, objekat ovoj osnovne klasi ima samo jedno polje, ako bih na ovoj objekat dole izvedene klase vršio odcetsanje, tako da ostane samo jedno polje, mora da ostane samo ono što imala i osnovna klas. Tako da je to, mislim, ovakas datke mogu očekivati svi, naravno, na ispitu, na ispitu neprovimo razliku izmjude do toga, da li ste radili projeka za A, B ili C nivo, a ljudi koji budu pogodno radili C nivo, onda treba dobra te pogodno na ovako mešto pašte. Tako da je po vede, ajme još jednom, kada krenete da obrađujete izvedenu klasu, prvno se vrši kopiranje polja osnovne klase, zatim se obilaze polja izvedene klase i ona se dodaju na sva ova polja koja su veći skopirana, a onda se iskopiraju sve metode osnovne klase, pa se obilaze u tako metode izvedene klase. Završite ovaj zadatak, koji će onda radit pro komentari, sve ti i drugu variantu kako možete ovo da radite, kako vam je možda lakši ko gude radio projekat, ali što se tiče samo krtanja, dakle držimo se ove neke osnovne varianti da se ovako radite. To je to što imamo u tako 7. Ako pogledat ove, sovdram da sam vršio samo kopiranje, dakle ja sam celog, u kva nova ideo što se tiče ove dve metode, samo iskopiralo ovde dole, dakle ništa nisa meni, samo buklan uzmete i prebacite ih dole. Ako pogledam, u ovde vidite sada ove metoda, na primer kalk je overaidovan, ovde ima nekako svoju novu definiciju i sad, da li bi trebalo nešto promeniti? Pa da, zato što ovde sada nije na argument se zove c, ne zove se više koz, dakle ovde treba promeniti koz na c, ali kosto je još jedna dosta važnija stvara, a to je da, dis ovaj argument koji se javlja u metodama, više neće biti tipa t type, nego ćemo ga sada menjati da gude tipa ovo govode, ili ti a type, kako sam govode, ja trenutno naslom. To je tipa ove naše izvedene klasije. Tako da što se tiče tačke 7 u koje smo mi sada i tačke 8, nećemo dodavati ništa novu, zato što ništa novu nismo ni obišli, nego samo jemo re definiciju metode kalk. Jedino što je tam metoda kalk promenila, jeste u stvari, zato ovde naziv ovog argumenta, ništa drugo nije ni smela da meni. Tako da, što se tiče tačke 8, ona izgleda ovako. Ako pogledajte, sada nas zelo svoj ti primetili u ovom slajdu, dakle ovde se promenilo na c, ništa nismo menjeli u sami strukturi, ovde se promenilo na c i vidite da je diz i u jednoj i u drugoj metodi sada postavljen da je tipa a-type. To je ovog ovdje, to je tipa naše izvedene klasije. To bi bilo ova naša tačka 8,5. Esat, to se tiče tačke 9. Tačka 9 nam je na kraju celo ove klase at-kalk, što znači da zatvaramo sada ovaj... ...bezlujamo ovde našu klasu, na ovu ovde što trenutno visi i ovde sada postavljamo koliko polja ima ta klasa, a ta klasa čitamo od arde, trenutno tako ima dva nekad paka polja. Tako da, to je izgleda vam do ovak. Dakle, žurili smo ovde dvojku i sve ovde smo iskopirali od tako kao lokal sa ovoj našeg at-type. I ako pogledate i jedna i druga klasa će zapravo čuvati sve o informacije o metodama i u jednoj i drugoj se javljuju informacije o ovom polju teks. Narodno, ovo naš izvedena klasa je malo promenilo našto u ti metodama, tipa tipove o ih argumentata, dodala je nekad kvalo tako polja ovde. Narodno, ovo će se još promeniti. To, na primjera, ide možda i ranilo po komentarišama, ali samo da znate, dakle ovde sada reko sam za metodne svuda ću navoditi ove crtice. Tu su stvari, koji metod, u stvari pišo adrese na kojima se nalazite nekadove metode zapravo fizički u onoj kod sekciji. E, ono što treba da znate, je ste da ovo metoda kao pogoreće se nalaziti na nekoj adrese X, a ovo metode kao će se nalaziti na nekoj adrese Y, zato što će biti sada dve potpuno različite metode. To se tiče metode check, ovo ovde, ova adresa, ovde i ovde će ostati iste, zato što naša izvedena klasa metodu check uopšte nije overridingvala ovde, vidite, uopšte nisu uspomenjali metodu check, tako da smo ostavili samo ćemo ostaviti tu adresu da bude istan. I onda kada budemo opuzivali, u stvari, ili tako, tu metodu check, bilo da je pozivano za ostavno, bilo da je pozivano za izvedenu klasu, izvijate isti broj iz kaka ćemo stvari na istu adresu. Dok ako pozivamo metodu calc, što će ste desiti, različite adresa će pisati ovde i ovde, tako da ćemo zaprav pozivati različite metode. I to je sada cela priča, vidite ćemo kasnije, kako se to sad pakvajte da se generiše kodi, kako su stvari polimorsno pozivaju te metode, ali ovo što se tiče samo krtanje i kako tata bela simbola treba da izvaja, to je ovaj del, tako koji smo sada kritali. U nastavku dalje imamo ovde, tako imamo sada nekakav main, sad koji sledi, koji će imati dva objekta tipa oga te calc i ima jednu promeljivu ovo tipa cost, tako da u tački 10 ćemo svari samo dodati tu main functiu, ovo je main functija, ode sam i u glavio, zbuk toga ovo bilo zakribeno zbore, dodali smo tako 3 nekakate lokalne promeljive u tu main functiu, vidite var, pa c1, c2 i ovo se zove cost, ovo je dve su tipa t type, mislim, ovo je tip ovde koji smo biležili u sterilicom da se zove t type, da ne bih vuko, sad sterilice sporozrog gore, i ovde sada objero, sad nećemo ni komentarići, sve smo pričali o njim. To se tiče same, tački 11, ona se nalazi na kraju samo u tako programa, to je celog programa, šta će se desiti do tački 11?
 Pa prvo ćemo tako zatvoriti ovaj obseg za main, iz ove tri promeljive uvezati u ovom main ovde njegovo, a zatvoriti i ovaj obseg u svog uvezati u stvari zapravo gore u progrim. To znači da ću to sve zapravo izvedati ovako. Zdaj li ja još jednom, dakle main uvezano je ovom u main, ovdje i dalje stoji nula zato što ovo nisu argumenti. Ove funkcije main nego su lokalne promeljive onuternje i ovdje gore smo sve uvezali na ovaj naš program. Tako da ovaj topskop sado pokazuje na sam ovaj u kore. Zatka pogledajte ovaj slide ovako, ovaj uratno delo je katastrofalno, ali videli ste da sam ovako sve malo po malo postepeno sve gradio i na kraju dobi ovo ako nešto. E, naravno, ikada dobijete crtete ovako nešto na koloku i onda to bude raznoraznih trelica tam ovamo, ja vas molim da to bar bude delimićno, delimićno tako čitko da može se viditi gde šta ide. I naravno, ovakve stvari obmovezno koristite tipa, pa imate neko strukturni čvor, označite ga da nazovite ga nekako t, i onda kasnije koristite njegu naziv ovde, kao što koristimo iz ovove primitine tipove double type in to type i ostale, da ne brite sad bukli strelice katom nekom strukturnom čvor u gore. Nečo, to je sad del tako kog učetanja sam je tabele simbola šta treba da se radi što se tiče samom u tog izvoćite. Tako je još jedno, bilo ćemo kasnije na sljedećem času, kada budem pričal o tom ginerisanju koda, mi ćemo ove informacije sad dodaći zapravo koristiti, da tamo nekde pokunjavam one tabele virstvonni funkcija i da onda pozivamo nekako ove metode i sično, a vidite sad ove broj, na primjer 1 i 2, će vam govoriti i koliko prostora treba alocirati u koliko alocirate objikat klaset t type, to je t-cout ili je koliko alocirate objikat klaset a-t-cout, tako ovde kaže 1, ovde kaže 2. E, poret, naravno, ova dva objikta, text i ja i ovde gore text, to će se pojavljivati i sa taj nekako pokazivačna tu tabelu virstvonni funkcija, ja ću se graditi odmah ovdje u koliko je neko krenalo već da radi projekati, možda i gleda neke vone videotutoriale, da je ovde sad trenetno fali i taj nekako pokazivačna tabelu virstvonni funkcija, ali ne ga ću u stelu priču uvaciti na sljedećem času, tako da biće i on dodati čisto da ne bude sad zašto ja to ne ja novi prezentaciju. Ovde kojaš nije krenu da radi projekata, onda nema ni brige nikakve, otakvo već na sljedećem času će objasniti šta se to još ovde pojavljio, pa ćemo imati kompletnu celu prije. To se tiče samih zadataka, dakle ovaj zadatak 3, prikazu ću još jednom, dakle ima i klasiji metode i bukvano sam ovo crtan je ovde, sad šta goda se na oze lunutar metoda, vidite se namerno svu da stavio te 3 tačke se ne zanime, kako zade definite metoda, tako sam sadaže metoda nikako neće utitati na tabelu simbola, dakle da goda vi napišete i 4.5 i nekakve i 4.5 i slično, to se ništa ne pojavljio u tabeli simbola, u tabeli simbola se nam pojavljio samo bilo kakva imena koja ima multa programa, tako da ovaj je, bukvalno sveštovi možete da dobijete što se tiče samog ispita, je sad marano nekakvim različitim kombinacijama, da li sad kako su te plaste organizovanje, da li je nešto ovaj raidovano i nije slično, to sad probajte da razmisicite. E, ono što je dosta važno što se tiče ovih zata kao ovde, možda vam za sad deluju teški, ali ovaj znači će vam biti dosta lakši kada dođete na ispita, zbog čegu, zato što je tako postoje ona jedan uslov, da na ispita možete zači samo ukliko ste predkodno odbranili projekt, a ukliko ste predkodno odbranili projekt, definitivnost je onda ukliko ste ga naravno radili sam i prošli dosta kroz kuta belu simbola i ovog sve, tako da će vam biti dovoljno da pred ispita samo pogledate, ovo je jedan primjer, ovdje eventom od ispita, te to sve da pogledate, da vam prođe kroz ruke i to je. Ako imate našto me picitate, vičite ovamo, a ja ću sad nastavati časa, kao što sam im je reko da posvetim to je našo i tabeli simbola, kako ona zapravo svarno izgleda. I sad ukoliko dođete na site predmeta u seksiju, tako sva domačim zadacima, ovde vidite, imate jedan link koji kaže tabela simbola. I sad ja to imam je ckino to odi pokranuto da ne bi gupio vremeno to, ali možemo ideo koćete i da skinemo, dakle ko poogledate, taj symbol tabel skida vam jedan jar file u stvari, i sad ja ako skinem taj jar file, on ti se pojavite ovdje negde, njega možete da raspakojete, to je običan jar file i on slobuno može da se raspakoje, vidite dobijete u stvari jedan folder. Znači, neslo ste to i kada radili, ali oni u običnim elatom bilo koji im zara spakivanje nekakvog zipa, možete u stvari da raspakojete i nekakav jar file. I unutar njega možete da naćete šta je sad to zapravo spakovan. E, tu su spakovanje i klasni i objektni file-ovih, ja ih imam se već potvarane, tako da ćemo sad samo proći kroz njih da dal tako redom vidimo šta sad tu se ima. E, ali hlori u startu, ove prve 3 klase, strakt, oblije i scope, to su svarit taj nekakva 3, kako će mi zovemo čvorovi, koji je ove naša tabele symbol. Ja imam o prvo da krenu, na primar od ovoga scope, to mi je najlačno sad da objasnimo, da tu imate šta? Zato imate skup, šta smo rekli? Ona će imati pokazivačno okružoviti obsek i to je ove tudi svar i ovde autor, vidite da je isto tipa scope. Zatim imate, imamo da pogledamo dole nvars, dakle broj promeljivih, koji su deklarisan na unutar nekakvog obsega, ovde treba u to postavljenu tako u startu na mula, i imate ovde, da kako pogledate, sve ovo kaže symbol data structure locals. E, to je tu sad realizovano, da su sete, al tako, u unutar nekakog obsega se nalazi u unutar, ove neka klasa koji smo mi napisali, a to je ovo nekako simple data structure. To simple data structure je abstract na nekakva klasa, koja sad predliđa, da vidite da tražite nekakav objekni čvor po nekakom nazivu, da možete da obrišajte to nešto po nekakom nazivu, da ubacite nekakav objekni čvor, da doklatite sve te nekakve simbole kao kolekciju, tako tih objeknih porole i da vam se vrati u svarih broj, koliko njiho stoi. Ovo je tako obstrakt na klasa, a kao implementacija toga imate nekakva al takog to ono što profesor piča, te različite implementacije, ovdje smo mi to implementirali kao nekakvog hešta belu, koja mapira naziv na taj objekni čvor. I to je pozdajne sve već odrađeno za vas. I search, delete, insert, i dohatanje i brojanje njihovo i sveto već imate ovde gotovo realis. Tako da to bacite, pagao je samo neće sada glubite, našto je mnogo vremena na to. Tako u slučištu svi tika skopa, ovo je okružojići obsek i pokazivače na sve te lokalne, na sada lokalne imena, koja se nalazi u tog nekog ugobsek. Pagledam ovaj strukturni čvor. Reku sam tamo za sve što nam budem trebali, imaćemo Konstante, pa evo ih te Konstante, public study final int i onda za sve što kostoji. I vidite, eog da int, čara, rej, klas, sve o što sam imaš, pominjao malo pa što sam crto. U sluči, ova dva što sam reko, da ćemo ove godinu projektu i stvari sati, dakle vi, enume interface nemate, tako da ovo ponašate se kao da ove niste ni videte. E, prvo palje naši strukturni čvor, reklismo da će govoriti kind, i evo ga kind u tako ovde vieratel stvari koji ćete do vih Konstantii upisati kada pravite nekada strukturni čvor. Zatim reklismo postoji nekog koja LM type, koja je isto tipa oga strakt i tu sa trebali kažete, u koliko se radi o nizu, koji je tipa taj nekakav niz, tako da u koliko ja hoći na primer niz i tova, ovo kind dobro napisalo da je to RA, a u ovo LM type bih ubaći novih strukturni čvoru, u kome bih svariji za ovo kind stavio da je i kao što smo i crtali sama. Ove ideje ovde, ove godino projektu totalno ignorišete, jer se odnosi na interface i vi ih temate. To se tiče broja polja, evo ga to je taj celo broju, koji ćemo upisivati koliko klasa ima nekad vih polja i poglijate ove dole, reklismo za klasi ćemo čuvati symbol data structure i tako members, koje su to promeljive i koje su metode deklarisane ovdak u unutar nekad na klase i dalje koristimo ovu klasu symbol data structure koji smo malo prepokazali, tako da, evo kako ćemo za klase pamći si šta u njima ima. Ove tekst ovde koji se odnosi na interface i na jednome opet kažem ignorišete. Tako da je to, to je ta magija koja stoji i za ovoga ovde tract, evo, naču ništa specijala. Što se tiče samo godinog objetnog čvora, to klasa obije i ako pogledajemo ovde, kao što smo ja tamo i navjav, da je moguće vrednosti, dakle da je to nekako ime, koje definišemo u stvari nekakva konstanta, nekako promeljiva, tip, metoda, polje, ovu elem o tom potom ostavit ćemo za klasnije i, da je to u stvari, o nej program, što koristimo tako samo jedno. Dalje šta se ovde pojavlje, kažem imate private string, tako i metoga nečega, zatim ovde ide cijel obroj, kainc, u stvari birate jedno od ovih konstanti, koji ćete koristiti za to kainc tu. Kažem, okolge je to nešto tipa, imamo ovde tako polje za adresu, reklisimo da to polje tu za metode, koristimo da baš kažemo, gde se neka metoda nalazi na koje je ona adresi, a da ćemo za promeljive i polja, kažem ovdje memorijski offset, u stvari, zrećemo koja su poredan, uuta prva, druga, treće ide koja već i za konstanta ćemo direktno čuvati, koja je vrednost nekakva konstanta u ovom polju. Tosti ti če ovog polja level ovde, njega ćemo koristiti za promeljive, da kažemo, najlakša mi je, da se samo nulo ili veće od nule, ili ti jedinitvom koho god koćete, dakle nakom se nivog nalazi neka pa promeljiva, bićemo i važno samo da li je globalno ili je lokalno i za to koristimo ovo polje ovde lep. To se tiče metode, polje level v, da i pišer, kažem koristim za broj formonnih argumentate da označemo sa kod tu. Ne, ovo polje ovde fp pos, njega ću preskočiti, dakle to polje tu, bilete o njenim tutorialima, ako bude radio nivo c, treba ćemo ovo polje, ostavljeni ljudima, neće ni trebat izbutogoga ga ja nisam nicrto na oni prezentacijama tamo, dakle koo bude radio nivo c, on će se uputiti kroz tutoriale, čemu ovo služi, ja neću, to komentari se dode, ovo da i piše šta je, pa ćete reći vidjeti zašto će vam zatrebat. I ovdje imate ovo lokal, što je ovdje, tako, nekako referensa, na opet čitavu kolekciju ovih objehnjičvorova, gde ćemo mi za metode tu koristiti, da panitimo koja su to sve lokalne promeljive i argumenti u nutar te.
 nepakve na naše metote. E, ono što bih samo naglačuju je ovde, jeste da, ovo tebevo simbola, to je s ovim, na primvju, objekni čvore, ovo je naše napravljeno ovako kako jeste i vama nikon ebrani sad da vi koristite ova polja kako gođelite. Dakle, ovo je naša preporu kako bi ta polja trebalo da se koriste i naravno trebalo bi da se godite time, ali konkretno, na primvjer, za ovo polje, ovdje, se pve pos, pos se sečim na primvjer, prosve, da je prepošeg godine kada su studente radili interfece ili, imali neke abstrakne klase, naanda su ljudi koristili ovo polje, ovdje, se pve pos, da sa tu čuvaju nekako dodatne informacije, to je nekako bilo zgodno. Ili, na primvjer, imali, o konkretnu primvjenu, na primvjer, znam, da smo jedne godine ubacili prava pristupa kao privatno, protected i javno prava pristupa. I onda su ljudi u stvari koristili to polje, se pve pos, na primvjer, da za neko polje, klase čuvaju koje njegu o prava pristupa je islično. Tako da, kažem, to polje ima neku svoju naminu, koristite, koliko on treba za nešto tako, užalite, i dodatno dupati. Ono što jedno ogrinicenje, je ste da o tako u projektu tražimo da sve ove klase naše koristite, ovakve kakaj je su, dakle, ne menjate ništa, nemojte raspakivati, kao što smijasa da raspakavaju ove drzda ovde, nemojte ga raspakivati, pa da onda vi nešto promenite tu kako vama odgovara, pa da ponovospakujte u neku drzda i koristite tako, nebo koristite ovako kako vam je ovo datu, da te tu je sve već postavite. Ovo je vam možda faliti, jeste da tamo nekada to smo već slali neki studenti koji smo počali da rade projeka, da u toj tabeli simbola našoj fali nekakam buli ili šta već, to smo namerno ostavili, odakod da vi sami nekada dolete da se snađete sa tim kako ćete raditi, i tamo smo u tekstu projektu i naglasili da u koliko je potrebno nešto izmenajte, da je jedina metada radite, jeste da izloviš naših klasa izvodite svoje druge klasi i da rede finišete nekakaj metode, u koliko je to naravno potrebno. Ovo je tada vrlo, da imaš vrlo sve na polja koja sam ja malo pričrta od tamo, ajmo sada vidimo u stvari šta je tada nekakva tabela simbola da imate nekakvu klasu koja su dole tab i ta tabela simbola sada vidimo šta onda u sebi sve sve sadrši. Kod njej u stvari sve će biti statičko da će mi imati samo jednu tabelu simbola i vidite sad ovdje, int type, char type i null type, su već predetini sanje, oni su već u tabeli simbola predetini sanje i već u napravljeni, oni strukturni čvora, vidite, da je napravljeno kao struct int, kao struct char i ovdje kao struct klas. Dakle, mošte koristite gotovo, ovo jauno je ostavljeno, dakle int type, char type i ovo null type. Za bull type ovdje nije napravljenil tako jedno promeljiva, ali nikom ne brojimo da vi u svoj compileru negde pa već vidite, da je dan izgodno to uglavite, napravite to bull type i onda napravite u stvari novi strukturni čvora. Ko se piče samo strukturno čvora, on ima podbršku da nešto bude tipa bull, tako da tu problem ne, što se piče tog dela tuk. Ode imate već, sad za sve one metode cihara, orada i len koja sam reko da postoje predetinisveno u jaziku mikrojava, imate već ovaj objektni čvora napravljenu u samoj tabeli simbola, on je već premat i nismo ga doli initializavljimo i pa ćemo i pogledati. Tako da to sve je već odrađeno, jedino što vi treba dobrojite, jestli, da izgnerišite ovo za temetode, ovo ćemo pričati na slajce pasu. Zatim imamo ovdje da je pablik statik scope, current scope dakle koji je to tekući obsek, to je on je našo stvari top scope i imamo ovo current level koliko u svarilu tako skopova imamo i taj current level će vama u svariji slušiti da odate pročitate kada vam treba napima neku promeljivu da ubaciti neki scope, je onda će ovo polje current level u svariji govoriti koliko se zapravo odboko odlišli sa ovim obstavljenim, tako da i dnega će ti zvačiti ovo informaciju ovo al tako na konce neka promeljiva nalazi. E, ovo je statička metoda init, te naše tabela simbola koji treba da pozovite prenego što krenete za koristite tabela simbola. Dakle, prenego što krenete bilo, o šta li da rajete treba da pozovite ovo tabet init, da bi se inicijali za ovo i naš universe obsek. I ako pogleda to, ovdje vidite da je son zove, nazavite smo govdje scope universe i postavljeli smo i current scope da pokazuje na taj neka novi scope i vidite, njegovo roditeljski scope će biti u svarinu aldo, dakle nema njegovog skolnika kog to je taj universe obsek i on se nalazi u svarinu na vrhu. Šta smo dobro radili u taj universe obsek kao što sam ja na onom slideu tamo jednom na početku tako predkodnom časva isrta od ceo universe obsek, evite da je sve šta to je ubačeno u taj universe obsek. Dakle, sama klasa ova scope ovdje vidite da imamo metodu add to locals, da se doda neki obini čvor u taj neka kakov scope, evo godo je ovdje i sada kako je realizovan o to moš da je bacite pogled kastnije. Evite od ešto smo ubacili u taj universe obsek, pa ubacili smo tip, da postoji u svariji tip int, ubacili smo tip da postoji tip char, vama smo ostaglili da sami ubacite tip bull, ubacili smo da postoji konstanta koja se zovel tako e o l koja je tipa char type imam rednost 10 i ubacili smo konstantu koja se zove nal koja je tipa nal type. Dakle, to je sve već popunjeno kao što sam ja crta malo pred tamo. Zatim, kva smo radili, ovdje je crta i rekli smo da je to metoda koja se zove crta koja ima povratu rednost char type i otaku koja ima jedan nekakav argument. Ok? Zatim smo onda ovde vidite šta smo dohradili pošto sada definišemo nekakvu metodu onda smo morali da pozovemo, videte ćemo dole postajmo u odnošu svariji. Dakle, imamo ovdje metodu bele simbola koja kaže open scope. Ja sam tamo pokazival, sada da sam radili zadatke kada se otvara nov je obsek. E, u tom trenutku kada se otvara nov je obsek i u tvari pozivate metodu ove klasetad, ovo metodu open scope i vidite šta ono u svariji radi, napravi nov je obsek, a ovaj tekući postavi da budu svariji žoditiljski ovome i povećala naravno nivo na kome se trenutno nalazite. Sada smo onda dešao ovdje otak u kodove metode crhra, ja u svariji otvori nov je obsek, zatim onu promeljivu koja argument treba da bude te metode, da je plarišem ovde u nutar tog sad tekućeg obsega i vidite to je u svariji nekakav promeljiva i int type tako da to sam malo prepokaziva e, zatim kažem ovdje povijeta sva šta je ovo kažem crhra oblije, dakle to je ovaj obikni čvor koju opisuje metodu crhra je njemu postavim locals dakle postavim da su njegovi argumenti i lokalne promeljive, kažem current scope get locals, dakle ovo sešno sam u baci ovde, sada uvežem u ovaj tako ovde obikni čvor koji deklariši tu nekakvu metodu i zatim pozovem close scope zatvoriti najnekkakav scope i isti posao odradimo vidite dole pose za metodu orad i isti posao odradimo za metodu len dakle to je sad ovde, ja sad ovde kad da posmatete na primjer ovaj jedan blok ovde vam izdi u svariji kako ja rucno sada u tabelu simbola ubacujem sve informacije vezane za nekakvu metodu, dakle i koja je ona tipa i koja je ona to argumenta ima i otvorio sam i zatvorio sam obseg sve sam odradio ja ovde sada rucno dakle da to je ono kada sam tamo naglasio na primjer ovde sve sam obseg je već gotov ne morate ništa vi oko toga zna ko da radite to sve već odo ovo je naša tabeli simbola samosve što je potrebno dobrojite i jeste da pozovite ovu metodu int dakle ona će odraditi čitavu tu inicializaciju za vas odnimati neke metode koje možete koristiti kao što naprimer kaoži odi chain local symbols dakle kada u nekom trenutku sada treba da na neki objekni čvor uvežete sve ono što se nalazi na trekućim na trekućim obsegu naprimer kao ovde ovo nisam mora da radimo ovako mogo sam jednostavno da pozovimo ovo metodu chain local symbols i ona bi mi na ta objekni čvor u njegovu local sve uvezala ovo što se nalazi u trekućim obseguvite da ona to zapravo irati i ovu metodu imate u dve variante da je preklopeno ime chain local symbols za objekni čvor odeg ćete koristiti koliko treba da uvezavete u metode da bi ste u na metodu i na metode lokalne, premenljive argumente koristite ovo a kada treba na klasu da uvežete sve njene, premenlje sve metode u njegu klasa onda zapravo imate drugu variantu da je to uvezavete na neki strukturni čvor i onda pozivate zapravo ovo metodu naprimer, ovde pa vidite sada ovdje imate metodu open scope, close scope i sada pored te dve metode imate još o tako metodu koja kaže insert našta belu simbola, imate neka fine da pretraživanje koji ćemo trebati da prijavljete tamo neka kve greške, to ćete se već videti u nam samo video tutorialu ja ću ovde samo sad obraditi pažnju samo još na ovo ovde dakle, ovo ovde mogu reći, ne znamo da imamo ne video tutorialima dakle, ove metoda dan koja je sada odel tako vama služi da vi zapravo kada prođete, skrozle celogupno parsiranje, vi ćete popuniti tu našta belu simbola e, bilo kontrenutku zapravo ne morate ni na kraju, možete bilo kontrenutku kao ja, što sam ima ove takke koj programo, pozivati ov ovde dan vidite, može bez argumenta, može sazadati nekajim simbol tabu digitalom pozovete ovo dan i to ćemo u stvari na standardni izlaz ispisati tekuću tabelu simbola to je s kojoj je to, trenutne informacije imate u tabeli simbola, to vam je u tekstu projekta i naznačeno tamo šta sve treba da pobacvete u to debelu simbola i gde šta trebal tako da se prikaže, kad, naravno na kraju parsiranja, prejengo što krenete da generišate kod, ćete uvek ispisivati da vidite, u svaru, šta je to sve o simbola šta se pojavljio, to je nekako i našo i tabeli. Ukoliko vam je potrebno sad nešto ste dodatno vidodali, pa hoćete da je promenite, kako se to ispisuje ovde je odrecinno pomoći nekako projekta u uzorka koja je slušao projektovanje software bićemo lakše, al nije prodovno nije ostalima da razumiju, dakle svati ćete, kad govje te obacili pogled dakle realizovanu pomoći nekako projekta u uzorka koji se zove posetila, civiliti vizitor Ukoliko vam je potrebno nekakak drugači ispis Dakle, mi je jedan realizovan ovaj vizitor vi mošte slobodno da izvedete svoju klasnu doga simple table vizitori da zetinišete na neki drugi način kako ćete u svariji vršiti to nekako ispisivanje, tabela simbol.
 Kako je bilo to što se tiče same tabele simbola, videli ste ovdje sad kako ona izgleda, tamo oni videli tutorialima za projekt, možete da pranjete i kako je ta tabela simbola korišćena. Kako sad u tako da imate više informacija šta ćete raditi sa njom u samom projektu. Tako da to bi bilo to što se tiče tog dela. Ja na sljedećem času prelazim na deo oku micro-revala virtualne mašine, da vidimo od čegasu, ako se svojim na micro-revala virtualna mašina i da vidimo u svariji kako ćemo sad u toj čatvatoj fazi, nosimo u svih ovih informacija koje imamo, otrebili simbola nekako generisati u svariji nekakav bytecode, td. micro-reval bytecode. Tako da je to ukratko, to bi bilo to što se tiče najave za sljedeći tas. I to bi ukratko bilo to što se tiče mene za danas, pa ako imate neko pitanje, pišite, ako ne onda bi smo ovim završili čas za danas. Čavljamo, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas, da se tiče mene za danas,
