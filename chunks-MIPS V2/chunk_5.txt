 Uprvo od sections command. Dakle, ovo je komanda u okviru koja treba da definišemo koja to sve izlazne sekcije postoje. I u ovom našem prvom primjeru možemo da i mena dodeljujemo nekakak proizvolja način, doslikavaju suštinski šta se deša, pa ćemo ovu prvu izlazmu sekciju nazvasti upravo izlazna sekcija prva. Zatim, ono što možemo da navedemo, jeste adresu na koji želimo da se ova sekcija smest i tas adresa, naprimer, može da bude 0x, 0, 0, 0, f, f, 0, 0. Zatim, ono što treba da navedemo, obvezno, jeste dvo tačka. I u okviru ovih vitipčastih zagrada navodimo šta sve spada u ovu jednu izlaznu sekciju koji smo nazvali izlazna sekcija prva. Način da navedemo da nešto neki drugi sekcij ulaze, jeste da prvo navedemo ime file, iz kojeg uzimamo sekcije koje će učestovat i u ova jednu izlaznu sekciju, da bi mi onda mogli sada kažemo, naprimer, main.o, a u obljim zagradama navodimo imena sekcija, pa tako naprimer možemo reći, tačka tekst. Ono što takođemo, jer možemo durdimo, jest da u mestu konkretnih imena file'ovo koristimo vilecard, pa da stajemo zvezu što bi načilo, da sada u izlaznu sekciju prva koje treba da se smesti na ovu ovde adresu, uzimamo tekst sekcije, tekstci koje se nazivaju tačka tekst iz svih file'ova koji su navedini kao ulaz linkera. Na sliča način možemo da definišemo i izlazna sekcija neka druga u kojoj bi smo na, ovaj možemo smestimo naprimer na adresu 6666 i u nju možemo sada da smestimo i svih file'ova sekcije koje se nazivaju raw data. Na sliča način ćemo imati i treću sekciju da možemo stajemo naprimer data, samo ćemo promeniti adresu, neka sada to bude 7777, pa ćemo imati i četvrtu sekciju da možemo da stajemo da su da je adres 8888 i od neka ide sada sekcija, posebna reč koju linker zna da prepozne u linkerskoj skripti, a odnosi se na komen simbola jeste komand, dakle svih simbolji koji su definisani za komen sekciju, biće smestini u izlaznu sekciju četvrtu i to na ovaj ovde adresi. I možemo da dodamo izlazna sekcija 5, poja nini bitno, da je će biti smestena, biće smestena i za ove posebne, tamo da je svoje posebne završava, i neka tu idu sekcije koje i svih file'ova koje se nazivaju comment i koje se nazivaju tačka arm attribute. Ovo ćemo sačuvati, možemo nazvati kako god neka bude ld script tačka ld ili, ajde da se ne ponavljavneka bude linker script tačka ld je običena ekstenzija za linkersku skriptu. Sada kad imamo ovu linkersku skriptu, možemo da pozovemo linker i da imam gažemo da upravo nju koristi. Linker se naziva ld, pa ćemo zato reći arm non-eabil-ld.exe i vidjet ćemo na koji način se tačo navodi linkerska skripta. Komanda bi trebalo da bude veliko t ili script, samo da to pronađemo. Dakle, minus t pa nazi file ili script file je način da navedemo od akle linker treba da povuče linkersku skriptu. S toga, ono što ćemo sad jednostavno uraditi, jeste ćemo ovde reći script je naša linker donje crta script ld i ono što ćemo još dodati, jeste naziv izlaznog file, to je minus o main, pa neka ekstenzija bude elf i ulaz je main.o naš obitni file koji smo malo predobili nakon asembliranja. Sada imamo elf koji takođe možemo da čitamo sa arm non-eabil-ld.exe i opet možemo da vidimo koje su to sekcije, koje postoje u main elf file. Ostoje naša izlazna sekcija prva, koja je u suštini za kod, ona je nasledila ove flagove na osnovu sekcije koje su u nju smeštene. Izlazna sekcija druga je bila za read-only-data, tako da je i ovde zaista read-only-data. Izlazna sekcija treća, jeste data, tako da je i ovde allocatable, loadable i data. Dok je izlazna sekcija četrta, to je ona sekcija didu koment simboli, i nemaju početne vrednosti, izbog toga je ova sekcija samo allocatable. Dok je izlazna sekcija peta, ona je u nju su smešteni samo comment i arm attribute, tako da je zadržala one attributee koje smo već i read-only-data, tako da se neće smeštati u memori. E sada da bi smo dobili hex file, preostano nam je samo još da ponovog kao i kada smo priput došli do ne hex, ovog hex file, inicijelo koji smo dobili, sad opet uradimo istu stvar, samo ćemo pozvati arm non-eAbi obajog copy. Reći ćemo da opet želimo da izlazni file ima format intel hex, ulazni file je ovej koji smo je prodobili main.elf a izlazni je main.hex pregazit ćemo ovej koji smo ovde napravili. Dakle kada smo priput pravili ove hex nismo pozivali linker, sve se, svešta svaka sekcija se smešta počuva došla, dakle seksija za jedne podatak, za drugi podatak sve ide od nullte adrese. Sada kada smo mi eksplicitno navodili adrese, ono što se dešava, jeste sledeć da tekst, to jest programski kod, ide na adresu ff00 izbog toga što se nalazi na adresi koji je moguće pravati, sve se nekošlo, sve se nekošlo, sve se nekošlo, sve se nekošlo, sve se nekošlo, sve se nekošlo, sve se nekošlo. Choje te sve sve prora se pa ro neti z rig elite počeyu. Ove sve se dobra nekošlo. LК optima brze, sk說זотка 6, 6, 0, 0, 0, 0, i ovo, ova adresa ne može da se zapiše u ovih hode četirih eksa decimale cifre, tako da je zbog ove sekcije dodata, dodati jedan rekord tipa proširene linearne adrese i ovaj ove sadržaj, ide na adresu 6, 6, 6, 0, 0, 0, 0, i ovo ovde 0, 6, jeste sadrži iz rodata, a to je ovo ovde ne promeljiva či inicijalna vrednost 6. Slično je i za sekciju koja je treća, on ide na adresu 7, 7, 7, 7, 0, 0, 0, i evo ga ovde 7, 7, 7, 7 i 4, 0, na toj adresi se nalazi sekcija, izlozna sekcija treća. Za komand sekciju ovde nema nikakog sadržaja, evo ga rekord tipa end of file, ove sekcije nema iz prostog razloga, zato što je ona samo allocatable, nije loadable, prosto ne treba da se učita ništa u memoriju, treba da se allocira prostor za nju, da se zauzme, da linker zna da će tu nešto biti, ali nema inicijalnu vrednost i nema ništa da se učita, to jest da se loaduje u memoriju. Izbog toga heks file ka se pravi, ovde ne postoji ništa za taku sekciju, kao što ne postoji nis za sekciju izlozna sekcija peta, jer je samo content i read only. I ako ima sadržaja, postoji content, ali nije loadable, izbog toga se ne nalazi.