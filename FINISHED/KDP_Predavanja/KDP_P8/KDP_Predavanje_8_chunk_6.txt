 Ovo je ovde možemo, znači, veratno da rešimo samo koristići tri neka uslova. Možemo da realizemo da to nisu buljen promenjive, nego da su to promenjive koje, tačnost, opisujte brojekicu koliko ima od neke sorte procesa. I ovde je stavljeno šta treba da postoji kao monitorska invarianta, a broje ljudi koji su u stolici mora da bude veći ili jednakod broje ljudi koji su napustili. OK. Available je već ili jednakod busy, već ili jednakod dan. Znači vidite, ovaj ovde mora da prolazi kroz ta naša stanja. A dobro, reskočit ćemo ovde ovako, nije ćemo na taj način rešavati, jer uvođenje toliko velikog broja promenji ih možemo mogu da zakomplikuje rešenje. Znači da pratim, mi ćemo pjobilepo da svaki put u našem logo jemo zapisano, gdje se ko nalazi, koliko, čega je do tog tenutka odradjeno, ali to je informacija koja je koristna za lok, za dnevnik poslovanja, ali za samo ponašanje je možda malo komplikovanja. Tako da mi možemo da naprijemo rešenje malo drugačije. Znači u mesto ovih 6 ili 7 promenjivi koji smo imali malo čas, mi možemo da kažemo, sa ovaj tri promenjive, ako kaže da su vrata otvorena ili nisu, to je ovde ovde open, dalje ja mogu dodem ili ne. Čer, dalje je stolica slobodna, dalje je berberin slobodan i to je ono što nama treba da vi smo vi mogli da rešimo ove naš synchronizacijoni problem. Dobro, što onda imamo ovde od promenjivih? Int, barber, dalje barber slobodan, dalje je stolica slobodna i dalje su vrata otvorena. To je promenjiva koje će neko postaviti, neko resetuvatiti. Znači vidite što mi hoćemo da radimo? Hoćemo da napravimo one ping-pong, neko će da postavi, neko će da resetuje. Ako se sedcete, mi smo to imali već, ako synchronizacije na barjeri sa procesom ili bez procesa koordinatora. Neko kaže treba nešto da se odradi, ovaj kaže odradios. I to ćemo iskoristiti da bi smo mogli da napravimo randevu. Znači neko kaže, možeš da izadješ? I čekam, tako što kažem, ovo nje jednako jedan otvorena su vrata, a onda načekam da ovo postane jednako nula, da je ovaj kaže, ja i zašo. Ili ja seo, ja napustio da svako može da kaže šta se desio. Znači postavite na jednu vrednost, čekajte na drugu vrednost, da bi ste znali da se desio taj randevu, da je ona strana koji se obaveštavali odradila posao. Odličine biti potrebno još nekoliko uslonik promenivih. Usloveni s promenijem su, da li je Berberi slobodan, da li je stolica slobodna, da li su vrata otvorena i da li je Vusterije napustila prostorio. Da li bi smo mogli da resimo s tri usloni promenjive, verovatno mi smo mogli da resimo s tri usloni promenjive, ali vi ćemo ovde staviti ovako četiri da vidite kako možda i s četiri promenjivi da se realizuje. Ali nije komplikovno je pano. Znači neko će da kaže nešto, pa će čekati na usloni promenjivi, a ovaj drugi će da promeni tu promenju, pa će veratno čekati na naradnoj promenjivi i tako ćemo prolaziti kroz ovaj ovde naš randevu. Čekam da je Berberin slobodan, pa obavestim Berberina, pa Berberin obavestim mene, pa ja obavestim Berberina i tako idemo ping-pong da vidimo da li će i kako koga obaveštavati. A kod ove variante, problema Berberina kod spava, uzit ćemo da osoba uvek želi da bude osišan. Znači kad dodođe do ove naše monitorstke metode, get haircut uvek će se ta metoda izvršiti. A osoba će bezkonočno dugo čekati ako je potrebno da se to izvrši. Postoji varianta ovog problema koja se češće javlja, mispitnim zadacima, gde imamo Berbernicu konacnu kapacitetu, gde mušterije dođe i ona u našu metode get haircut neće biti procedura, nego će biti funkcija koja će vraćeti jednu vrednost, koja kaže, da li je obavljenu šišanji ili nije obavljenu šišanje, jer je bila prostoria prepunjena drugim mušterijama. Bicimo ovo ovde rješavati pod predpostavkom da je ta prostoria bezkonočno. Znači da koliko god proces dođe, oni si mogu da stanu. Vrlo jednostavno možete realizovati i to da li je ona konac, znači uvedajte najobičnu promenju cn t, znači najobični count i kad neko uđe, proveri ako je count već je od m, a kažete return false, a na kraju, posno toga kažete cn t plus plus, a na samom kraju kažete count minus minus i return true. Či samo bi to bio dodatak, za slučaj da mi želimo da naprajimo to jedno uvedanje koliko osoba može da stane u tu našu berbernicu. Do datak koji kaže if count već je od m, return false, else može da se šišaš, na čima dovoljno mesta, ali mora da su već je taj count plus plus za neko narodno, na samom kraju kad se sve odrdi kažemo count minus minus i kažemo return true, posao je obavljeno. Pošto nemo drugi način, nemo callback metodu koji neko mogu da nam prosledi koji bi smo pozvali iz našeg monitora, a tako da jedina povratna informacija ove može da dođe kroz tu povratnu vrijednost. I hajde da vidimo kako izgleda procedura za mušteriju. Mušterija kaže, dok le god berberin nije slobodan. Čekaj, da ću viditi, odo ćemo sada proloziti kroz niz koraka. Prvi korak, čekamo da berberin postane slobodan. While, barber, jednako nula, wait barber.available. Čekamo, dok le god je berberin postani na vrijednost nula, moramo da čekamo. Kada predjemo na nareni red, berberin ima vrijednost 1. To znači da smo mi upecali to čudu i mi kažemo, ok, mi smo to upecali. Šta smo odradili? Čekali smo da postane različito nula i suštini odmah o ovde u prvom narednom redu smo mi to resetovali na nula. Sada je potrebno da napravimo pong. Znači dobili smo ping, od one strane nekoj postavio barber jednako 1. Sada mi treba da pošadimo pong, selismo u stolicu. Kako to radimo? Kažemo, čer plus plus uvećali smo to i obavestimo berberina. Obaveštavamo berberina da mu odradili neki del posla. Šta radi berberin? Posla berberin na šiša. Kada berberin završi svoj posao, berberin, a mi moramo da sačekamo, da nas berberin, pusti da kaže berberin, posao završen. Posao završen, kako to znamo, pa open postane različito nula. Open kaže otvorena su vrata. Ok, čekamo da nam neko otvori vrata. Kada nam neko otvori vrata, mi ćemo da zatvorimo ta vrata i kažemo vrata su sad zatvorena. Mi smo otišli. Berberin će postaviti open na vrednost 1, a mi ćemo to resetovati na vrednost nula i reći, mi odradili posa, mi zašli. Samo nekako treba dobavestimo berberina, tako da tu ovdje imamo još jednu metodu koja se zove customer left, signal customer left. Kako onda izgada kod za berberina? Trba da bude kontra u odnosu na ovaj ovdje kod koji imamo berberin. A treba da u većja barber, da čeka chair available, da postavi open na jednako 1, da sačeka da open postane jednako nula. Berberin ima dve metode. Prva metoda kaže, evo je ovdje. Prvi devo. Ove prve metode je, prvi na red, u nek sedne u berbersku stolicu. Možda postoji neko, možda ne postoji niko ko trenutno čeka. Jer ako niko ne čeka, ovo ovdje metoda signal, barber available neće odraditi ništa, nači samo treba se prisidite. Signal, kod semafora i signal kod monitora, ne rade isti posao. Signal kod semafora i signal kod monitora, ne rade isti posao. Signal kod semafora, ako niko ne čeka, uvećeva internu semforskoj promenjivu za 1. Signal kod uslovne promenjive kod monitora, ako neko čeka budi, ako niko ne čeka, ne rade ništa. Velika razlika. Za slučaj da nemo neko ko čeka. I šta smo mi ovdje odradili? Barber je jednako barber plus 1, nači rekli smo berberin dostupan, obavesti. Moramo sve dobalesti. Ne moramo sve dovoljno prvog dobalesti, ako možemo jednog pojednog samo da smo obslužavati. Čekamo, dok le god čekamo.