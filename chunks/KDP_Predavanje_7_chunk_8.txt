 na rednog. Dobro, ahdivimo je taj čitalac if list.remuvo0, to je one na početku liste, a tačka v ako je to jednako i jednako r, budim čitalac. A onda treba dobranim posao za čitalce, znači čitalac je bio sadna zablokiran, ja moram da odradim posao koji bi on inac je radiio. A što radi čitalac c na tr r plus plus i treba da probodim prvog koji čeka ok.signal. A što ako to nije čitalac nego je bio pisac. A ako je prvi u liste, double V, što treba dobranim? Count double V plus plus signal. Možete će da ispadne da ovo ovde signali kod, kao kod teknike koji smo imali kojce mofora, gde smo mi prostadživali štafet u palicu, možete da ispadne ispada. A izvijenite, znači ono da ako signalizirali ovo prvo ako je čitalac, duklu nisu da će elemental, treba i else. Treba. Da li uješ nešto što da treba da se odrati? Ja. Ja, je lova isti kod možda možda da se radi i sa ove druge strane. Kada radimo kod začitac. Ili to dovojno? Ili nije? Moro da se proveri da nema više čitalaca da bi se probudio pisac. Ista situacija kao maločas, a ako ima više čitalaca koji su naredjani na red, kada je neku završio, a ovo ovde čudu će probuditi prvok. Ok, prvi će probuditi drugom čitalca, drugi će probuditi trećih, al tekad završi, znači mi u ovakvim rješenjem. Serializujemo čitalce, znači ovo ovde rješenje, mislim radi, ovo ovde rješenje bolje u odnosu na maločas, na maločas koji smo pričali imalo deadlock. Ovo nema deadlock, ovo je serializovalo čitalce, to je ono kao da smo napravili lock. Jedan može samo nešto da radi. A je ponu, šta nevoja ko dovolj je što dogršenja? A ako neku piši, i dođe jedan čitala, drugi čitala, treći čitala, četvrti čitalac, ima ih više. Mislim dovoljno je dva. Kada pisac završi sa poslom, s ovim ovde, šta se desi? On ode i probudi kog? Prvog. Znači pisac probudi samo jednog. Šta radi taj i to odradi posao za njega? Taj jedan će biti prebačeno enterikiu, jeste biti će prebačeno enterikiu, to nije nikakav problem. Ali taj neku je dobio pravo da čita i promenjiva count je uvećana na odgovarajuću vrednost. One i što je budio je uveća o to. Bilo za čitavce i bilo za pisce. Ali je problem, ako je ove probudio jednog čitavca, a ima ih više. Ali će se ti čitavci i drugi probuditi nekad? Kad završi, oni prvi čitavci kog smo mi probudili, on će doći na ovdje isto mesto. Učekaj, a ovo nevalja. Iel ja smem da budim svaki put pisce? Upa, ne smem. Znači, ja ovde moram da imam muslov i još jedan. I counter, cnr, jednako, jednako nola. Ja sam ovde moram da proveram to, da je counter ili count dvv v jednako noli. Nisam već i sigurno garantova, kao counter i count dv v su jednaki noli. Tako da tu nisam moram da proveram, a ovde moram. Nije smem da budim pisca. Ako je... Kako je... Kako je counter različito od nola? Mogu da budim čitavac. Dobro. Tako da ovde rješenje će mi serializovati čitavac. Znači, nije najbolje rješenje, nema deadlock. Znači, mnogo je bolje u odnosu na nosa deadlocku, ono nevalja. I dalje, zato što čitavac, prvi će krenati da radi. Pa kad prvi završi, počiće drugi, pa kad drugi završi, počiće treći, pa kad treći završi, počiće četvrti. To nevalja. Dobro. Šta onda? Ovde može da se izmeni. Pa ona i što budi. Bi trebalo onda da proba veći broj procesa da probudim. A koliko je to veći broj, nemam pojma. To će zavisiti od toga koliko ima zablokiranih. I dalje su ti zablokirani čitac ili pisti? Aha, ovo da umistu i da stavimo vile. Napravno to. Ali ćemo da ovo ovde raditi? While list.size veće od nule. Pa neće. Zašto ovo neće raditi? Ovo nevalja. Šta se desava? Pisat kad završi. Šta on može da odradi? A on će da protrči kroz celu listu, a provodi prvog drugog, trećih, četvrtog, petog, šestog. Ili će dopadno u dedlog. A, ne mogu, ne mogu, ne mogu. Ne mogu, ne mogu, ne mogu. U lajlog. A da izadži, ima ćemo jednu besko načinu petni, ovde isko nećemo moći da izadžemo. Ako bi ovde... Če bi ovde cran, cran ste ima. I, i ovde... Aha, ako to osad ove proširim i kažem... Šta sam stavio tu? A, c, n, t, a, r. Ne, za počitavce. No, bove jednako, jednako nula. A ovde i... Count r, jednako i jednako nula. Ha, ali sada ako staj mi to i... Count w, jednako i jednako nula, pa obaši nevalja već. Više nije tako lepo reženje, kao što smo cranuli maločas da ga pišemo. Ali, nekako ovako treba da bude. Kada smo imamo nekog da budimo? Či to je to, da se probudi, ako je broj pisaca jednak nuli. Ok, taj uslo smo preuzeli odavde i ako je prvi kučeka čitala. Super, pisac isto. Nego, ovo vajel nas malo buni. Evo to treba vajel ili ne treba tu vajel. Ja smemo da budimo jednog ili treba više. I ovaj ovde je uslov, ili treba i onda se proširi. Ako ustajemo sada tu jednu petlju, koja može malo da nam komplikuje to što radimo. Ja sme petlja. Ja ćemo i kad izrači iz ove petlje. Pa iz ove petlje nikad nećemo izrači. Iro vidite, ako ovaj ovde uslov zabudnije pisaca, čitalaca neće se provoditi čitalac. Ako neće se provoditi pisaca, neće se provoditi pisac. I onda će ovo tu stavno čekati. I onda ćemo ići nikada. Ako ne možeš izrači, čekajemo samo što se zdjesi ako ne može izrači. On je u monitoru, nije napustio monitor. Ako nije napustio monitor, nikko ne može drugi da uđi u monitor. Dobro. Što onda radimo? Pa možemo da pravimo sada, to će o pomoći. Andos Break. Vidimo, da li će ovako nešto pomoći našem rešenju? Ako je prvju listi čitalac, i ako je broj pisaca, koji piše jednak nulij, budi čitelca, ok, vratimo se nazad, ima neku gulisti. Ako je taj naarenju listi čitalac, budi čitalac, ako je taj naarenju listi pisac, i nije sigurno izpunjeno uslu za pisca, tako nismo objutuđimo, doćemo Break i to bi trebalo da je ispravno rešenje. Znači možete provjeriti, da li ovdje sada što sam ja napisam, je ispravno rešenje. Znači, da li ovdje sada što sam ja tu napisam, radi. Možete to po razmisliti. Mi smo ovdje iskoristili tehniku Passing the Condition, napravili smo jedan red i napravili smo još jednu listu, ali kad ovo radi? Samo da konstatujem, ovo ovde što sam ja napisam, radi, samo u slu...