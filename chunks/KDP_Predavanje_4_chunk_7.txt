 treba da nateremo da nešto radi. Treba da omogućimo da čitava infrastruktura radi brzo. Infrastruktura nije ono što mi pravimo ovde, nego one i ostatak mi obezbeđujemo infrastrukturu da bi ostatak sveta mogao nešto da radi. A to je ovde označeno sa 3 tačkice ili sa proizvedi proizodi unesim. Napravi nešto. Znači, vidite, neko drugi je to treba ododrati. A mi ovde samo očivo do bezbedimeljnu infrastrukturu da to što je taj neko napravio radi, da ta infrastruktura podrži što je mogući veću konkurentnost. Ako same po sebi konkurentnosti nema, ova je redko proizvodi i čim se to prizvede, to se potroši, onda je ovo super rješenje. Ali ako nije tako, onda ovo ovde rješenje naše ima malih problema, to je nemo, nemo magacinsko poslovanje. A nemožemo da ubacimo objekte koji smo napravili u taj naš magacin koje nama potrebanu. Dobro, nemožemo da i ubacimo magacin i onda su ljudi napravili, ajde napravimo magacin, to je buffer. To nam je najjednostavnija nešto gde možemo nešto dobacimo, kako se ubacuju buffer, imamo 2 pokazivača, veratno će nam trebati brojač koji nam kaže kako neće ga ima. Buffer od rjer je jednako dator, rjer je jednako rjer plus jednom, pomodu ljena, to je buffer konačnog kapaciteta i kako se čita nešto iz buffer, result je jednako buffer od front, front je jednako front plus jed. Ajde da vidimo ovo naše predkodno rješenje, da li može da pijevo od ono što sam ja kremo da kucam. Dači da li ja osojimo ovde, mogu ovde da upišem trej tačkice, i da kažem šta sam sad malo čestam bo napisao, buff od, malo da front od kod znam. Ali i da je front nema vezi li, da je rjer nema vezi, buffer od front je jednako data i ono front je jednako, što nisem pijemo samo na flaslovo, front plus jednom pomodu ljena, a ovde result je jednako data od r, ajde da pijemo r, a r je jednako r plus jednom pomodu ljena. Ajde, ovo nam je, da kažem, celosko označavanje gde indeks i do odnola. Sveđe pitanje, dali ovo ovde radi? Radi. Nema nikakvih problema, ovo radi savršeno. Ne, mislim, ovo radi isto kao malo čas. Za slučaj da imamo ovako postavljene semofre, da je front jednako nula, da je empty jednako jedan. To što smo mi ubacili jedan niz je krajnje nebitno, jer nismo povećali konkurentnost. Ako je, ako je jedan element u buffer, to što smo mi napravili buffer od stoj elementa, ovo se neće pomeriti dok se ono tamo nemerne, a če ovo je neće moći dubac i sledeći, dok lego do one tamo ne pokupi. Dobro, što bi se desilo da ovde empty nije postavljeno na početnu vrednost 1, nego da je postavljeno na početnu vrednost 1? Sad je pitanje i je ovo radi. To je dobro pitanje. Ovo ovde što sam ja napisao radi. Šta treba da radi, i ovaj cacan ja zaboravio? Treba da u mogući proizućaču, da može da ubacuje element i da ne mora da čeka da se ta element proizudi. Prima ja sad mogu da proizvedam 10-ih. Ajde ja tu da napunim, što ja da čekam? Da ona je tamo, mislim to, kad mesite hleba. Što pekar da čeka da se proda jedna hleba, pa da napravi sljedeći. Vada ovo da u ujurtur napravio i gomilu hlebova, pa stavi na policu, pa se to koriste. Znači nije to ono pravite, kako se zove ratni brod, pa to se pravi jedna, pa ko zna kaj će sljedeći, to košta mnogo. A ovom hleb kad se mesi, to se umesi gomilu u ujurturu, pa se to koristi. Sad je pitanje, da li ovaj ovde seli što sam ja napisao radi? Zavisi od toga, koliko ima procesa, koliko ima potrošac, i koliko ima proizvođača. Ako imamo jednog proizvođača i jednog potrošac, ovo rešenje koje sam ja napisao radi, super. Ovo ovde rešenje omogućeva tom jednom proizvođaču da puli buffer. On označava koristići ovu signalizaciju sa full. Ovde sa full, označava je ubačeno rešt u buffer. Postoji naradnji element u bufferu, postoji naradnji element u bufferu. Koliko je lamenata ja mogu da ubacimo buffer, ono liku, koliko mi je empty bila postavljeno na početku, na vrednost 1. Ako uzmeti da pogledo smatrate, ovako jedno rešenje. To već možemo da posmatram, to je ono tamo slajdu, da smo bili maločas, to je ovo rešenje, wait empty, buffer je da pokazivači se zavu druga, če je nema vese, i signal full, ovo ovde lepo rešenje radi, ako imamo jednog proizvođača i jednog potrošača. Ako postoji jedan koji proizvodi i jedan koji troši tu. Sada nekoma možete kada će, čekaj, što je problema, ako postoji više? Gde nastane problem? Kako može ošto da nastane problem? Može nastati problem, zato što mi ovde, bi smo imali konkurentno modifika, konkurentnu modifikaciju jedne te iste promenjive. Nastala bi konkurentna izmena toga, a to ne smedaj da se desi. Ne smemo da imamo konkurentnu izmenu naše promenjive, nego mi ovo ovde treba da realizujemo kao jednu atomsku akciju. A to je smest element mrdni pokazivač, smesti element na lokaciju na koju kazove pokazivači, pomeri pokazivač za jedno mesto unapret. Znači, smesti pomerja. Dobro. Ovde nemo o njih atomskih operacija koje smo možete imali preo ono feče, nednjim teste, toga ovde nema. Ovde moramo sve da razrešimo koristići semafore. I što peše treba da razrešimo? A to je nedeljiv, pristup da ovogo ovde bloka. I ako se svecite preno 4-5 slajdov, smo mi već videli kako se realizuje medjusobno iskučivanje. Medjusobno iskučivanje se realizuje, da kažem, trivialno. A to je weight, IoTeX. I kad završimo ovaj ovde red, da kažemo signal, IoTeX. Isto to i na ovaj drugi strani, weight, IoTeX. I ovde imamo signal, IoTeX. I mi smo napravili rešenje koje nera di za 1, nego radi za n, proizvođača i n, potrošača. Odnosno, m, ne mora m, nego ih ima više. Više proizvođača i više potrošača. To ne mora da bude, da će m i n, kog koji ima neki koji koriste i kog koji ima laminatubafero. Tadva broj je ovšte, ne moraju da se poklopi. To su dve nezavisne statke. Osoštiri možda bude nezavisnom broj proizvođača i nezavisnom broj potrošača. Oso su sve možemo da kažemo, moj proizvođača i ka potrošača. Nezavisne potpuno veličine koje možemo da koristim. Baffer ima neki kapacitet, ako koji ima proizvođača i koji ima potrošača, ako ih ima više od 1, ovo ovde je nešto što mi treba doodrediti. Da mi smo napravili synchronizačio. I napravili smo naše rešenje, a V8mioTeX signal miotex. V8mioTeX signal miotex. Šta radi miotex? Miotex pravi kritičnu sekciju. Dobro, šta i ta kritična sekcija? Čekaj da se setim, čekaj. Imo dve delje nepromenjive Front i Rear. Imo dve promenjive Front i Rear. Ko odira promenjivo Front? Čekaj da vidim. Promenjivo Front modifikuje consumer. Ko promenjivo Rear? Prodjuser? Čekaj. Promenjive koje menja producer nisu istikao promenjive koje menja koz jumer. Nisu. Aha. A što onda zabranjujemo proizvođačima da promenjaju svoju promenjivo Rear ako u istovrbeno neku drugi menja svoju promenjivo Front? Dve potpuno odvojene promenjive. A ako su potpuno odvojene promenjive, to su dve potpuno odvojene kritične sekcije. Nemaju ništa zajedničko. Skoro ništa nemaju zajedno.