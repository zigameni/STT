 listi koji ćete dobacujete i pretrasujete neku listu. A ako to je listi, pristupa samo jedan. Nate sigurno da pristupa samo jedan. Emujete koristiti konkurentnu listu, lopštve. Klućete performance jer, a sete konkurentne strukture moraju da nakacce deo za synchronizaciju. Deo za synchronizaciju usporava raci sistema. A što bi ste usporavali namerno raci stema? Ako znate da postoji samo jedan. Ako ne znate da postoji jedan, nego mislite da može postaviti piše, onda to je potreba za... Da potreba za synchronizacijom, možda neće postaviti uslušt ako postoji ovo ethmost funst property. Svamo samo da kako vstavite. Ako je ispunjeno ethmost funst property, ne treba dalje synchronizacija. Ako nije ispunjeno ethmost funst property, to ne znači da nije potrebna dađa si. Da može da... Možda može da se dobio je rezultat identičan i bez dodatni synchronizacij. To ovo ovdje je implicacija. Ako je ovo ispunjeno, ne treba synchronizacija. Ako ovo ovdje nije ispunjeno, ne znači da treba synchronizacija. Možda ćemo boljeći da naparimo synchronizaciju i kada nije ispunjeno svojstvo ethmost funst property. I to ćemo danas već imati kada budemo gledali jedan od biti. Ako gledali, da smo se synchronizaciju. I evo ovde i jednog primjera. Osto ju uva primjera. Prvi primjer je x je jednako 0, y je jednako 0. Znači nekako početa vrela. I ovde je stavljenu neka oznaka. Ovo ovde c, o i oc. Ovo ovde s ovoj usunštini ko bi gjedno. Kaja u paraleli pokrenuti. U ovde oznaki ćemo koristiti na ovom prednutu. Čisto da nekako signaliziramo, e ovo se radi u paraleli. Ove dve uspravne linije. Če nam ovde samo označavati da se to izvršava u paraleli. To je oznaka koja postoji u jednom programškom modelu koji se zove CSP, koji će vam i raditi u nekom odku. Ove dve uspravne crte. Znači u paraleli se radi ovo i levo i ovo desto. Nama je za sada samo oznaka. Jer ako bi smo pisali u javi, pa dok mi napišemo o najproces, o ovaj tread, pa šta će da radi, pa da to pokremo. Taj okoliš ima 100 redov. Ovo ako nam je jednostavnije, mislimo da zove oslubne primjere. Kaj ćemo ovde ovde ako bi ginko event. I ovde ospravne crte ce zavrali. Znači da krećemo tu taj okoliš, koji će da napravi šumu pa onda nećemo videti šta zove do nutredov. I sad ovde im šta kaše? X je jednako y plus jat. Y je jednako y plus jat. Sve dje pitanje, dali nam je ovde potrebna synchronizacija? Ajde da vidimo. Y iz racunova na osluvu ček. Y je jednako y plus jat. Sve dje pitanje, dali bilo ko? Ovo opisuje novog vrednost u promenjivo y. Ovde se druge strane se ne opisuje, a ako se ne opisuje, ovo vrednost u promenjivo y, onda možemo da kašemo da se ovo ponoša kao lokalna promenjiva. To što je stavljeno ona gorebe, je delje na promenjiva, ima vesel. Ona se ponoša kao naša lokalna promenjiva. Aha, do. To označi da y nije ova kritična promenjiva. Ajde gledamo ovu drugu strane. Dali x, neko drugi čit, jok, samo će u mi koristiti tu našu promenjivu x. Y je ovo promenjiva, dali se koristi na više mjesta? Dali ovde stoj y je jednako y plus jat? Ne, ovo je y je jednako y plus 1. Aha, znači jedan put mu proči. Dobro što to znači? To znači da ne ima potrebe za synchronizacijom. Mi već ovde imamo, a realizovano, gledi u sobno iskličivanje. A čeg je, šta će biti rezultat izvršavanja ovog ovdje? To nam je garantovan. U jednom slučaju, ako se ovaj del izvrši kao prvi del, ovo što ovde može biti godna instrukcija. Load y, load constanta 1, add, store y. Ovo je ovde del, možda ima četere instrukcija. Isto je ovde del, možda ima četere instrukcija. To nije jedna instrukcija. Kad pročitate ovde što piše, x je jednako pa y plus 1. To nije jedna instrukcija. Višemo za sada od ovke rutka pa nadalje koristiti da je upis ux upis upis upis realizovano kao atomstvih. Može da se realizuje kao nedeljivo. A kad budemo došli do nekih mesta gde to već ne možemo tako reći, ono ćemo morati da stavimo doda, tudi ćemo i za. Ali u ovom ovde slučaju, šta smo rekeve da može biti, čitom y, y je jednako nula. Nula plus 1, rektiv smo x je jednako n, a y nije jednako y, y plus 1, y nije jednako... Koje ako smo napravili da se ovo izvrši prvo, pa onda se izvrši ove ove drugi videa. A mogu da se desi i sledeći scenario. Ovo je ideo izvrši atomstvih, nedeljivo y nije jednako y plus 1, znači, šta smo rektiv? y nije jednako... znači, znači, šta smo imati? x je jednako... Ovo sam sad ponov pokremila, sada smo što se desilo u ovoj prvo izvrši, y nije jednako... plus 1, y nije jednako 2. Nismo dobili ove dva razvijčite rezultata. Mama medžu sobno istničivanje, negarantuje šta će biti rezultat. Uvijek, uvijek, uvijek, znači biti rezultat. Mama garantuje da kad jedan dođe ta jedan će odraditi posao nedeljivo. Ako hoćemo da garantujemo prvo izvrši x, pa sam da izvrši y i to ćemo raditi koristići uslovnu sinkurnizaciju. Nije medžu sobno istničivanje, to su ve potpuno razvijčite ste. Nama su ove i jedno i drugo potpuno validni rezultat. Drugo su nama validne vrijednosti koje možete. Samo što ne znamo šta će od ova ispasti, ali znamo da neće ispasti nešto bezveze. Ovde dole može da ispane nešto bezveze, jer ne znamo šta se može da ispane kao rezultat. Šta mi imamo? x je on je jednako x plus 1 a x je jednako y plus 1. Čekajšta piše, y je jednako x plus 1, a znači to može da ispane x je jednako x je jednako y plus 7, y je jednako 0, 0 plus 7, x je jednako 1 y je jednako x šta smo rekao x, 7x je jednako 1 to je 2. Može se desiti iz scenariju y je jednako rekao x je jednako 0, 0 plus 1, y je jednako 1, x je jednako y plus 7, y je jednako 2. Može ovo da se desi kao rezultat, ali može da se desiti i sledeće. Prvi ode pročita y je jednako 0. Oda x, i s povrbreminostim ovo je ovde pročita x je jednako 0. 0 plus 7 je jednako ovde se može desiti da rezultat postane x je jednako 1. y je jednako 1. Ovo ove nije nešto što odgovara nekom sekvencijnom izvršavanju, jer su se ova ove dva uplela izvršavanja. Ist ovremeno su pristupili x je pročitao staru vrednost, y je pročitao staru vrednost, ovo ne odgovara ni jednom sekvencijnom izvršavanju. Nama, međusobno iskučivanje, garantuje da će rezultat odgovarati nekom sekvencijnom izvršavanju. Garanto je kom, garantuje nekom, kaže nekom. Ali, a ovde dole ovo je snucu koje je napisanu, a mi ne dopilimo nište što odgovara nekom sekvencijnom izvršavanju. Čvijete, ovoj treći slučit da je x je jednako 1, y je jednako 1, kaže da je došlo do uplitanja naših niti. Ako se se niti međusobno uplele, on je odgovara sekvencijnom izvršavanju. A ovde nije iskunjen at most funds property i onda može da se desiti. Ne znači da će se desiti, znači da može da se desi da rezultat ne odgovara. A isto tako, da ponujem i u šenu, sada sam reko, imam jednom pristup. A da je ovde kojim slučajem, tajalon, x je jednako y plus y plus 1. Ebi bilo iskunjenu svojstvo at most funds property. Šta bi je ovde bilo sekvencijlnja izvršavanja? Y je jednako 0, 0 plus 0 je 0, plus 1 je jednako 1, x je jednako 1 y je jednako 1, znači to je jedno sekvencijlo izvršavanje. Drugo sekvencijlo izvršavanje je bilo da y uvećemo za 1.