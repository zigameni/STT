 Dovode negde smo došli na predkodnjem predavanju, ono poslednje je samo da vas pocitim o čemu sam pričao, su bili substitucijne algoritmi i došli smo sa tom historijom, kriptografije prijeke negde do prvog sveckog brata. Ako se nevaram jedan u poslijih algoritmerom koji se nam pomenu, je vernamo algoritm kojih 1918. godine i takođe pomenu li smo transpozicijne algoritme. A sada ćemo da vidimo još malo tu historiju da kratimo, negde do periodu druvog sveckog brata. Atle u ovom periodu između prvog sveckog brata i u toku samo sveckog brata mašina koje se koristile za šifrovanje poruka su bile tako zvanje Rotor mašine i ja pripostavim da ste makali nekih filmova čuli za jednu taku mašinu to je bila enigma nemačka. Iliže to je bio proizvod koji se prodalo slobodno, da je to vremenje da kupite taku mašinu. Ja ću preskočiti par slajdala samo da vam pokažem kako je on izgledala. Ovdje imate sliku enigme. To je jedan onakopredično veliki komad Gvožđa koji je imao jedno 50 kg elektromehanička naprava koja je imala tastaturu. Da vam to pokažem. Tako da tastaturu je bila ovdje. I tu je operator Kuca tekst koje že vebe šifroje. Zagnoravno to je dobra preeračanara, to nije bilo nikakolike ekrana. A ono gde ta isti operatoro čitavao šta je šifrovanu to su bila ovdje slova, odnosno to su bile lampice koje su se palile sa određenim slovoj. I na primer operatora obis tisne na on tastaturu slovo A a tamo si pojeli slovo X i neko uznima i zapisuje tu poruku a onda se kasnije ta poruka šalje radiovezom dok leje potrebno. Ono što takođe imava, ova enigma to je ovoj prednji tako zvoni plug board, odnosno mesto gde su ovim prepovezivanjem žica moglo da se definiša neka početna kombinacija na togama enigma radi. Dakle, rekoh, enigma je bila uređe koji se koristizim dva svecka rata, a postale čuvena zato što su enemci koristili toku drugog sveckog rata i jedan od bitnih događe u toku tog rata koji je uticao na događenja makarna zapašnom frontu je bilo to da je ekipa matematica Rokvala Necjuringa uspela da razbije te šifre i sad ćemo malo da vidimo kako je radi la enigma odnosno koje to bio težak zvata koji su oni imali. Ovde imate primer jedne rotor mašine, odnosno jedne enigme je sada kozvana tri rotora, a ineče u prodai su bila mašine koje su imale tri rotora pa onda pošto su negde u periodi niža dva svecka rata po ljaciji uspeli da razbiju, uspeli su da desifuju poruke koje su dobijene mašinama koje imaju tri rotora, kas nisu se povedivala E sad što su ti rotor i kako je sama mašina radi? Prvo ćemo da pokušam da objasnimo šta su rotor i tako ćemo posmatrati samo ovaj jedan rotor i da svatimo šta je suštinski taj jedan rotor. Ako pogledate ovdje, dakle rotor je vrlo zove se rotor zato što je tako u pružnog oblika bio i zato što se vrteli i pa ćemo videti po kakom pravilu se su se rotor i vrteli ali suština je sljedeća. Kako neko uzme i pritisne slovo A ovde u određenom trenutku, u određenom položiji rotor u nutrašnjim prepovezivanjem tih rotora je bilo određeno da ći sa to slovo A da u tičenu na to da se signal električi pojevi na ovom ovde izlaznom portu. I kao što možete da vidite ti redni brojevi sa leve strane su sa desne strane izmešvani, odnosno ovo što vidite ovde i da se da se vrlo jednu permutaciju tih karaktera koji postoje u opiru nego galfabeta odnosno mogli bi smo da kažemo da jedan rotor predstavlja jednu monoalfabetsku šifru, način jednu permutaciju originano galfabet. E sad videli smo rani da da monoalfabetski šifru imaju suštinski problem a to je da se potpunosti učuvava statisticku osobi na onog teksta koji se šifru je tako da to je dobro, ez bog toga su oni uveli da se ovaj rotor pomere. I to je bitno osobino rotor mašina dakle nakon što je neko stisno slovo A, pa se ta električni impuls pojavio u ovom prvom slučaju na predposlednjem izlaznom pinu, da tako kažem tog rotor'a, ovaj se rotor pomera za jednom mesto. Kada se rotor pomirio za jednom mesto, ako bi neko ponovost istno slovo A, onda bi stisno ono bi odgovaralo, recimo, o tom ulaznom portu 23, koji je sad u nudrašnjim prepovezivanjem uticeo na to da se upaliti drugi, odnosno da će se električni impuls proslediti na drugi izlazni port ovog rotor'a. E što to znači? To znači da zapravo sad ovim rotacijom i pomiranjem mi sa svakim ubačenim slovom imamo pomiranje rotor'a za jedno mesto, a ako imamo pomiranje rotor'a za jedno mesto, onda imamo jednu novu monofabetsku šifru koja je definisana, odnosno ovaj sistem koji ima rotor'e koji se okreću, nače ako posmatram u sistem koji ima samo jedan rotor, to bi zapravo bio polijalfabetski sistem čijel je dužina ključa 26. Zato što postoji 26 različnog mogućnosti tih položaja rotor'a kada se pritisne određeno slovo i obrtanim rotor'a će se uvek pojaviti neki drugi izlazni port na isto i da se je uvek po slovo a u ovom zlučiji. I naravno sad ta dužina ključa 26 nije preterano teška za odkrivenje, to je relativno kada ključ i ono što su oni uvradili, to je da su dodavali dodatne rotor'e. E sad kako se ti dodatni rotor'i ponašaju, odnosno kako se kreće. Ovo je levi rotor, kao što možete viditi dole, on se zove brzi rotor i to je rotor koji se okreće nakon svakog pritisnih potastera. I kada se vrati na početni položaj, u kome je bio, onda će se ovaj sredni rotor pomeriti za jednom mesto. A kada sredni rotor obrne jedan krug, a to znači da će ovaj levi rotor za to vremmio krenuti 26 krugova, onda će ovoj spori rotor da se pomeriti za jednom mesto. E što sad ovo dalje znači? Svaki od ovih rotoru naravno ima pokunisti princip funkcionisani, svaki ima neko svoje interno prepovezivanje ovih ulaznih iznazih portova. A ovo praktično znači da ovako definicim sistem je zapravo polijalfabetski šifarski sistem koji ima dužinu ključa koji je jednaka 26 na NT, gde je n broj rotor. U ovom sluči tu je 26 na treći i to je neki broj, sad ja ne znam napam, je kaj li mislim da je nekdo okupete s 1000. Dakle, ovog bi smo mogli o posmatramo kao polijalfabetski sistem koji ima dužinu ključa koji je nekdo okupete s 1000 slova. E sada k' uzmijemu u obzir to da su poruke koje slalili za vreme rata bila relativno kratke. Između ostalo, gdje to je ono gdje je system, oni su pomoće ovih poruka slali izvešta o vremenu, da su anglesi znali da u okuru tih poruka postoji reč vetr na nemačkom kojoj označava vreme i onda su uspevali da pronadži u takoj paterne u ponašenju rotor mašina. Dakle, pošto su poruke relativno kratke, onda ta dužina ključa preko 15.000 slova je dovođno dugačka da ne može da se ukoti i bilo kakva pravilnost u šifrovanom tekstu. I to je ono što je značino otižavalo posao kryptonolitične i to je ono što je otižavalo posao na kraju turingu i njeguvoj ekip. E sada naravno kada je provadjena enigma koja radila sa 3 rotoru onda su dodali 4 i 5 i čim se taj problem digao na 26 na 4, odnosno na 26 na 5 i dakle postavio još loženji. A izmiju ostalo gregao sam da u samo enigmi postoja naj plug board na početku koji služio za podješavanje početnih stanja. Takođe jedno svar i koje bila bitna i ono što su radili za šifrovanje tekstuva, to je da su recimo svakvog danu imali različite početne polože ovih rotora i to su morali na neki način da se informizuju tu informaciju koji će biti početni polože i rotor za slanje određene poruke, zato što samo tako su mogli da dešifruju poruku ako mašine nemaju synchronizovanu podešene te rotore, onda prosto bi se dobila poruka koja ne bi imala neki smisao. I to su bila mašine koje su se smatrale za veoma, kvalitetne i veoma savršene u to vreme, naravno sve vreme pre nastanka računara, ali je to, tatsu uspeli prvi pude i ich provale i tada su takvično i prestalo da se koriste. I neče interesantno je da jedan emerska firma prodavala takve uređe i sad ono što je svaki taj uređe imao, to je moguće spravo taj plug board na početku kojom ste mogli da definiši različito prepovezivanje slova i to je nešto što taj prozvođeš nije znao, a ono što je proizvodeš svakako znao, to je kakavi raspored u samim rotorima, onih mašina koje je pro, ali ono što nije mogu da znao to su početna stanja podješavanja tih rotorakako koji port je povezan na kojoj stranu. Tako da se to smatrlo i to je bio model koji je bio odgovarajući za zaštitup vada tako u to vreve.
 U tom, Bletchley Park u Engleskoj radili, oni su napravili jedan ovakav uređe i sada ovdje što vidite, ima punovih rotorak kašto mašto vidite, ovo predstavlja mošte ovo da doživite kao neki multiprocesorski sistem, koji ima 36 paralelnih enigmi, gde su oni, kaj da dobiji neku šifrovano poruku, zapravo pokušavali da podješavanjem razvečitnih početnih stanja tih rotorak njihovih da pokušali da dođu do orignalne poruke i ovu spravu su oni nazvali bomba. Dakle, to bi bilo ta sistem koji je nastavlj i koji je prestavlj sa svojim životom negaj sa zavosetkom druhov sredskog rata, a nakon toga dolazimo u dobra čunara i tu dolazimo do ovih algoritama, o kojima ste slušali i o koji imaći ste slušati u okiru ovog predneta. Za kraju ostala jedna mala oblast ovde koja se zove steganog ratija, koja je strikno nema, nije neprestavda oblast šifrovane povetaka, ali jeste oblast sakrivanja sadrže neki poruke, samo na jedan drugi način. Ono je dobile ime od Grške reči steganos, znači sakriven i zaštićen i ona je podrozumeva da se određena poruka sakrije u neku drugu poruku. Ne da se sama poruka modifikuje šifroje, nego da se sakriju u neku drugu poruku. I ovde imate neke trivialne primere, imate ovde jedan malo nepismeni tekst, koji ako bi ste čitali prvo slovo u svakoj rečenici, dobilibiste ono što je zapravo ta poruka, a to je šifra. Dakle, to bi bio jednostavan način, kako bi deca mogla se igreju, slanje nekih poruka na tajni način, pomoću o ležifara, pomoću steganografije. Drugi način bi bio ovaj ovdi koji se vidi, da se recimo, oni koji komuniciraju dogovore da poruka bude tako napisana, da se čitaju samo poslednje reči u svakom redu, pa onda ako pročitate poslednje reči u svakom redu ovi poruci, a ima samo poruka kao nekog smisla, onda dobijete your package ready friday 21, room 3, please destroy this immediately. Dakle, delujemo jako neka pričica iz nekoj kriminalističkoj gili špijonskoj film. Međutim to nije zapravo način na koji se radi z teganografije, danas bo stoje brojne latito, možete vidi da ispobati, da skimete imaj ih i beslutnih, kojima se neka poruka šifruje u neku drugu poruku, a najčešći način kako se to radi, to je sakrivanje poruke u okru neke slike. I sad ja ću om kratko objasniti šta je princip, ali ovde nemo ni vremena, ni mesta da dokaju, objasnimo kako to funkcioniš, ali mislim da ćete svati na nivou, na nivou principa kako to funkcioniš. Dakle, jedna digitarna slika, možemo dozvom na jednostavni primer, dozvom o crno-belu sliku. Crno-bela slika kao bit mapa se predstavlja tako što svaki pixel ima osam bita, i tih osam bita označavaju nivo osvetljenja, odnosno njan su sive. Dakle, sa osam bita može da se opiši 256 različitih njanci osvetljenja od svakog top pixela, odnosno njanci sive, a ono što je pokazano to je da ljudko ovkojne razlikuje više od 30 do 50 njanci sive. To znači da neko može da naprojbi taj z teganografski mehanizam koji će da urobi sljedeću stvar. U određenu sliku koja je gotova i u toj slici će zadržati sve bite za svaki pixel, koji su osim onog najmanje važnog, odnosno bita koja ima vrednost 0 i 1, odnosno če je maksimala vrednost 1. I onda možete skoristi sve te bite, poslednje, bite najmanje ih značaja, za kodovanje svoj poruki. I što to u praksi znači? To u praksi znači slijedeće, recimo, ako je u originali slici vrednost osvetljenja nekog pixela bila, na primer 162, a ako hoćemo nešto da ukodujemo u taj bit, recimo, taj bit naše poruke i jedinice, onda će taj pixel u me 162 postati 163, zato što su mi naš taj bit ukucali da je jedinice. Kada nekog gleda sliku jedno i drugu, znači sliku koja ima poruke, on neće primetiti nikako razliku, zato što to ovo svjetljenje 162 i 163 ne može nikod evidi, koja razlika vizujalno ne može da se trimeti razlik. Ili, neki drugi primera koji imamo, recimo, pixel koji ima vrednost 175, a na tom nestu najmanjih bita mi hoćemo da imamo 0, onda će taj pixel imati vrednost 174, dakle razliku, ovo će se za 1. I na taj način, recimo, ako imate neku sliku koji ima, na primer, hiljadu puta hiljadu pixela, vi imate milion bita za upisivanje svoje poruke, zato može da bude dosta, možete zi čuvometnog, tačno koliko je to byte-ova, odnosno koliko je to kiloba i ta poruke koji možete da upišete u jednu crnobelu sliku. Ako govorimo, slikamo u boji, onda ako su formirane kao bit-mape, onda tu imaju još više prostora, zato što se svaki pixel opisuje sa 3 različiste boje, pa onda ako iskoristimo opet najmanje bite za upisivanje poruke, imamo više prostora, i sve strane tu je situacija još lakše, zato što, recimo, ako je svaki pixel opisam sa 3x8 bita, a to je precisno sliki od 24 bita po pixelu, 2x24 je pričo veliki broj, ljudko oko ne može da razlikuje više od mehde 3-5.000 različitih nijansi boje, prema tome ima dosta prostora da se modifikujte biti, a da se vizuerno neprimeti nikakvrase. E sad, ono što bi bilo sumljivo, to je da uzmiti da koristite bit-mape, zato što danas ja nevrem da stijekada i ko mi poslali sliku kao bit-mape, jer bit-mape ne komprimo na slika. Međutim, postoje program i koje koriste upisivanje neki poruki i u najčešćeg korišćenji komprimo, uniformate, to je JPEG, s tim što je tu princip nešto drugači, i opet i koji je JPEG, postoje, kada se izdušita diskresna kosirna transformacija i kada se izduši transformacija parametara blokova slike, postoje oni parametri koji nosi manju informaciju slici i oni mogu da se modifikuju bez neki suštinske razlike u koritetu slike. Ono što se pokazaju, to je da može da se relativno lakvu detektu iz teganografije ako bi se analizirali u bit-mapi biti najmanje težine i u komprimoje slici i ti delovi koji nosi najmanje informacija slici. Prosto uzme se statistička analiza tih biti i uči se da postoji neka pravinnost, odnosno da je neko unio neku poruku, zato se preporučuje da se taj podatak, odnosno, ta informacija koja treba da se unese u sliku, da se prvo kryptuje, da se onda kryptovano pošadje koj sliku, to je onda značno utežava nekom ko bi analiziralo tako sliku da vidi da li su tako slici navazi poruku. I jedan od načinu, kašlo možete tajno šadjate poruki nekom, to je da kada odputujete nekde, da vi najzgled šadjate sliki sa letovanje ili sa zimovanje ili z nekog grada, slikate crkve ili šta već volite da obilazite i u te sliki ubacujete razno razne tajne poruki, to je ste gonografije. I postoje kao što reko halati koji mi možete to dobrodite, po možete to da probati da se poigrate i vidite kako sama stvar funkcioniš. Dobro, ovim smo završili drugu prezentaciju koja se odnosi na simetriše algoritme, ja ću sad prekinulti deljenje ove prezentacije, ali ćemo na narodnu prezentaciju, ako imamo neko pitanje uvezi sa ovim što smo, što smo sad da pričao, iskoristite ovu priliku dok ja prebacujem prezentaciju na drugi filo. Dobro, pitanja nema ako bude bilo kasnije slobodno, pokstavite. Dolazimo do treći teme i ovo temo je modifikuvalo u odnosu na ono što smo radili prošeg godine, smo imali asimetrične algoritme podeljene izmađu predavanji i vežbi, ove godine ćemo asimetrične algoritme i jere sad ćete slušati na predavanjima, to ispada iz vežbi. Što se tiče samog programa, nema nikakve razlike, ali ima razlike u tome kada se šta sluša, zato što smo procenevili da je ovu mnogo bolji način, da se sve slušao djedno, a ne da bude razbijeno, da se ovo predavanje slušalo u ovom segmentu kursa, a da su vežbi bilo u drugom segmentu kursa između dva kolokvima za SI. E dobro, dakle, dolazimo do asimetričnih tutoglaskih algoritama. I sad naravno, prenego što krenemo u asimetričnih tutoglaskih algoritmi, želim samo da vas pocetim šta behu simetričnih algoritmi. Asimetričnih algoritmi su algoritmi koji koriste isti ključ i za šifrovanje i za dešifrovanje. Dakle, ono što bi trebalo dočekvati što će vidjeti za koje minut, to je da su asimetričnih kritoglaske algoritmi, oni algoritmi koji koriste dva različita ključa, jedan se koristi za šifrovanje, a drugi se koristi za dešifrovanje. I ovi su algoritmi predstavljaju najveću revoluciju u razvoju kriptografije u praktično od nastankovnih prvih algoritama, od nastanka Cezare veš šifre. I da se nisu pojavili ovi algoritmi, podpunosim se
 Sikurom da bi naš svet izledao mnogo drugačije, a izledao bi mnogo drugačije prvo, zato što, prvo, ne bi ste uvrata slušali ovoj predmet, zato što ne bi bilo dobro do materijala za slušanje svega toga samo da se zastimana simetrišima algoritima, a drugo naš život bi izledao drugačije zato što uopšte funkcionisani, sigurnostnih servise na internetu ne bi funkcionisano na isti način, zato što ne bi mogli se naprove automatizovan i način iz zarazmini tjučeva, onda berovatno ne bi smo ošti pričali o bilo kako je elektrodsku upravi o digitalnim dokumentima i s ličnim stvarima, zato što praktično sa simetrišim algoritimima je jako otežen da ne kažem nemoguć način da se potpiše digitalne neki dokument, da imate digitalni potpis, da stojite za neku dokumentu o digitalnom ovom. Dakle, asimetrični algoritmi su jedna, jako, jako interesantna stvar koja ima velike i mnogo interesantne primjene i ja veću sad potrošiti ove ove vreme do kraja prve u časa da vam pričamo konceptima funkcionisani asimetrišnih algoritama, a na drugom času ćemo se baviti jedni konkretni takvim algoritm, u kojem je algoritm koji se zove RSA. Dakle razvika je u tome između simetrišnih i asimetrišnih kao što rekli u tome što ovdje postoje dva ključa, ta dva ključa su u nekakvu vezi. Ja sad zašto je ovšte neko razmišlja o tome da se naprave asimetrišni algoritm. Inače, ima tu interesantno pred istorije, oni su nastali negde 70. godina. Prvi takvaj algoritm su se pojavili 76. i 77. godine, to će ti vidjeti u ovaj prezentaciji, ali, recimo, jedan od pionirate asimetrišnih fotografije to je jedan profesor iz Amerika koji se zove Ralph Merkle i slušat ćemo o nekim njegovim odkričima nešto kasnjetu okumog kursa. On je prvi i zapravo pokušao da objavi radi u zove oblasti da taj koncept asimetrišne kritografije postovi kao vali dan koncept. I njegovog pokuša i da to objavi je bio grubo odbaceno strane časopisa, gde je on to pokušao da objavi sa obrozvoženjem da je to potpuno blesavo, zašto bi nekvo ovo radi, o kada mi svi znamo da u kriptografiji mora da postoji istiki u sve dve strane. Dakle, to je nešto što absolutno nema smisla. Dakle, to se dešava i sa velikem odkričima, da velika odkričija u početku budu potpunosti odbijena i zanemare na od strane onih koji su najstručni da izvrša evaluacija od takvih pedlode. A ono što se takođe pretpostavlja, to je da već takom 60-tih godina su ove službe kao što NSA u Americi da su znala i da su radile na razvuju takvih algoritama, tako da se pretpostavlja da sam trenuta kod kriće tih algoritama nisu baš 60-tih godina. E sad zašto je neko hteo da napravi drugu vrstu algoritama, pa prosto postoje neki problemi sa simetričnim algoritmima koji su prihlično nerešivi, odnosno koji zaista predstavljaju realni problem. Prvi problem je distribucija to simetrično ključe. Ja sam se dotakal malo bio tog problema na pretvodnju predavanju, pokušao sam da vam ukražem na to da jeste problematićno kako stvoriti isti ključ sa obe strane. I sad ako razmišljamo u nekom problemu koji je relativno mali. Recimo, ovde nas ima trenutno u sobi za videokonferencijima z 30-ak, to je mali problem. Mi bi smo mogli se dogovorimo na različite načinje, kako ja vam da distribuiram taj simetričnom ključ, i mi bi smo kasnimo mogli da kryptujemo našu komunikaciju Ne treba razmišljati o takvim situacijama, zato što se se on relativno lako rešavaju i nekim offline metodama. Dakle, mogu i telefonom da vas ovim, da vam pošljajim ključ, možemo vas i nađemo, mogu da vam pošljajim poštu, ili šta već. Ono što je, o čemu treba da razmišljate, to je neki veliki servis kao što je gmail, koji svakodnevno koriste milijoni ljudi, ili desetine milijona ljudi. Faktično svakog koja ima android, on ima gmail, analog, i on svaki dan se poveže na nekih od gmail servera i proverava, sadreža, odnosno proverava, da li ima nekih mail-ova i eventualno masa ljudi uzima šalje ili prima mail-ova. E sad, kada pristupate gmail-ova, to možete isto probate iz vašeg browsera, ovo što ćete vidjeti da će vaš browser da uvradi, to je da će u gornjem lejvom uglu da vam prikaže jedan zelenik katancić, a kada vam prikaže zelenik katancić, to znači da je u pitanju http-s, znači sigurnih http, sigurnahhtttp-veza, dakle, kriptova na http-veza, u kojoj je uspostanjen, uspostanjen na kriptova na komunikaciji iznađu vašeg browsera i tog tamo mail servera. E sad, ako je uspostanjan kriptova na komunikaciji, ako znamo da se koriste simetrične algoritme, a čak možete da vidite i u kom algoritmu i reču, verovatno neka varijanta AS-a, postavlja se pitanje, ako je se tu ključ koristi. I sad, naravno, do toga, kako si zaista ginerišu danas tih ključeva, vidoći ćemo sledaće nedadje, sledaće kšetrtka, tada ćete vidjeti neki od tih algoritama, koji se koriste za razmimu ključeva. Ali da pokušamo da zamišlimo da ne ima asi medičnih algoritama, da sve što imamo su samo simetrične algoritmi, onda se postavlja pitanje, kako bi smo mi to sad izvili, kako bi smo njih izvili, kako bi ta i Google Service izvijao, da podeli 100 miliona različitih simetričnih ključeva, a kako bi omogućio da svaki i koristnik njihovog servisa ima sigurno kryptovanu vezu. Da urade tako što će da u napred podele ključ, to bi onda značilo da bi trebalo da Google ima svoju kancelariju praklično svakom gradu da su njegove koristici, pa da vi onda kao koristnik Google Servisa dođete do te kancelarije, pa da tamo se registruete, a recimo, ta je ključ u nepe formi, kao što zobijete pin za karticu, ako to je nešto što je... Mislim, verovatno da se tako koriste internet, da se tako koriste internet servis, i verovatno do danas ne bi bilo više milijardi koristnika interneta, nego par stotina ili par miliona koristika interneta, dakle bilo bi nešto što je nekonformu. Znači to nije način, kako može da se radi druga stvari, to ćemo malo opomenuti na narodnom predavanju, ako zvaniji centri za distribuciju ključeva, da je postoja neke še me pomoći semetričnih algoritama, da je sad postoji neki antitet, neka treća firma, koja drži sve te ključeve u enkryptovanom obliku i sad može da ih podeli recimo Google i vašim browseru, kada treba da se povežete na... na taj ser, na taj servis. I takva šema može da funkcioniša i može da radi, ali ono što je problem sa takom šema što ćemo videti, je to da ako postoji centar za distribuciju ključeva, da je drži sve te ključeve, a onda više ta komunikacija sušlitski nije privatna, zato što pored vas vašeg browsera i Google'og mail servera postoji neki treći antitet koji ima taj ključ, da li vi možete da verujete tom trećem antitetu, da možete da verujete nekom radniku u tom trećem antitetu, da on me će zlopu trebiti te ključeve. Dakle, to je bio jedan veliki problem. Drugi veliki problem sa semetričnim algoritmima je bio taj što semetričnih algoritmi absolutno nisu omogućavali digitano podpisivanje dokumenta. Digitano podpisati dokument znači da ste taj dokument na neki način objelažili i na neki način ste ga vezali za svebe, za svoju uvičnost. I to na taj način da ne možete kasnije da poreknete, da ste vi to digitano podpisili. Dakle, velo svično tome, kao što kada podpisujete ugovor, žvrgnete svoj podpis i smatra se da kada ste to uradili, da ste pri zdravu i svestnih pameti, da vi stojite i za tog dokument. I ako tu piše da ste se ogovezali da nekome otplatite 100.000 eur za nešto, taj će postoji moći da vas tuži i da traži od vas da napratite kogako što ste vi se bi obavezali. E da bi se tako nešto napravilo u digitalnom obliku, simetrične algoritmi nisu povoljni, zato što simetrične algoritmi po svoj prirodi ne pripadajuju jednoj osobi. Simetrične, ne algoritmi, nego simetričnih ključevi izvinjam se ne pripadajuju jednoj osobi. Simetričnih ključevi pripadajuju dvema osoba, dvema entitetima. Što znači da ako visel kažete i iskoristite taj simetričnih ključe, kažete ja kriptujem ovu poruku, ovim simetričnim ključem i ti me tvrdim da ja stojim iz-a toga, a to će potvrditi ovaj ovdje B koji ima taj isti ključ. Sutra bi ste mogli da kažete, ne, ja to nisam uradio, to je ove B uradio za mene, da će postoji mogućnost porićenja tako reakciju. I to je ono što su suštinski najveći problemi sa simetričnim algoritmima, zbog kojih je postojala potreba da se odkrije nešto nov. E dobro. Znači onda su, negde pre sad 1,45 godina se pojavili prvi algoritmi, asimetrični algoritmi i ono što ćete u literaturi videti, to je da se ta vrsta kriptografije zove ili asimetrična kriptografija ili kriptografija sa javnim ključem, ono sve publici kriptografije. Često ćete videti trošlovnu skraćinicu, pkeju i koje se odnosi na publici kriptografije i potim se misli korišćenje nekih algoritama koji rade asimetrično. E sad u okviru ove kriptografije postoje dva ključa i o ti ključe vi se zove u privatni i javni ključ. I sad ću ja malo preskočiti nekoliko slajdova, da bih vam objasnio koncept funkcionisanja, pa ćemo se vratiti na dano na ove slajdove, da bih vam objasnio koncept funkcionisanja asimetričnih algoritama, da sam mislim da će vam kroz ovaj primer biti u potpunosti jasno, kako to funkcioniša, sad ćemo da iskoristimo primer nekih iz života. Dakle ako pogledate ovakove sličice, one deluju pod...
 odpunno isto kao slike sa simetrišim algoritmima, postoji neki originalni tekst, koji je pisan, koji je plain text, koji pisan u nekom formatu koji mi razumimo, i taj tekst se dovoti na blok za enkrypciju, također na blok sa enkrypciju se dovodi ključ. E sada ono što treba ovdje da primetite, to je da se ovdje, naprimer, koristi javni ključ. Znači ovdje piše javni ključ Alice. Izlazi z toga bloka je šifrovani tekst, koji se šalje preku interneta nekom. Dakle, to je tekst koji je izmenjen na način koji određuje RS-algoritm i na način koji je određeno ovim javnim ključom. E sada dolazi se na blok za dešifrovanje, tu dolazi šifrovani tekst, i sa druge strane dolazi privatni ključ, ale i se to je neka osoba. Kada se izvrši dešifrovanje, taj šifrovani tekst je vraćen u ostavniji oblik. E sada šta je ovdje sušljina? Prvo je stvar koji treba primetite da jedina razvika izmađu simetričnih algoritama i jasimetričnih algoritama je u tome što ovdje postoje dva različita ključa. Ove ovdje javni ključ Alice i privatni ključ Alice nisu isti. Inače u literaturi, posebno američkoj se najčešse umesto toga da osoba komunicira sa osobom B, koriste se to da Alice komunicira sa nekim Bobom. Zbog toga imate novi stici Alice i Bobom. E sada koja pravila važi za simetričnu enkriptiju? Pravila koja važi za simetričnu enkriptiju su sledeće. Ako je nešto šifrovano javni ključem, to može da bude desifrovano samoprivatni ključem. Ona poruka koja je šifrovano javni ključem, ona ne može da bude desifrovano javni ključem. Ako je nešto šifrovano privatni ključem, to može da bude desifrovano samojavni ključem. Ako je nešto šifrovano privatni ključem, to ne može da bude desifrovano privatni ključem. To je ta asimetričnost koja postoji ovih algoritama, a sada ćemo kroz neke primere, pokušati da vidimo u čemu je razlika i zašto nije sve jedno kojim ključem će nešto biti šifrovano. I to je mnogo važno da razumete koja je poslice toga kada se nešto šifruje privatnim ključem, a koja je poslice toga kada se nešto šifruje javnim ključem. A prenevo što doćemo do tih primera, samo jedno mala napomjena. Jedan ključ se zove privatni. Ako se zopključ se zove privatni, to se podrazumeva da ja taj ključ čuvam i da ga nikomu ne pokazujem, zato što je to nešto što je moje. Njega treba da čuvate na sličan način, kao što čuvate na primer pin vaše kartice. Ako bi neko došlo do pin na vaše kartice, da vaše kartice mogu da je v skine pare sa račun, a to ne želite. Ovde ako bi neko uze o vaš privatni ključ, onda bi mogu da se predstavi kao vi, jer videmo da se asimetričnoj algoritmi koriste za proveru nećeg identiteta. Znači to je prva starpoj mogu da odadi. A drugu kasnije mogu da je mogu da je šifruje neke poruke poje su naminjenje vama, što je takođe nešto što ne želite. Dakle privatni ključ se čuva. Način na koji se čuva privatni ključ danas je način se tako što se čuva u obliku neke smart kartice. I recimo ako imate ličnu kartu, možda je neko od vas to i u radio, ako imate ličnu kartu koima čit, ono što postoji kao mogućnost je dodajte u MUP i da tražite od njigi da vam stave digitalni certifikat i da vam stave jadni ključ na ličnu kartu. Ime dobijate svoj i digitalni identitet. A to značite ste dobili privatni ključ, pomoću ko ga možete da nešto digitalno potpislite, pomoću ko ga može neko vas da identifikoje i da imate digitalni certifikat. A digitalni certifikat je neki equivalent vaši lični tarhit, tih mi ćemo se baviti u drugom segmentu ovo kursa, pa neću sada vas previše zamaram certifik. Ali okviru tog digitalnog certifikata postoji javni ključ. Recimo gde isto možete dokonoćiti digitalni certifikat, to je ako odete u neki, u vaš browser i odete na nekih popularnih site-ova, od znam Instagram, Facebook, Google ili šta već. I kada vam se pojevi taj katancic u gornjem lejom uglu, možete da kliknite na njega i da pokušate da razvijete te poruke koje postoje u to katancic, i ono što ćete dobiti tu to je digitalni certifikat tog servera i okviru tog digitalno certifikata servera postoji javni ključ tog servera. Dakle nam je na javnu ključa je da on bude podeljen najširvimoguće o javnosti. Recimo, ono što bi smo mogli dobrodimo, ako smo, ako sad recimo, postavimo da smo u ovom grupiju koje se nalazimo, to je da svako od nas generiše jedan par privatni javni ključ, nadavno privatni ključe već čuvamo za sebe, a javni ključ je da ja vama, svoj javni ključ ja vama podeli. Znači javni ključ se ne čuva kova tajne, ja javni ključ vama podelim, naprim. pošaljem vam mailom, da smo već disputo, ali to nije ideala način da se urodili, zato što tu postoje neki problem i neko bi mogao da zameni taj ključ, a vidjet ćemo koje su posledic, ako neko zameni taj ključ i da neki drugi ključ, koji predstavi kao demon. Ono što će se sedesiti, i to je ono što vam ove slika kaže, a to je da ja u jednom trenutku ću imati naravno svoj privatat ključ i imat ću javni ključe ve svih vas. E, ajde se da vidimo što to znači, i naravno vi svi ćete imati moji javni ključ dok će moji privatni ključ biti kod me. A da vidimo što to u prakse znači, odnosno koje su to sada nove aplikacije koje o vas i medrične tipografije prošal. Ukoliko ja uzmem i napišem neku poruku. I recimo, sad ću da uzmem primver nekoga orde od vas i nemajte da se ljutite, E, kremljiću redom, ja imam koleginica Ana Milinović, ja koleginica Ana Milinović, hoću da napišem poruku koji ću da kažem kako je kolega Andrea Ković, bio bezobrazen i nise ponašao korrekt. I uzmem, naravno to se nije desilo, nije zgodno kao primer. Znači, hoću da ogovaram treći kolego. Dobra, kolega Andrea nije strašno. Znamo da si to nije desilo. E, sad, ako bih ja to uradio i šifroval poruku svojim privatnim ključe. Dali sam uradio pametnu stvar? Šta mislite? Znači, ja hoću da koleginicijanije ogovaram kolego Andrea i to uradim tako što šifrojim svojim privatnim ključe. Dali je to pametnu stvar i zašto nije? Dakle, to nije pametno zašto, zato što ako sam nešto šifroval svojim privatnim ključe. Svako koji ima moj javnik ključ, a vi svi imate moj javnik ključ, će moći da desifruje tako poruku. Dakle, ako uzvom i šifrojam nešto privatnim ključem svojim, ja neću sakriti tajnosti poruki. Svi ćete vi moćete da pročitete tu poruku. I ako je uradim pa nekogo ogovaram i to onda šifrojam svojim privatnim ključem, to je glupo. Zato što će i taj koji je ogovaran moći da pročitete tu poruku i moće se spravati u naljutinu. Znači, ono što treba da recimo zapomptite jedno stvari, to je da ako se nešto šifroje privatnim ključem, da se na taj način ne obezbeđuje privatnosti te poruke, nego svako može već da tu poruku pročita. Ali ako se mi je nešto šifrovo privatnim ključem, i ako vi znate da sam samo ja taj koji imam taj privatnim ključem, i vi ste pročiteli tu poruku bojim javnim ključem. Šta vi možete iz toga da zaključete? Vi iz toga možete da zaključete, sam baš ja pisel tu poruku. Znači da ja stojim i zapisanja te poruke, zato što sam ja šifrovo ključem koji samo ja imam, i nikodrugi, ne postoji druga osoba koji ima taj privatnim ključem. To znači, da ako se neka poruka šifruje privatnim ključem, da se njoj ne čuva privatnost, ali ona obezbeđuje autentikaciju, tih porekla te poruke, odnosno ona govori o tome koje datu poruku napisao, odnosno koje datu poruku poslao. I to je jedna jako bitna stvar koju nemamo koci metričnih algoritma. E, s druge strane, ako uznamo sad kontra primer, i recimo koleginica Anna, može da meni ogovara kolegu Andriju, i uradi to tako što uzme i napiše nešto o njemu, i šifro je tu poruku javnim ključem koji sam ja podelio, tako poruku mogu da pročitim samo ja i ne može da je pročita kolega Andrija, način ne može da je pročita one koji ima moj javni ključ, i takva poruka ima sačuvanu privatnost. Dakle, da je ono važno stvar na koji hoću da obratite pažnje i za koji hoćete da budete svesnih toga, koje da nije sve jedno kojim ključem će se nešto pripravati, ako se to radi privatnim ključem, nije obezbeđeno tajnost poruke, svako kojima javni ključ će pročitati taku poruku, međutim, time se obezbeđuje potvrda da je potekla neka poruka. Z druge strane, ako se poruka šifruje javnim ključem, ona će imati očuvanu privatnost, zato što samo ona i koji ima privatni ključ, se moćete da je pročita. A sa druge strane, ja kada dobijem taku poruku koja je šifruvana mojim javnim ključem, ja neću moći da budem zapravo siguran da li mi je to poslala koleginica Anna ili mi je poslala kolega Bogdan. Neću moći da budem siguran zato što proste i Bogdan posledu da je moji javni ključ i on može tako istu poruku da napravi da je šifruje tim istim javnim ključem. Prima tome, to je jedna od ključnih stvari koji hoće sada da zapontiti, koji treba da zapontiti za ovaj prvi čas, ali ćemo kasnije kroz i obješnjavanje toga kako funkcioniš u sami algoritmi, ali kasnije kož pri mene i korišćenje ovih algoritama da svatimo šta su još dodatne funkcionalnosti koje ovi algoritmi pružaju. Nadam se da je na ovom nivolu.
 koncepta asimetrične kriptografije ovo jastan. E sad, ono što je pitanje, to je, naravno, u pitanju je asimetrične kriptografije koji ima dva ključa, ima javni i privatni ključ i to ste videli, e sad se postavio pitanje kako se to realizuje, na koji način realizovati ovakav algoritmi. Tu postoje neke osobine koje trebuje da imaju takve algoritmi i strpite se dnekih 20-ak minuta do drugog časa, onda ću već početi da vam pričam o tim algoritmima, kako oni funkcionišu i na koji način konkretno radi i RS algoritm, koji je ujedno i najpoznati i najčešći korišće ni asimetrične algoritme. Dakle, ono što mora da postoji, to je, naravno, da postoji taj parti učeva i ono što treba da bude u tom algoritmu relativno jednostavno, to je da se jednostavno generiši taj parti učeva. A to znači da se to radi u neku vreme koje, na primjer, ne treje satima, nego da je to nešto što se desova u vreme nima, u vreme na koje se meri u sekundama. Također da je meni kada hoću da šifrem neku poruku relativno lako, odnosno relativno brzo mogu da šifrem poruku pomoću, tako što je šifrem privatnim bilo javnim pjučem. A sa druge strane, pošto i javni pjuči s ima dostupan, znači vi imate javni pjuč. Ako bi ste želili da na neki razbihite sistem trebalo bi da dođeste do privatno pjuče. Vama je računski jako teško, znači to je jedan težak matematikirki problem, to ćemo vidjetiti na sljedećem času, da ako imate javni pjuč, dođete do privatno pjuč. Također, ako imate šifrovanu poruku i znate javni pjuč, i znate da je poruka šifrova na javnim pjučem, vama je također opet računarski, neprihvatljivo, treba vam mnogo vreme, kterim godine da biste došli do origelne poruke. E sad, kakve su to funkcie koje omogučavaju tako nešto, to ćemo vidjetiti, to su matematicka funkcija koje su zastavone na onom, na matematicka operacije, eksponenciacije i onda po modulu, nakle modularna ritmetika. A to su specificne funkcije koje su tako zvane jednostrane funkcije. To su funkcije koje imaju osobinu da se f od x izračunava relaptivno laku i kada se kaže laku, misi se u neku polinomijalno vreme. Za razdiko toga f na minus prvi od y se izračunava za jako veliko vreme. To vreme više nije polinomijalno, to vreme se propostaje eksponencijano sa rastom i sa veličinom ove poruki koje se šifroja. Za to su specificne funkcije, ono što je dodatna karakteristika koja ta funkcija treba da ima, to je da postoji tako zanete trapdoor1way funkcije koje mogu da imaju sljedeći osobini. Znači laku izračunati f od x, laku je teško izračunati f na minus prvi od y, međutim ako postoji ta parametr k neki dodatni, onda je inverzna funkcija, znači f na minus prvi, uspoznavanjim toga ka može da se izdrši za relativno brzo vreme. I to ćemo vidjeti za ovu zluči dostat traktivno, mislim da će biti mnogo bolje da vam to ispričam na konkretnom primjeru RSA algoritma, pa ćemo to vidjeti kada budemo došli u toga. E sad kakve su to funkcije? Koje su to funkcije koje se korist? Prvoje vrsta funkcije su, naravno, ove funkcije eksponenciacije po modulu i to su prve funkcije koje su nastale kao asimetrične algoritmi u okru RSA i tako zanem diff i helman algoritma. Gdje se Y, recimo ako imamo 2 na X po modulu P, izračunava kao kompleksnost je raste sa n na treći dn veličina obovoj broja P, a obrnu to ako znamo Y, a hoćemo dobijemo X, e onda je to nešto zašta ne postoje algoritm koji to može dovradi u folijne milovreme, odnosno do danas, ne ovdje stoji do 2009, do danas tako algoritm nije objev. Druga vrsta algoritama to su neki grupi definise nadelipičnim krivama i to ćemo vidjeti, imali smo plan da vam to ugacimo ovaj godini predmet, zato što su danas se to koristi malo češći nego RSA algoritm, pa ćemo vidjeti da će nam vreme dozvoliti. E sada ide prenego što idemo na pauzu samo jedan detalj, možda ste čuli, a ovaj sad više, ovo nije toliko važno, ni za samo polaganje predmuta, ali jeste važno za jedno opšte inženjske obrezovanje. Možda ste čuli da neko govorit o tako zanim postkvantnim algoritmima i o tome da kada se pojave kvantnih računara i da će onda celog kupna ova kriptografija biti neće morati, odnosno moraći da bude potpuno napravdjena nova i danas je to nešto obloz tu koja se radi veliko, da ste istraživanje. Recimo, postoji jedan algoritm, šorova algoritm se zove, koji koristio subine kvantnih računara i koji kaže, da kada se bude napravio kvantnih računara, da će korišnjen to kvantnog računara biti moguće da se izvraši faktorizacija jako velikog broja u polinom i elnom rem. E to ćemo vidjeti na stajčim času zašto na metafaktorizacija bitma, ali suštinski napad na eres algoritm je kroz faktorizaciju velikog broja. To su brojevi koji imaju na primjež 2048 bita, jako veliki brojevi. To je problem koji danas ne može da se uradi lako i imate neke brojevi, koji su ostavljeni da se faktorišu, koji imaju na primjež hiljadu bita i ostavljena je nagrad od 100.000 dolara, ako uspeći to uradite. Ako mi ste znaate kako probajte. Dakle, to nije lako uraditi. E sa taj šorova algoritm on kaže, ako imamo kvantnih računara, onda ćemo moći to uraditi u polinom i elnom rem. A onda to znači da ovi algoritmi, kako i se danas koriste, koji se zasnivaju na eksponenciaciji po modulu, da ti algoritmi više neće biti dobri i treba da se pronadžu neki novi. E sa tu se dosta radi istraživanja, to su tako zvanih post-quantnih algoritmi. Tu se koriste neke drugačije matematičke konstrukcije, neke problemi matematičkih resetki, pronaladženje nekih vektoru o tim resetkama, što su takođe teške problemi, kako bi se napravio asimetrični algoritm, ali koji je odporan na te kwantne računare. I dobro, ja ću se od ovde stati. Na prehledom času smo videli osnuni konciple asimetrične kripografije. I videli smo da ona može pored zašlite privatnosti da pruži funkcionalnosti da obezvedi, da vidite od koga neka poruka došla. Dakle, se trećno veže za identite podređene licnosti koje poslada tu poru. E sad, ako bi neko pitao zašta se koristite kripografije sa javnim piučem, onda biste se možde izdenadili, kada bih vam rekao da se ona zapravo nekoristi za obezbeđivanje tajnosti neke poruke, zato što je ona doslice sporije. Teško je uporediti različke algoritme. Postoje algoritmi, koji postoje različite vrste asimetričnih algoritma, ali recimo, ovaj algoritmi koji se zasnivaju na principu RAD-RS algoritma, oni su, ako bi smo chceli da šifrajemu isti file, istu koričinu pojetaka u ilineci dremina, trebalo bi nam negdje kojih ili duputa, u prosek kojih ili duputa više vremena, nego za šifrovanje simetričnim algoritmu. Zbog toga je ustaljena praksa da kada se podaci prenose negdje, tada se šifroju već je koji učine pojetaka, a to je recimo svaka vaša komunikacija sa neki web serverom, ili kada se podaci prebacu iznožit dve lokacije, da se to šifrovanje vrši simetričnim algoritima, a da bi smo distribujiroli ključeve, odnosno da bi smo mogućili da ti simetrični algoritm funkcionišu, onda za to koristimo asimetrične algoritme, i kod že asimetrični algoritmi mogu da se koriste za digitarno podpisivanje filova, odnosno da se utvrdi identite tonoga koja generisao određeni filo. I to ćemo najviše to korom naradno predavanje i dugu segmenta kursa, da se bavi motive kako se obezbeđuju elementarne, kažem, kritograskih mechanizmi, funkcije kritograskih algoritama i kada se koriste za različite primene. Prvi javno objevljeni rezultat nakon nesričnog Merklja, koji je pokušao da to objevi 73. godine, ja mislim pa su bi odbili, je bio rezultat Diffy i Helmana. Inoče Merklja je kasnije objavio niz radova, kao što rekla, kovi vidi ćemo ga, pomenućemo ga, to ko moho kursa nije čovek mogo bio ošličnima time, što mu nisu prihvatili taj prvi radnji za simetrične pitografije. Dakle, prvi rezultat koji javno objevljeni rezultat Diffy i Helmana i taj Diffy i Helena algoritam ćemo raditi sveće nedelje, on se koriste baš izstučiv za razmenu ključeva, a RS algoritam je na 177 godine, dakle godine danakas nije javno objevljen, i od tada je praktično standard za asimetričnu pitografiju. Esad, ono što smo rekli, ono što su karakteristike ovih sistema za asimetričnu pitografiju, to je da ako neko zna algoritama, algoritama je dobro poznati, vidite, algoritama je priječno jednostavan, znači ako neko zna algoritam, a znaga, i ako zna ključ za šifrovanje, napr. zna javnik ključ koji mi poruka šifrovana, on neće moći da je da je šifroje, odnosno obrnuto, ako neko šifrovo poruku javni ključ, mi nisam se baš predstavnog zrazivnika, ako neko šifrovo poruku javnim ključom, a neko posledu je javni ključ neće moći lakutu poruku da je šifroje. Šta sa to znači lakut, eško, to ćemo si više pozabaviti, timi u drugom delu kada budite na konkretnom RS algoritmu, videli kako funkcioniše asimetrične algoritmi. E sad, ovo su osnovne funkcije koje prulužaju asimetrične algoritmi, i tu je opet ćemo ponoviti ono sa prošlu časa, što mislim da je jako biti...
 da se još jednom kaže kako ne bi ste tu grešili. Dakle, ako se neka poruka šalje i ako se šifruje javnim ključem, a ovo je recimo jedan od načinakako se javni ključ prikazu, znači kao PUB, što znači public ki od B, ovo je ovde B, znači ova destinacija koja prijma poruku, ako se skoristi javni ključ te destinacije B, onda će takva poruka imati očuvanu tajnost, zato što ta poruka može da bude pročita na samo ovim ovde privatnim ključem. Ono što vidi kryptoanalitično napadač, ono vidi šifrovano poruk PYPSILON, ono što on zna, to je javni ključ B, dakle, to je sve nešto što je dobro poznuto, ono što je njemu teško i što ne može da uvradi koristići grubu silu rečunara, to je da dođe do poruk EX, da dođe do originele poruk EX ili da dođe do privatno ključ. Dakle, ovo je šema koja je obzbeđuje tajnost u okiru asimetrične kriptografije. Sa druge strane, ovo je šema koja je obzbeđuje to da se potvridi poreklo određene poruke, odnosno to koje je neku poruku genedisa, a to je šema u kojoj a koji se nalaze sa leve strane, ovo ovde poruku šifrov je svojim privatnim ključem, znači ključ PR od a, to je privatni ključ od a, on naravno podeli svoj javni ključ o ovom E, i beće moći da vidi sadržite poruke, ali čisto tako moći da vidi i C, i D, i E, i ostali koji takođe imaju javni ključ o da, znači to je šema koja je ne obzbeđuje tajnost poruke, ali je obzbeđuje mogućnost da se ustanovi koja je datu poruku generisa, odnosno tako zvana autentikacija, odnosno provjera toga koja generisao ovu poruku. I naša još ima se baviti tim provirama identiteta i potrđivanje koja je neko aktivnostu radiog, to ćemo vidjeti na više različnog načina, ovo je za sad ovako da svatite na nivou asimetričnih algoritama i na nivou, ovo u osnovno koncepta koje njihovo. Ako biste želili da obezbeđite oba, e onda bi ta šema trebalo da izgleda ovako, dakle šema je služenija i kao što moš da vidite se stojite od 2x trejnkripsije i 2x dekripsije, što je u zono što sam vam malo prerekao, to je da su asimetričnih algoritmi relativno spori, odnosno dosta spori od simetričnih algoritama, znači ovako šema je duplo sporia od obične šeme asimetrične kritografije. Kako bi smo obezbedili jedno i drugo? Pa tako što bi smo prvo poruku šifrovali privatnim ključem od A, znači prvo će A šifrovati poruku svojim privatnim ključem, čime će obezbedit i to da se ustanovi koja je tu poruku generiso, pa će zatim tu poruku drugi pod šifrovati javnim ključem od B, a ako je poruka šifrova na javnim ključem od B, jediniku tu poruku može da počin da deshifruje, a deshifruje se u obrnutom redu, dakle prvo mora da se deshifruje privatnim ključem od B, pa da se onda ponovod deshifruje javnim ključem od A, kako bi se došli dologim neporuke. Dakle jedini koji može da uredi prvi korak je B, to što svi ostali mogu da uredi drugi korak i da deshifruju javnim ključem od A, im ne znači zato što ne mogu da dođe do to vrlo koraka, oni ne mogu da dođe do ovde poruki Y, koja se dobija deshifrovanje privatnim ključem od B. Dakle, ova šema, ova šema ovakva sa dvostrukom inkripcijem i dvostrukom dekripcijem, ali u pravilnom redosebu korišnjenje privatnih i javnih ključeva jednog i drugog identiteta, je šema koja obezbeđuje i tajnost i proveru, po rekla, određene poruke. I to je nešto što se zapravo i želi da se postigne, a to je da kada recimo komunicirate sa Google'im web serverom, ne želite da znači da baš komunicirate sa njim, a ne da vam je neko podmetno neki phishing server koji se isto zove Google, mislim, nema ništa lakše nego prekopirati u potpunosti design web stranice, i da vam umesto stvarno Google'og servera podmetne svoj server ili svoj, napr. Gmail server i onda vam kaže, e sada se ulogo i ti uputete username i password i u stvari ga date na padaču. Dakle, ne želite to da se desi. Zato vam je bitno i da proverite da u browseru imate onika tančić koji znači da se ti povezali baš na taj server koji posleduje taj domen i koji jeste zašto si izde. Ali o tom potom, dakle, kada budemo došli do web sigurnosti, onda ćemo se pozaboviti malo više tipa. I to smo već rekli, dakle, vidjet ćemo, čim se bavi public i kriptografije, odasno, asimatršan kriptografije. Sleđeće tema u okviru kursa je najpoznatiji i najčečji korišćen i asimatričnj algoritm, to je tako zvanji RSA algoritm. Tada ćemo vidjeti kako on funkcioniše. Njegu funkcioniše nije pretrebno složeno. Zasnima se na matematičke operacije i od izvenjenje brojara na eksponent i onda deljenja i izračunavanje ostatka previ pom tog deljenja. Viđutno da bi smo objasnjeni kako funkcioniše RSA algoritm, preto oga treba da se malo pocitimo nekih osnova iz matematike. I to su neke osnovae, o kojima ste slušali na prvom terminu vežbi, tako da pogledaš jednu tu presentaciju i poslušati ještje taj video s njimak. A pre svega treba da se pocitimo ojlerove teorene. Ojlerove teorema kaže da za svaka dva uzajavno proste broja A i n, a uzajavno prosti brojevi su oni koji nemoji zajednih skviderivac i osimnih divinice. Dakle, jedinica je najvići zajednih skviderivac. Dakle, da za svaka dva uzajavno proste broja A i n važi da A na F i od nje kongroentno sa 1 pomodulojen. A ovo znači da ako bih smo A na F i od n podeli li sa n, dobro li bih smo neki ceo broj i ostatak i 1. E seče to je F i od n, F i od n je tako zvana ojlerove funcija. I ojlerove funkcija, ali da imate načina koji se oni začunala, ono ima vrednost N-1 u koliko je n prost broj. Znači za broj 17 koji je prost, vrednost ojlerove funkcija je 16. A ako broj nije prost, kao na primjer broj 15, onda vrednost ojlerove funkcije može da se iskaža na ovaj način kao P-1 x Q-1 u koliko je taj složen broj se sestoi, odnosno može se prikaže kao proizmet dva proste broje. Da tako na primjer broj 15, možemo da prikažemo kao proizmet brojeva 3 i 5, pričemu je P3, AQ je 5, pa 3-1 x 5-1 naravno u zagradama to je 8 i to je vrednost ojlerove funkcija. Ojlerove funkcija može da se izračuna za svaki cej obbroj i ona nam je značajna, vidićemo iz kog razloga, nam je značajna za RSA algorit. Esat ovde u trećim pulitu imamo jednu pomoćnu promeljivu zet koja treba da nam pokaže jednu svojstvo koje proističe iz ojlerove funkcije. Celo broj zet možemo da prikažemo kao neko Q plus k puta phi-1 da je k ceobroj, a i Q je naravno ceobroj, da će o celobrojne aritmetici, pričemu je ovo Q manj od phi od n, i sada ukoliko bi smo broj zet chteli da podelimo sa phi-1, dobili bi smo celobrojnu vrednost k i dobili bi smo ostatak Q. Odnosno u ovoj modularnih matematici može da se napiše kako je z konkurentno sa Q po modulu phi-1, odnosno da prevedemo to u neki možda, ujazik koji je bliži našem prirodnom ljaziku, ukoliko zet delimo sa phi-1 dobit ćemo ostatak Q. Sada puzmemo broj a i ovo a na z prikažemo u razvijenom obliku, uzimajići da je z jedna po Q plus k phi-1 i to ubacimo ovde, pa onda ovo sbiranje stepe na prikažemo na ovaj ovde sljedeći način. I ako takođe znamo da a na phi-1 a a na k phi-1 to je ka puta a na phi-1, da a na phi-1 daje ostatak 1 po modulu n, onda ovo z po modulu n daje ostatak a na q. Znači ovde imamo dve dnačine, jedno koje se nalazi u predhodnom bulitu, to je ovde koje pokazuje vezu između z pu i ojlerove funkcije i dole imamo vezu između brojeva z pu i broja n, a gore imamo ojlerove funkciju dnečne. A od zetnogurentno sa a na q po modulu n, odnosno ako a na z podelim sa n dobit ćemo ostatak a na q, od isto tako važi funkcije da ako z podelim sa phi-1 dobit ćemo ostatak q. I ovaj označi ovde se jedinicom, a vidite, videmo od narodnih slajdova, će se ta jedinica pozvaćemo se na tu jedinicu, ujad ću se vratiti na ovaj slajdoj kontrolentnik, pa ćemo vidjeti zašto nam je ovo značaj, zapravo kako se koristi ovo ode i načina da bi mogao eres algoritm da funkcioniš. E sad kao što reko, eres algoritm je nastvo 70 godina, tačnije 77 godine na imaj tih odstranen rive Strasamjeva i Adelmana, plus prij autora, oni su patentirali eres algoritm, pa i patentirali ste, kao mislim da je patniti bilo dan 20 ili 25 godine, znači nekog stvom 90 godina eres algoritm biš nije patent, i slobodno može da se koristi bez ikljopu plaćenja nekih autorstvih prava ovi trojici autora, mežu ti, u ovrih su tu činim, su napravili prvi najzdačajni, ovakav algoritm, jako dobri izporistili i zaradili su velike pare i osmali su firma koja se zove eresa, koja se bavi na...
 kriptografijom i ima različite software-ske proizvode iz obosticiju durnosti. A između ostalo gviđećemo, pomenićemo, ješ jednom kada vam budem pričao o tom takuzvanom RSA-chelenju koji je napravljeno da gde se nude previšno velike pare za faktorizaciju nekih brojeva, odnosno kako bi neko uspjevo da pronađe od koji zadriđenih broji, kojih je broj, prostih brojeva da je broj proizvode. Ali o tom potom kada dođemo do RSA-algoritmu kada budete svati li značiti z toga zašto je to bitno određiti. E sad, RSA-algoritm je blok algoritm u kome se origini podaci šifrovani celih brojevi između 0 i 1 minus 1 za neko n. E sad, tipična vredna za to n je da je n broj koji ima 2408 bita. Znači ti blokowi danas kada govorimo o šifrovani koji se koristi i u okviru komunikacije između web servera i vaša web browsera koristi se veližina ovog jednodula tako da ima 2408 bita, odnosno da je to broj koji je 12.148. Sam algoritm je jednostavno svatiti, znači on izgledo ovako i ovako je zapisetan formulo što se šifrovanje tiče to je ovaj ovdje red. Ako uznamo neku poruku i izdelimo joj u blokove i jedan taj blok prikaže moj kao m. To m treba da podignemo neki eksponent e i da izračunemo one ostate koji se dobija kada se ove broje m na e podeli sa n i ta ostate koji se dobije će biti šifrova na vrednost tog bloka m. Znači svaki blok u neku porubci na njega će biti primjenja na ova matematicka operacije. Sa druge strane da bi se dešifrovala ta šifrova na poruka ona treba da se podignena neki broj d i to ćemo vidjeti kak su ti broje vide i je, kako je oslodovanje moraju da zanolje. Zatim se taj broj podeli sa n, izračuna se ostatak i ostatak bi trebalo da bude ovo m. E sad u opštom slučaju naravno to ne mogu da budu dva proizvimna a da ćemo vidjeti kako je m na e i d, na koje ćemo dizati ovo m i c, nego ti brojevi moraju da budu u nekakvog vezi. Sa ćemo vidjeti kako je ta veza, s jedne strane, a z drugi strane vidjet ćemo koja je to jednakost koji treba da zadovolje ovi brojevi m i n. Ako znamo ovo c, pa sad izove odve jedna všina prikaže moj kao m na e po modulu n, pa ga podignemo na d po modulu n. Ono što zapravo treba da se desi, to je da ovo m na e d po modulu n, treba da da ostate kam, odnosno da m i m na e d budu konkurentni po modulu n. E sad da bi se ovo ispunilo, sad ću se ja vratiti na ove prethodni slide, način imamo ovej uslov, da m i m na e d po modulu n treba da budu konkurentni, pak u bi smo sad ovo m napisali kao m na prvi, a ovo m na e d ostaje m na e d i pogledamo ovo u ovde jednačinu broji 1, to je ovo ovde jednačina, onda možemo da kažemo recimo da je z broj z e d, a da je broj q jedinica, pa zapravo možemo da kažemo da ona i uslov koji nam, izinjamo se odnosno obrnutu, recimo možemo da kažemo da je e d q, a da je z jedinica, ona i uslov koji nam sledi ako važi ovakva jednakost, to je ovo ovde, odnosno ako kao sto rekla ka ovo e d je q, a z je jedan, onda bi trebalo da važi ovakva jednakost, to je da je jedan konkurentno sa e d po modulu phi o d, odnosno, veza između brojeva e i d je na ovej način određena, a ovo znači da su brojevi e i d među sobno tako zvanim multiplikativni inverzi za operaciju noženja po modulu phi o d, i to je ona i uslov koji brojevi e i d moraju da ispune, i to je uslov koji utiče na to na koji način će ti brojevi biti kasnije određen. Znači videli ste kako izveda operacija šifrovanja, kako izveda operacija desifrovanja, dakle operacija je prelično prosta, naravno je šuvak vas, deraotno ni sam uvedio da ovo funkcioniše da su ove dve operacije inversne po donim uslovom, ali pokazuš vam neki primere pa ćete vidjeti da to zaista jeste tako. E sad na pretvom časom smo pričali u tome da je ovo tako zvan asimetriša inkripsija i ono što sad bi očekvati, to je da ove postoji neki privatan djuč i da postoji neki jadni ključ. Šta je privatni, a šta je jadni ključ? Ovdje smo predpostavili da je ovo operacija šifrovanja u kojoj hoćemo da bezgledimo tajnost, ako hoćemo da bezgledimo tajnost, onda znači da poruku treba da šifrojamo javni ključ. U tom slučaju ovu ovdje e i ovaj broj n, znači broj n je očegledno da mora da bude poznit na objestranji i to je broj koji nije tajni broj, znači taj broj e i broj n čine javni ključ, a sa druge strane zvrši d šifrovanje, onda ovaj broj d i broj n čine tako zvanji privatni ključ. I kao što vidite tu postoji jedan element, to je ovdje broj n, koji je pozniti jednoj i drugi strani i sad ono što je svojstvo ovog eresa algoritma, to je da onaj ko poznaje broj n, da je njemu teško i poznaje, naprimer poznaje javni ključ, pošto je to nešto što se javno deli, ono je koji poznaje brojeve e i n, njemu je računerski teško da odredi broj d i vidite ćemo na koji način može daći do broja d, samo da još malo ovi proanaliziramo kako funkcioniša sam algoritam. I takođe ako napadač sad ovaj ove primer kada imamo dvoje koji su obavod posledu javni ključ i sad jedna osoba šifro je tekst javnim ključem, na primer ovaj ovde uradi ovde operaciju, imamo drugu osobu koja je takođe posleduje e i n, to je drugo je osoba je teško da ako pozna računerski teško, odnosno računerski neprihvatljivo, da ako posleduje kođe javni ključ, odnosno parovi brojeva e i n i vidi šifrovani tekst, njemu je računerski teško odnosno neprihvatljivo da dođi do originu neporuke n. E dobro. Dakle, ono što je uslo koji moraju da zadovolje brojevi e i d, to je ono što smo malo preizanalizirali, odnosno da brojevi e i d moraju da budu multiplikativni verzi jedan drugom za operaciju moženja po modulu u fio i od n, po ovoj ojlerove funkciji za onaj broji n. Obitno se uzme da je broj e, neki proz broji, določesto se uzima vrlo u 1,62,357, vidićemno malo kasnije zašto, a onda se nakon toga određu i je broju d, tako da je on multiplikativni i verzanu odnosnu na e po modulu fio i od n. E sad što ovo praklično znači sad ćemo vidjeti na narjednom slajdu, ove možemo da iskažemo kako izlega sad kompletna operacija i kako izlega resa algorita. Prva stvar koje treba da se uredi, to je da se zaberu dva velika prostatajna broja, to su brojevi p i k. U n se formira kao proizvoda ova dva velika prostatajna broja. Sad tu postoje neke reči, jasno što je prost broj, ono što nije jasno što znači veliki prost broj. Veliki prost broj, znači da je to broj koji je danas neprihvatljivo, odnosno teško faktori sa ti. E sad vidjet ćemo, mislim da to nećemo stići danas dobrodima, neko ćemo morati narednje nededje, vidjet ćemo da postoje taj RSH Challenge u stavu RSH Lab, stala i koja nagrađuje one ljude koji uspiju da faktorišu velike brojeve sa značim svotama novca koji su na primjer 50,000 dolara, nije mala nagrada za ono da je koto ušpe. I najvići broj koji je do sada faktorišan, za koji je neko pokupio nagradu, je broj koji ima nešto preko 8, stajam, mislim 829 bita. To znači da ako bi smo uzeli dva velika prostatajna broja koji imaju 1024 bita, možemo da kažemo da su to brojevi koji bezbedni, odnosno koje danas ne može niko sa ovim stanjem i posledovanjem računerskih alata i broja procesora da ne može lako da ih faktoriš. E sad još kad pomlužimo tako dva broja, da obićimo broj n koji kažem danas treba da ima 2400 bita, faktorizacija takog broje je tješka. E sad zašto je bitno da obi broj u 5,5 budu tajni, adnostno ti broj u 5,5 ostaju samo ko do noga po posledu, je privatnik uč, pa zato što nog noga se dobija n, ali opet sa druge strane onaj ko zna brojeve p i q, on može da odredi ojlorovo funkciju, zato što ojlorovo funkcije za broje n to smo videli na prvom slajdu, ojlorovo funkcije je jednak p-1 puta q-1. E sad ako neko zna brojeve p i q, onda može da odredi f i od n, to je ovo p-1 puta q-1 i ako zna broj e, a broj e je javni, del o javno ključa, onda može da odredi broj d učiniti, da je to multiplikativni inverzo odnosno na ovo f i o d. Znači, jedan od ključnih svojistava, er je sa agoditom koje čini njega da bude dah tako žem neprobojen, je to da je na padaču koji vidi broje n, teško da fakturiše, ne da fakturiše, neko da faktoriše taj broj, odredi od kojih prostih brojela se on sastoji.
 i da samim tim teško može da dođe dojedno, na funcije samim tim ne može da dođe do brojede. Dakle, na tome počiva jedan od ključnih mechanizama sigurnosti RS-algoritm. E dobro, bakle, ovo je sad formalno opisan o kako izgleda RS-algoritm, a ja mislim da najbolje, jedan primjer može da pokaže kako sam algoritm radi, na ovom primjeru imamo male brojeve i naravno ovo nezadowoljevao na nek triterim, koji se me malo prepomenuo da treba da se odrde PQ kao veliki proste brojevi. Očegredno do brojevi PQ koji su 17 i 11 ovo slučaju nisu veliki, neko će da ovo su brojevi koji su relativno mali. Prema tome broj n je P pu taku, to je broj 187, i taj broj će biti deo javno ključa. Zatim pošto znamo brojevi P i pu određemo F i 11 kao 5-7-2-7, to je broj 160. Onda se bira broj E koji nije broj koji deli broj 160, i recimo uzbi se vrednost 7, dakle ovo je primjer je potom atrivijalan. I sad je potrebno naravno primjer iz knjige pa su stvari podešene da budu jednostavno i da možete lako da ih proverite, može da bude problematićno u nekim situacijama da vidite odmah koji su brojevi E i D. Da, neba što baš ovak odcigledan. Dakle, ovo je primjer izgodn, zato što ako imamo broj 7, trebalo bi dobrodnimo multiplikativni vers po modulu F i 11, odnosno po modulu 160. Odnosno trebalo bi da nađemo neki broj, kada pomnožimo E i D, da običemo takav broj koji podedjen sem 160, da je ostata kjede. I baš izgodno da 23 x 7 daju rezultat 161, pa to 161 podedjen na 160, daju rezultat 1 i, znači, ovo nije odbide ste ovaj greška u slajdu, daju rezultat 1 i ostata kjede. Prema tome, iz ovoga ako smo odredili E i N, to je javni ključ 7 x 8, 7 x 7, ako smo odredili D i N, onda imamo tajne ključe, privatne ključe, to je 23 x 8. E, sad mi smo dobili neki brojeve, ali ja verjam da vi ušvek niste ubeđeni da to radi. Ono što treba da vidimo, to je ovaj algoritm zaista radi. I to možemo da vidimo na ovom slajdu, ovo možete da isprobate sam i koričinjem kalkulatora. Tako ovo može da su uvradi na digital, ali može da su uvradi i na onom windows ovom kalkulatoru i nije loše moh da pogledajte i da se uvrite da je ovo zaista tako. Tako je, pretpostavit ćemo, recimo da počinimo da pošanjemo jedan karakter, nekog osnovnog teksta, taj karakter ima na 3x broj 88, to je možda nekazki vrednost, ja ne znam i šta bi bio, taj karakter nije pretreno nibitno. U svakom slučaju taj karakter kada se šifruje, njegu o vrednost se podigne na E, pa to 88 x 7 treba da se podeli na 187 i ono što će dobiti, to je ostatak i danes u takvom deljenju. Ove oregijelni tekst će biti poslat preko nekog kanala, da je postoji potencijne napadače koji bi želimo da vidi sadržaj toga i taj karakter će biti šifrovan u broj 11. Naravno možda je probate za neki drugi karakter na koji način će on biti šifro. Esavda, u svuprokom smeru se ovdje koristi vrednost D, to je ovu 23, dakle taj šifrovani tekst 11 treba podići na 23, opet podeliti istim brojem 187 i odrediti ostatak, u ovom slučaju ostatak je 88 i to je ovo je ostavno tekst koji smo poslali. Dakle, ovo je jednostavno primjer, bi trebalo da vas uveri da zaista ova operacija jesti imbezna, odnosno da inkripsija i dekripsija na kraju će dati isti origimelni tekst, a da ovom preilikom, možete da vidite da se predlikom inkripsije i predlikom dekripsije koriste različiti brojevi, odnosno da imamo dva različita ključa, što je ostavno svojisto asimetričnih kripevacijih algoritama. Na ovom ovde slajdu imamo još jedan primjer, koji je malko stoženji, ali nije pretreno složen. Ono što u ovom primjeru imamo, to je primjer šifrovanje jedne rečenice, koja kaže, how are you, ima znak pitanja, a ovom preilikom određeni su neki drugi brojevi, određeni broj n kao 73 x 151, opet s projezut dva proste broja, pa ako je to n, onda imamo da je fi od n 10.800, a to je 72 x 150, i određeni broj e da bude neki prost broj koji nedeli to 10.800, možete to je broj 11, a onda njegov multiplikativnih inverzija određeni da bude 5.891. I sad imamo potpunost ispremljen matematički aparat, da tako kažem za šifrovanje ovog teksta. E sad pošto nam je n imam rednosti danes 1023, a pošto nam je ovde svako slovo kodovano kao 1,2 cifrene te broj, ono što je ovde odebrano, to je da se napravi takav blok, da se u bloku šifruji po dva slova, imamo slovo h ima oznaku 33, slovo o ima oznaku 14, tako da će prvi blok koji će biti šifruvanja, biti ovo vrednost 3314. Pa onda nakon toga dublve ima vrednost 22, pa onda ovoj space ima vrednost 62, tako da će druga reču koja će biti šifruvanja, ono su drugi, drugi taj blok koji će biti šifruvanja, ima vrednost B1262. I sad možete da probati da idete tako blok po blok, i ovde imate tačnu prikazanu operaciju, na koji način se šifruje svake dobi blokova, dakle prvi blok je 3314 na 11, to je ovo ovde E, po modulu 11.023. Odnosno dobićete taj 3314 na 11, i podeliti sa 11.023, i dobićete vrlo i 10.260 kao ostate u toj deobi. Dakle prvi blok će biti šifruvan, i njegu o vrednost će biti 10.260. I tako svaki sledeći blok. I sad kada dođemo do inverzne operacije, u koje hoćemo da vratimo sada te blokove u orignalni oblik, odnosno u plain text, onda treba ovaj prvi šifronik blok, čijeg je vrednost 10.060, da podiginimo na D, to je 5.891, i da urodimo opet, da to podelimo se 11.023, odnosno da na taj način dobijemo statak 3314 i da dobijemo dešifruvanje tekst. Dakle mislim da sama operacija algoritma, da kada je pogleda ova kod ona stvarno nije teško, i da možete da razumete kako radi i re sa algoritam, ali ovdje ima jednu druga stvarna, koji hoće da vam ukazim, a to je da u ovde, u kod operacije dešifruvanja, se obziru na to da je broj D, 5.891, a to nije baš malih broji, imamo jednu operaciju, koja je broj 10.060, dižemo na 5.891. Ako osmete i probate to da urodite u vašem kalkulatoru na Windowsu, on to neće uroditi, on će napisiti neke Overflow ili će da napisati neku rastodreške, zaprašta je prosto taj broj veliki prevazilaz i ono što taj kalkulator može da uroditi. E sad, s jedne strane, ovde ne radimo sa pretrenu veliki broj, imamo način najvećih broj, koji je ovde, sa kojima ovdje manikulišemo i ovaj broj 11.023. A rekli smo da broj, N, zapravo je broj koji ima 2048 bito, dakle to je ogromant broj. E onda možete da zamislite kakvo operacije mogu da si dese prilikom izračunavanja ovih eksponenata i prilikom deljenja, dakle to su povećno stožene matematičke operacije, za koje su potrebne posebne bibliotekle, koje se koriste biblioteki za veliki brojeve, u kojima je odrađeno na koji način može da se izvrši noženje odnosno sabiranje i da se dobio lakar rezultat. Međutim, korišnije tako i biblioteki, korišnije tako veliki brojeva i korišnije veliki brojev noženja je nešto što je sporo i nešto što usporava rad ovih algoritma. E, istog razloga ovi algoritmi su dosta spori od simetračnih algoritma i istog razloga je ono što sam ovdje kvoj danas način na koji se koriste algoritmi je taj da se kada treba šifrova i nekoveću kojičin u potaka koriste simetračnih algoritmi a da u koliko treba da se izvrši šifrovanje manjih kojičin u potaka za potrebi razmjenje ključeva, za potreba identifikacije nečije, onda se koriste asimetračnih algoritmi. Ali vatom potom kada budemo došli do konkretnih primena vidjećemo na koji način se koriste ove algoritmi, ali bi ovaj primjer ovde na ovom slajdu treba ugdavan bude ilustrativan i da vam ukraže na kompleksnost operacije šifrovanje, odnosno dešifrovanje, dešifrovanje kada se radi sa jako velikim brojevim. Takođe i jedna stvar kada budemo pričali o napadima naove algoritme koji će vam pomeniti recimo ovde biste mogli da pretpostavite da operacije šifrovanja i dešifrovanja neće traja tiba šista zato što kod šifrovanja postoji dizinje na 11 ako dešifrovanja dizinje na 5.000 os. ilesijan. Viće da leko veći broji operacije množenje kod dešifrovanja i na osnovu toga bi neki napadač mogu da pretpostavi kakva je vrednost ovog eksponenta. Ali o tom potom kada budemo došli do konkretnih napada na ove algoritme.
 E sad, ako bi smo vam i dalje zadatak, a da ćemo onderovatno takav zadatak da dobijete neki trivetni iliadni ključ i da treba da šifruje te odnosno deškvate od rizini poruku koja šifruva na RS algorithmom, i recimo u takom broju bi dobijete u takom nekog zadatku bi dobijete recimo da je broj E, 5.891, broj D, 5.891 kao pretudnjem primjeru, i onda po sto godjete i žalite se nekome kako su nastavnici ludi, zato što smo dadali nešto što ne može nindigitronom da si izračuno, a kakamoli da si izračuno ručno u realnom vrijemu. E sad stvari nisu baš tako crne, zato što ako neko treba da digne neki broj na 5.891, on neće napraviti 5.890 noženja, on neće toliko puta pomnožiti ove broj sa samim sobom. Već postoje način i kako ovo može da se ubrze, a ubrzanje može da se izvrši za hvaljeneći slajedži u činicima. A čekajmo imamo neki broj A koji dizemo na broj P o modul N, to može da se prikražemo sljedeći način, da se razbije, da tako kažemo sljedeći način, može da se razbije nad više različitih dizanja na eksponente od P1 do Pk o modul N, pa sveta po modul N, tako da je P1 plus P2 do Pk. Opet, ovo može da te loje obstraktno i može da nije baš jasno do kraja kako ovo pomaže, pošto deluje jovo dosta komplikovo, no pa mislim da će ovoj donji primer da vam jasno ukraženo ako šta je vasno na ideje. Dakle ako imamo 88 na 7, kao za vatak vi treba dobrodimo, jedna strategija je naravno da uzimamo 7 puta, način 88 pa 7 puta da ga pomožimo s sajim u sobom, da to podelim sa 180 i dobimo statu. 88 na 7 je priješno veliki broj i to bi bilo nezgodno da vam damo da ruču pravite, međutim vi možete budete tu malo mudri i da se snađete na malo bolji način. E to 88 na 7 možemo da prikažemo kao 88 na 4 puta 88 na 2 puta 88 na prvi, sve to po modulu 187 i po modulu 187 zašto za to što je 1 plus za 1,5 še 3 jednako 7. E sad na koji način ovo pomaže? Pa prvo 88 na prvi po modulu 187 je 88 podeljeno o 187, to je celobroj na vednost nula, ostatak je 88, dakle to je, tu nema nikakve diljeme, to ne mora čakni da si izračun. Onda, 88 na kvadrat, se to mora da si izračun, 88 na kvadrat je broj 7.144, to podarimo na 187, dobit ćemo neki broj i ostatak 77. E sad, ako hoćemo da izračunamo 88 na 4, tu postoje dve opcije, naravno to je da 88 na kvadrat, odnosno ovih 77.144 podignemo na kvadrat, pa ćemo da dobimo neki prižno veliki broj, da to delimo 187, međutim to ne moramo dobrodimo, nego možemo ovaj ovdje rezultat koji smo dobili od 88 na kvadrat, da njega podignemo na kvadrat, da dobimo broj koji je 5.929, znači koja je daleko manji od onoga što bi bilo da smo dizali 188 na 4-ti, da to podelimo sa 187 i da dobimo 132. I tu smo završili sve, da to što slijedeći korake, da se ovaj 88 na prvi pomluži sa 88 na kvadrat i da se to pomluži sa 88 na 4-ti, da se dobije ovaj broj, podelimo na 187 i dobije ostatak 11. Dakle, kao što vidite, može da se naprevi takva tepsura, odnosno može da se naprevi takava algorita, u kome ne morate da vršite operacije nad jako velikim brojvima. I to je ono što se takođe koristi pri likom računskog pričviku izrečunavanja, odnosno šifrovanje, desifrovanja poruka na računaru. Dakle, neće se raditi sa jako velikim brojvima, znači to prosto nije racijona strategija, nego će se izršiti ovako racijonalizacija tog izrečunavanja. Postoji jedan algoritem ovde koji može da vam pokaže, na koji način može dodatno da se ubrzva izrečunavanje ovih ostataka koji su nam potrebni za eresa operaciju. I ta algoritem je da ovde je loki rogu bloka, neću vas terati da ga naučite, ali ću vam ukazati me neke bitne elemente ovog algoritma. Esad, on počiva na onom, mešto vam je napisano, gore na ovom slajdu. A to je da, ako imamo neki broj A na B, i ako taj broj B prikažemo u binarnom obliku, onda to A na B po modulu M može da se prikaže ovako. Znači taj broj B je suma od 2 na I za one vrednosti bita B koje su različite od nule. Znači tamo da je prosto, ovo je razvoju nekog broje u binarnom obliku, samo je zapisano ovako na tematičke, ne bi treba odavom, ovo nije jasno. E onda u takve situacije A na B je zapravo proizvod od A na 2 I za one vrednosti I, kod kojih je određeni bit u broju B jednake jedinici. Znači oni tamo da ne su nule, se neće uzeti u obziru. I onda, naravno, ovo može da se napiše u ovom obliku taj A na B po modulu M. Znači na ovaj način može da se pomogne predliku pisanja toga kak u izledu ovaj kronenciaciji po modulu. A zašto nam je bitan ovaj binarni razvoj? Pa taj binar ne razvoj, nam je bitan zato što svaki bit kojih jedinica u tom broju B u tom eksponentu je u svariji situacije u koju mora da se vrši dodatni nožin. Jako pograjajte ovaj ovdje algoritm, ovdje u svakom koraku mora da se izvrši jednom noženje po modulu N, ali mora da se izvrši jedno dodatno noženje ako je it bit toga B jednake jedinicima. Onda u tom stručaju imamo još jednu eksponenciacijatu, još jednom noženje i delinje po modulu. Ovo znači, i to je razlog vidićemo na naravnom slajdu, da broj koji se često uzima kao javni broj za šifrovanje, one broj E, se uzima da bude 6, 5, 3, 7, zato što taj broj se sastoji od jedinice, 15, 0 i onda još jedni jedinice. Što znači, da će takav broj ako ima 17 bita, dati ukupno, ako se nevrlo možda mislim da ima 17 bita, dati ukupno samo dva dodatni noženja i ako ima 17 bita. Naravno mogu bi da bude i neki drugi broj koji ima 17 bita koji je takođe, na primir prosti, koji odbovaraju se dovoljava kriterija u mere sa algoritma, ali takav broj bi onda imao veći broj noženja u sebi i usporavo ob je algoritma. E sad kako taj algoritm radi, doćemo vidjeti na jednom primiru na naravnom času, možete da probate da ispratite ovaj algoritm ovde, a postoje dve vrednosti, to su vrednosti C i F koja se inicijali u vrednosti 0 i na 1, i onda ispratite ovaj algoritm, broj K je broj bita u tom broju B, minus 1, jer to možete da vidite ovde, broj B je 560, on je ovdje prikazan sa 10 bita, ali se uzima broj bita u B minus 1, zato što se broj do 0 do nutog stepena, tako da se ide praktično od 9 do 0, a ne od 10 do 1. Na kraju, ako ispratite ovaj algoritm, prebro bi da se dobije ostatak 1, tako da je to je rezultat ovog algoritma, i to je način, kako brzo može da se izračuna eksponenciacija i deljenje po modu. Što si tiče, efikastnosti, dakle, algoritmu to sam rekao, zašto je ovo čest izbor? Postoje izbori kao što su brojivi 3 i 17, ali su oni mali, i onda je algoritm može da bude ranjeve neke napade kurišnjem kineske teoreme ostacima, nećemo ulaziti te detalje, to je prosto ipak ovih brojevi, da je treba da budu dovoljne veliki, da bi algoritm bio siguren. E sada samo završit ćemo sa ovim par napomena, dakle, ono što znamo, kada se generišu ključevi, to je da to moraju da budu 2 proste broja pq, da treba da se izabere ili e, ili d i da se izraču na drugi. Ono što je možda nekromo mogli da bude nelogično u ovom izlaganju, to je, recimo, jedna stvar, odnosno par stvari koje sam ja rekao. S jedna strana rekao sam da treba da izaberemo brojeve pq, tako da imaju na primer 1024 bita i da budu prosti, i to trihvati li zdravu za gotovo, i sam također rekao da jedan od najvićih brojeva koji je do danas faktori, sam ima 829 bita. A to znači da broj koji ima 1024 bita ne može da bude faktori, sam odnosno praklično znači da mi, odnosno može, ali je potrebno jako mnog vremena, a to praklično znači da mi danas ne može da budemo 100% sigurni kada vidimo neki broj p, da li on zaista prost. Ono što može da se uvradi i što se koristi kada se određuju broj pq, koristi se Mila Rabinova algoritmo koji ste takođe slušali, uopir u prvih vežbi. I ta Mila Rabinova algoritm govori da je neki broj prost sa određenom brojovatnoćem. To znači da ta je broj Mila Rabinova algoritm slično kao i test koji za korit. Može da bude, može da kaže da je broj prost, da on zaista nije prost, znači ne može da budemo 100% sigurni, postoje neki dodatni testov i da to su neki tako zvanice ofišar men brojevi kojima se još povećeva, tako da je određen broj prost.
 nije pretrenosložen, zato što rezultati iz teorije brojeva kažu, ako imamo neki broj n koji je prost. Da su ti brojevi raspodiljeni, tako da je razma između njih, prosječno, nekde prirudni logaritam od n. Pa recimo ako imamo broj koji ima 2.000, na primer, ako je to prozmelo ka u ovom primjeru koji je 2.200 tip. Prirodni logaritam od 2.200, to je 200 puta prirodni logaritam u 2, to je negde oko 140. Znači ako imamo broj n, prvi narjedni prirudni broj će biti tu negde na plus-minus 140 mesta od njega. Naravno nije uvek pravilo će biti 140, ali tu je negde. Znači to je neka prosječna remesa. Što to znači? To znači da je biti taj mehanizam za određivanje brojeva, te i po bio sledići. Uzmise neki neparam broj, znači proste brojevi prosto osim brojeva, 2 moraju da budu neparni, uzmise neki neparam broj, primjeni se mila rabinov logaritam, pak on kaže da taj broj i verovatno nije prost, onda se poveće za 2, znači da se na narjedni neparam broj. I teri da se sredak se ne dođe do neku broja koji će zadovoljiti mila rabinov logaritam. Dakle, kažem, ako su ovo brojevi koji su redava rečine 12, i ako je taj razmak negde oko 140 mesta, pošto nećemo raditi parne brojevi u ovom procesu pronaleženja prostih brojeva, onda će biti u prosjeku negde oko 70 pokuša, je potrebno da se pronođe tako brojevi. Što nije trašno veliki broj za izrašavanje mila rabinov logarit, mi postoje neki način, kako on može da se brzo provere, da se brzo proveri delibost sa nekim malim brojevima i tako, daji, tako, daji. Rako ručaju, taj proces jeste računoski intensivan, ali nije nešto što sa traje danima da se odredi park ljuchela. A drugo, ono što je bitno, to je da taj park ljuchela se odredi jednom i odredi se pre, bilo kakve komunikacije, nemenja se tako baš često. E sa druga stvar je, ako smo odredili e, recimo kao najbroj 6, 5, 3, 7, onda treba odrediti d, određivanje d se radi tako što se koristi prošivim euklidovalgulitom, koji može da pomogne da se pronađe i multiplikativno i imderzno vredic. Dakle, to je sve operacije koja se obavlja prenego što se dođe do toga da se krene sa komunikacijom, obično se radi offline, naprimera koditi u policiju pa da vam oni tamo napravaju vaš satifikat i napravaju vam ključeve, oni će to uraditi i će dobiti to već gotovo i kasnićete samo da koristite. Ako imate neki web server koji koristi svoj digitalni satifikat, z njega je to neku u radio pre same, pre samog korišćinja toga eres algoritma, a onda kada se dođe do pogada da se nešto šifruje desipravim, imamo te brojeve gotovi. I danas se satifikati obično uzima i traju najmenje godine u dana, čest traju 2-3 godine, dakle to nije nešto što se često menja i to je nešto što može da se izbrši u realnom vrem. I dobro, to bi bilo to što se tiče ovog danasim čase, eče se zaostivite istim imanje.
