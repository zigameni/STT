 Zavržili smo sa bottom-up parsiranjem i sledaće tem nam predstavljuju top-down parser. Dakle, to je druga vrsta. Parsera kod kojih konstrukcija sabla izvođenja ide od korre na kalistujno. Z razlik od bottom-up parsera, kod kojih videli smo, dakle, konstrukcija stabla izvođenja, ide od listovak korre. I prelimušta, pređemo na grammatiku, na konkretne zadatke, na diskusi o tome kako izgleda parsiranje od vrha kadnu, vidićemo još jedan zadatak u nas, doce pociče na ono što smo već imali kod bottom-up parsiranja. Dakle, gde prosto smo videli neku sekvencu prepoznavanje od strane parsera smena, i vidimo kako izgleda grammatika i treba da rekonstruišemo datu sekvencu. Sada ovaj primer jeste uređen na predavanjemu, a kao što piše, međutim, ićemo samo ukratko pro komentarisati kako bi smo čisto napravili parallelu sa bottom-up parsiranjem, pošto smo već takav sličan zadatak radili. Dakle, ako se sestete, kod bottom-up parsiranja smo koristili uvek desno izvođenje, i praktično smo uzimali ovaj ovde redosled smena u obrnutom poritku, te menjali uvek konej krajnje desni neterminal, kako bi smo listo da ostavili dole, adnosno terminale grupisali krajnje desno, a dakle, menjali uvek sa desna te neterminale, i dući ka korenu, gde nam je cilj, dakle, bio da na kraju dobijemo, naravno, sekvencu koja se sastoji isključivo od terminala, a koja na taj način gude prepoznata ovim početnim neterminalom esi, na taj način znamo praktično da je data sekvenca uprvo izvedena iz ove grammatike. E sada, pošto sada imamo top-down parsiranje, koristit ćemo lejevo izvođenje, i radit ćemo upravo suprotno, ono me što smo radili prošle puta, to znači, krenuši od početnog, odnosno, startnog neterminala, menjećemo uvek prvi levi neterminal, dakle krajnji levi neterminal sa desna, naravno, strane, i to baš ovim ovde redosledom, kako i parsere radi dokom dobda om parsiranjemo. Tako da, krećemo od startnog neterminala esi, kao što vidimo, prvo primenjujemo prvu smenu. Što će značiti da, umesto ovogo ovde s, menjemo ga je al tako, prejmo prvo izmeni u terminal a i nakon toga dva neterminala s. Dakle koristimo ovu ovde prvu smenu. Nakon toga primenjemo četvrtu smenu, što znači, uzimamo krajnji levi neterminal, naravno, gledano, s desna strana je ovo leva strana, je uvek jedan neterminal, ali obako. Kranji levi to je ovo prvo s i menjemo ga po četvrtoj smeni, terminalom d. Nakon toga, kao što vidimo prema ove sekvenci, sledeća smena koja se primenjuje je treća puredu smena, što znači, uzimamo ponobu prvi, odnosno, krajnji levi neterminal, zamenićemo ga sa ovakom jednom sekvencom, dakle terminalom c i 3 neterminala s. Tako da, dakle, umesto ovogo ovde s, menjemo se terminalom c i 3 neterminala s. Nakon toga, menjemo je, odnosno, koristimo smenu 2, što znači, ponobu, uzimamo prvi neterminal sa leve strane, to je ovod des, uklanjamo ga i menjemo ga sa onim, što bilo, dakle, tamo sa desna strane, a to znači, prema drugoj smeni, dakle, radi se o terminalu b i jednom neterminalu s. I tako do kraja, menjemo svedog, nedobijemo, dakle, jedno ovakom sekvencu, pošto znamo da je upravo, dakle, parser radi o prema ovoj gramatici, znamo da ćemo sigurno dobiti sekvencu terminala na kraju, ako smo nešto drugačije dobili, znači, neizpravno smo uradili za datak. I ovo je naša sekvenca, onakok ako smo dobili na kraju, a ovde smo prosto videli, dakle, kako sada levi mizveđinjem, zapravo, interpretiramo top down parsijanje. Ok, evo ga primari stabila izvođenja, dakle, kako bi zgledalo stabila izvođenja za ovu konkretnu sekvencu. E, naš drugi zadatak kaža ovako. Za slediću gramatiku za startim simbolem s, pronaći follow skupove svih na terminala, pronaći select skupove svih produkcija i odgоворiti na pitanje, da li se radi o LL1 gramatici. LL1 gramatika predstavlja neku novu definiciju, odnosno vrstu gramatike koju radimo, a u principu se koristi za konstrukciju top down parsera, što, viditećemo danas, dakle, šta predstavlja LL1 gramatiku, dakle koja pravila ona za dovoljeva i kako se transformiša, ukoliko se ne radi o LL1 gramatici. Međutim, prav u primenu, ove gramatike ćemo videti sledići put, kada praktično budemo pisali neki kod, kod samog parsera, tako, pa ćemo videti, gde je zapravo, odnosno, čemu je zapravo značaj, a dakle, nešto malo kasnije, kada budemo videli koja su pravila gramatike i napravit ćemo uvodu u ovu parsiranju. Ok. Hajde da vidimo na konkretnom primero tako je najrašno. Dakle, jel' imamo ovakvu neku gramatiku, sastavljenu od odgubarećih produkcija i u principu da bi neka gramatika pripadala klasi LL1, treba da za sve smene, odnosno sve produkcija, koji je odgovari u ispom neterminalu sa leva strane, njihovi seleksijun i skupovi moraju biti disjuktri. Što znači, mi je bismo odredili seleksijun i skup, za prve dve smene, oni moraju biti disjuktri. Za druge dve smene, pošto se odnosno na neterminal A, oni takođe moraju biti disjuktri. Za p2, 6 i 7 smenu, pošto se odnosno na neterminal B, oni moraju biti disjuktri, i zatim osmo 9 i 10 neterminal C, i 11 i 12 koje je so odnosno na neterminal D. I u principu, ako su svi ovi skupovi, sve sve seleksijun i skupovi, ili tako među sobno disjuktri, mi kažemo da je ova gramatika LL1. U principu razlog zašto nam je bitno da oni budu među sobno disjuktri, zato što taj parser radi tako što prosto na osnovu neke konkretne smene, kaže, ako je simbol na ulazu taj, taj i taj, ja nastavljam prema prvoj smeni, ako je taj, taj nastavljam prema drugoj smeni, ako je biti zna da radi obređivanje, odnosno parsiranje upravo ovog neterminala S, pošto kreća od početka. Dakle, na nekom plastičnom nivogu, prenego što vidimo i taj kod, baš kako izgleda, samo parsiranje bi kretalo od korena stabla izvođenja, tako što u našem slučaju obavezno podrozumeva ovde neterminal S, i onda bi je on neko, pa dobra, da li sada parsiram ovo što odgovara prvoj smeni ili ono što odgovara drugoj smeni? Ako imamo ovde disjuktne te neke skupove, onda bi smo rekli, ako taj simbol koji nam dolezi na početku, pripada skupu koji odgovara prvoj smeni, onda parsiranje nastavljamo prvoj smeni, ako pripada skupu koji ima odgovara drugoj smeni, parsiranje nastavljamo drugom smen. Te takvavi seleksijone skupove, zaapravo koje gledamo da budu disjuktni, predstavljali skupove koji značavaju zaapravo čime počinje neka smena. To znači, pogledamo desnu stranu te smena i kažemo čime ona počinje. Zaapravo čime počinje u sekvence koje će biti prepoznate u prvotom smenom. Zato nam je bitno da budu disjuktne. Malo kasnije ćemo još jednom se vratiti na ovog odprođemo kroz primeri, kad nam se prosto složi malo bolje slika. Je sad nekako formalno posmatrno. Seleksijone skupove određuje se na nivou, kao što rekok svak je pojedinačne smene i onda se određuje prema ovim pravilima koji ovde možete videti, ali zaapravo logički, dakle predstavlja baš ono što sam rekla, a to znači dok lečime počinje upravo sekvenca, odnosno deo sekvence koji se prepoznaje počov od baš te tačke parsiranja, gde se dakle sada nalazi parser, a posmatra prepoznavanje po neku imvom kretno smenu. Što znači? Formalno gledano da će se lek skupoznačavati ili first scoop odnosno o načime počinje ta desna strana. Ukoliko do čime počinje desna strana, odnosno ta cela desna strana tago kažem, i nešto što je neponištivo, dakle nešto što ne može da se zaobiće. Među idemo u slučaju da jeste poništivo i da to može biti zapravo neka epsilon zmena, odnosno neki prazn deo sekvenca, odnosno da može da se preskoči, onda moramo da pogledamo i šta je ono što sledi iza. Teće zbog toga biti dakle first scoop od svega toga, unija follow od onoga što je sa leve strane, a zapravo znači dakle ono što se nalazi iza celog tog dela prepoznatog upravo ovim ovdje delom, odnosno ovom ovde smen. I to potpano ima logike, ako porazmislimo da se upravo dakle koristi u konstrukciju ovih top down parsera, kada mi odlučujemo na osnovu sledećeg elementa koji se pojavi, jednostav sledećeg simbola koji se pojavi u toj sekvenci, da li parsiranje nastavljamo po ovoj smeni, ili po ovoj ovdje smeni, dakle zanima nas šta dolezi prvo sledeće, kako vi smo mogli zapravo ovdje interpretiramo na odgovarejći način. Tako da nam je potrebno da odredimo selekcijno skupove za sve ove smene. Postoje više načina kako to može da se urati. U principu, mi ćemo sada ići jedim pešačkim načinom okviru ovog zadatka, to znači da ćemo odrediti sve first skupove, sve follow skupove, zato što prosto koćemo ovde da malo absolviramo i vidimo kako se formiraju first and follow skupove, dakle da malo to uđe u rutinu i da nema neke greške. Dok, na primer što se tiče kolofijoma odnosno ispita, što ćemo i viditi u nekom od kasnijih zadataka, ako prosto ne žalite naravno da trošite vreme sada na određivanje svih first and follow skupove ako to nije traženo, onda je prosto moguće i da idete samo jedno po jednu smenu i promovimo ovde pravirima da vidite prosto kada su vam potrebni neki konkretni first and follow skupove. U svoj načinu je bradite moji i jedno i drugo
 a krećemo od toga da prvo odredimo dakle sve First and Follow skupove. Koji redost odbirate za određivanje jednog odnosno drugog, nije mnog obitno. Bitno je samo da ne ispostite prosto ni jedan neterminal za koji određujete ove skupove. Tipočno se kreće od startnog neterminala, ovdje smo krenali od neterminala A. U svakom slučaju nije mnog obitno. U glavnom dakle First and Follow skupove određuju se za sve neterminale. First skup za neki neterminal dakle određuje čime počinju sve sekvence je o tako koje se mogu prepoznati pod neterminalom A. Dakle koje mogu biti ubuhućene kao po sekvence koje se prepoznaju i redu suju kao neterminal A. Kako ćemo odrediti First skup? Pa tako što ćemo pogledati sve smena u ovoj našoj gramatici koji su uprvo odnosno neterminal A, odnosno formalno rečeno mogli bi smo reći koji je neterminal A sa lejve strane. Kod nas u konkretnom zadatku to će biti treća i četvrta smena. Dakle ovde je za okružena samo treća zato što gledamo dakle čime počinje. Četvrta je prazna smena pa zbog toga sminju ovde preskočene, međutim u svakom slučaju, dakle za svaku smenu koji je ima A sa lejve strane posmetramo šta se to nalazi sa desna strane i određujemo dakle čime počinju zapravo ove konkretne sekvence. E zna, iz treće smene mi je bismo rekl. Firs skupo da je first od svega ovog desna strane, dakle čime počinje ovo sa desna strane. I sada ovo z desna strane počinje neterminalom A, međutim kao što vidimo, to je malo sad rekurzivna definicija. Znači tu bismo rekli A počinje s onim čime počinje A. A kada povljadamo drugu smenu tog A, vidimo da je to zapravo prazna sekvenca. Tako da ako primjetite dakle kako bi izgledao razvoj svega ovoga, odnosno kako bi smo formirali neko stabilo izvođenja, mi bi smo praktično imali rekurzivno ponavljanje ovog A, koje bi na kraju terminiralo nekim F-silonom odnosno ničim, a zapravo bi nam se rekurzivno ponavljali ovi S i D. Tezbog toga mi praktično možemo sad ovdje da zaboravimo da to počinje sa T-maer, jer je to kao što rekurzivna definicija, već je to identično zapravo frskupu od neterminala S i malog D. E sad šta je frskup od neterminala S i malo D? Namjerno ovako zapisujem, i ako suštinski dakle frskup se određuje košto rekup nam je volu neterminala, međutim kada gledamo ovaj ovdje izraz da ka prosto trebu da vidimo čime taj izraz može da počinje. Tako da frskup od S D je naravno frskup od S ukoliko je to S neponištiva. Tako da svakako dakle počinje o nim čime počinje neterminal S. I kada pogledamo ove naše smene i čime počinje neterminal S, mi ćemo reći ili tako da za to treba da pogledamo prvu i drugu smenu, međutim takođe vidimo da je ovo S upravo poništivo, a to znači da to S nemora ni postojeti. Sada ko S uopšta ne postoji dakle ovoga ovdje delad nema, onda to znači da će frsto des D zapravo predstavljati malo D. Tako da zbog toga ovaj ovdje frskup određujemo kao uniju, ono čime počinje, ove neterminal S i malo D, kao ono što se nalaze i zapravo kao prvi simbul u slučaju da ovo S ne postoji, a to znači da je radila ova druga smena prilikom prepoznavanja. Ok, E sada. First of S, što predstavljamo? Košto je rekao pogledam ove dve smene, međutim kao i malo pre, za to čime počinje ovo S ova druga smena nećemo mnogo koristiti i zato što je to prazna smena, se ćemo se zapravo fokusirati na prvu smenu i vidićemo da ona uvek počinje terminalom A. Dakle, uvek počinje malim simbolom A. To malo A nikad nije poništivo, dakle nikad ne može da se preskoči za obiđe neka konsekvenci. I zbog toga, dakle, ovo S će zapravo uvek počinjeti malim A, a naš first scup od A će zapravo činiti malo A i malo D kao simboli. Tako da sve naše sekvence koje se mogu prepoznati zapravo ne terminalom A, dakle mogu biti redusovane kao takve, zapravo počinju sa terminalima A i D. Ok. First scup od S. Već smo ga malo pre razmotili, zato je samo ovako predstavljeno, nema potreba da ga naravno ponovu razmatramo, već smo videli, dakle kako smo došli do toga koji članovi ga čine, te znamo da je to samo malo A. Sledići naš scup koji je određujemo je first od B. Dakle, ponovno identifikojmo sve one smene koje se odnose na ne terminal B, odnosno koje predstavljaju neke po-segvence koje će biti upravo parsirane, odnosno prepoznate kao ovaj ne terminal B. To znači izvojicemo 5, 6 i 7 smenom i pogledati, dakle čime one počinja. Iz 5 smene, namo zapravo ovaj ne terminal B, odnosno sve segvence koje se tako prepoznaju, počinju ne terminalom S, ne terminalom A i malim C. Na osnovu 6 smene počinju terminalom E i ne terminalom C, a rekli smo već ovoj 7 smenom ne možemo boš koristiti, pošto se desne strane to je prostov prazna segvence, te na osnovu toga ne dobijemo informaciju čime počinje ovo B. Ok, još da razmutrimo ova dva first scupa, dakle na osnovu prvog first scupa, šta zutljučove? S, A, C može biti, odnosno počinjati, o nim čime počinje ne terminal S, ali nakon toga i kao što smo već videli do sada, znamo da je ne terminal S poništiv, te može i da ne postoji. Zbog toga, takođe počinje i o nim čime počinje ne terminal A, zbog toga uzimamo i first to da. Međutim kako je i first to da poništivo, a to vidimo na osnovu četvrte smene, na kraju uzimamo malo C. E sad to malo C je sigurno ne poništivo, nikako ne može biti zaobiđeno, te zbog toga, dakle sigurno zovršavamo ovde, čime počinje S, A, C. I još unija, tako ovog drugog dela, odnosno gledamo ovo 6. smen. Kada razvijemo first to da unija C, vidimo da first to da i first to da sveći imamo, tako da njihova unija je A, D, i dodamo jaš C, tako da imamo malo A, malo C, malo D u tom skupu i još nam treba first od ovoga E, C. Ovo E, C počinje terminalom, počinje malim simbolom E, pošto to je ne poništivo sigurno, dakle ovo E se sigurno mora nači na početku, jel tako dela sekvence koja je prepoznata ovako, nikako ne može biti zaobiđeno, onda će first od E, C zapravo biti samo malo E. Zbog toga što nikada ni nećemo doći do ovog C, jer će prosto naša ta neka sekvenca uvijek počinjeti malim E. Zbog toga naš skup za first od B je upravo se zastoji al tako od malih simbola A, D, C i E. Malo ćemo srediti ovom, to su naše skupovi za sada. Nakon toga i do first od C. Dakle, ponovom identifikujemo sve one smene od kojih se ne terminala o C nalazi sa leve strane. Vidimo, to su 8, 9 i 10. Da bi smo otkrili first scoop, računamo samo 8 i 9, zato što 10, dakle, odnačava prazno smem, te nam nedonosi nikakve nove informacije. Te s toga, ono čim je počinje C, zapravo označava ono čim je počinje SF, dakle, ono što je na početku ovog SF i ono što je na početku ovoga CG. Dobro, first od SF će nam automatki označavati first scoop od S, međutim, pošto je S poništivo, onda takođe i malo F obavezno, kako malo F nije poništivo, tu svakako završavam. Za first od S već imamo šta, dakle, to je malo A i unija od F, to je znači scoop od malih simbola A i E. Što se tiče first od CG, dakle, označava ono čim je počinje, ne terminal C, međutim, to je, dakle, ponovno, rekurzivna definicija, tako, to je kodak kažemo C počinje, onim čim je počinje C, tako tu ne dobijemo boš mnogo informacija, tako, to je svakako, to je svakko, dakle. Te sbog toga, pošto je C takođe poništivo, ukoliko ovde, dakle, zamenimo sa epsilon, što ćemo i rekurzivno, eventu ono nekada i uraditi, tako, u ovaj ovde smenim, dobit ćemo je tako da, ono može početi i sa malim G. Te ćemo prosto to uvrstiti u ovaj scoop i kada to sredimo, imamo simbole malo A, malo F i malo G. I ošlo mi je ostalo da odredimo first scoop za ne terminal D. Dakle, ponovno, povijutamo 11 u 12 smenu, samo 11 na figuriša u određivanju čim je počinje zapravo ne terminal D i znamo da počinje, o nim čim je počinje, ovo se desna strana, a to su malo A, ne terminal B i ne terminal D. Pošto je malo A neponištivo, znamo da će uvijek dakle, ta ideja o sekvence koji će biti prepoznatil, tako, ovom 11 smenom počinjo ti...
 u pravo malima, tako da će to malo a i predstavljati first scoop. I kad sredimo naše 5 first skupljva, izgledaju upravo ovako. Dakle, svak je podsekvenca koja bude redu suvana, odnosno prepoznata, kao jedno do ovih neterminala, sigurno moram počenjati netim simbolom iz njihovog first scoopa. I to kad pogledate, na primjeru, recimo, neke sekvence koja će biti prepoznata kao ovaj neterminal s, je jasno, od tako, dakle, ovo s prosto prihvata i odnosno ova grammatika prosto prihvata ili prazno sekvencu, ali ukuliko se drži barejedan simbol, onda dakle svakako, ili tako, kreće malim a. Tako da je to, to nam upravo i govorio ovaj, ovo je ovo je first scoop. Dobro, slajite stavka koji u imamo i je da odredimo sve follow skupove. Krenu ćemo recimo od follow skupa neterminala s. Z razliku od first skupova, logično prosto kad razmišljamo. Kada smo posmatrali sve, one smeljek od kojih se dati neterminal nalazi sa leve strane, tako da smo prosto videli čime počinjel, tako ono što taj neterminal reprezentuje, a time zapravo gledamo početke onoga što je s desna strane. Sada radimo drugu stvar. Sa follow skupom nas zanima šta se nalazi nakon nekog dela sekvenca, koji je prosto prepoznat kao neki neterminal, dakle, redjusovanje i prepoznat u okvoru naše grammatike pod nekim neterminal. Tako da sada konkretnu grammatici mi zapravo gledamo šta se to nalazi i za recimo ovog neterminala s, odnosno čime počinje neka sekvenca koja se nalazi i za tog s, na globalnom nivo, odnosno u okvoru cele grammatike. O follow skupovima smo već pričali kada smo pričali u SLR 1 parserima, ali ja to čisto kao neka retrospectiva. Dakle, ove smo izvojili 3, 5 i 8 smenost, bog toga što u ovim smenom ovidimo s desna strane. Tako da gledamo šta se zapravo nalazi i za tog s. Dodatno, ono što ne vidimo možda odmah u ovaj grammatici, ali naravno da bostuje i 0-ta smena, to je upravo ono 0-ta smena koja kaže da s primjel tako predstavlja neki startne neterminal, koji zapravo značao da tačka parsiranja, kreće od ovog ovdje startnog neterminala koja je datu u grammatici, je to je s i da nakon toga očekujemo znak za prihvatanje, odnosno, za kraj sekvenci, kako bi smo upravo tako sekvencu uspašno isparcirali, odnosno, prihvatili interpretacijom po ove formalne specifikacije i jezika, odnosno, grammatici. Tezbog toga, dakle, ako se setimo i te 0-te smene i sada krjenemo da urstimo sve ove 4 produkcije, kod koji s s posloji s desna strane i da odradimo follow skup od s, isto je 0-te smene, nakon s nam se nalazi znak sa kraj sekvence, i streće smene, nakon s nam se nalazi ovo malo d, dakle, obovovezna nam se nalazi to malo d, iz ove 5-te smene, nakon s nam se nalazi ac, tako da nas zanima čime počenje to ac jer će upravo to biti prvi simbol i se nalazi nakon ovog našeg ac, tako da ćemo to odrediti kao first od ac i iz osme smene, nakon neterminala s, nalazi se malo f. E sada što se ti človek konkretnih zapisavi, možete ovako pisati first od ac, kako god vam je lakše, možete ju odmoh izračunati koji je to skup, da je naravno, ukoliko pišate postupaka, napravite, kasnije neku grešku u detekciju, odnosno, izračunavenju ovih skupova, onda naravno, ako se vidi da se vi napravili dobar postupak, da znate zapravo što tu treba da stoji, da razumete logiku koja stoji za toga, manje greška, nego ukoliko samo postavite neki skup, a onda naravno, taj skup ne bude tače. Mnidjutim što se ovogo ovdje tiče, dakle, možete i preskočiti ovaj prosto ovdje kvar, pisanjem first ac, ako u startu znate šta će biti first ac, a first ac će zapravo biti first od a i dodatno, ukoliko je a, poništivo što ovdje naravno jeste, pošto, po stoji smena koja kaže da se aprislikava u epsilon, onda naravno i unija od c. Esad, dakle, ovdje konkretno vidimo simbole, znak za kraj sekvence, malo d, c i f, a dodatno znamo šta je bio first skup od a i uklučujemo ga naravno u ovaj ovdje skup, pošto smo ga malo preodredili, teće zbog toga, dakle, naš follow skup od s biti ovakav jedan skup konkretnih simbole, odnosno prvi simbul u našu izekvenci koji se može javiti nakon neček što je prepoznato kao s, je neki od ovih ovde simbol. Sledaće, follow od a. Ponovopogledamo gdje nam se to sve a nalazi sa destan strane i vidimo da to situacija u prvoj treće i ptoj smeni. I onda iz prve smene, takle, nama treba first skup od b, neterminal b, malo b, neterminal c, neterminal d, iz treće smene, nama treba first od sd i iz pete smene, nakon neterminal a, nalazi se ovaj ovde simbol malo c. Tako da sve alvo zajedno, kada izračunamo, mi zapravo dopijemo čim je to počinje, nešto što se nalazi i za sekvence koje preposnata po ovim neterminalom a. E sam, što je zapravo first od ovog ovde velikog nekog dela neke sekvence? Tako da to je sigurno neterminal b, odnosno first od b, ono čim je počinju zapravo sekvence koje su prepoznate pod neterminalom b, a u slučaju da je neterminal b poništiv, onda i početak je ovog ostatka. E sad vidimo i sedme smene da b jeste poništivo, tako da će nam svakako trebati ono čim je počinje ovaj ovde drugi deo, preostali deo, viću da će biti sigurno terminal b, zvuko što je on ovek ne poništiv, dakle da je dalje od njega, dalje ono ne može da se preskoči prosto. Tako da će ovaj ovde deo se svesti na first od neterminala b i unija od malo b. Što su ovog druga dela? Tito za sad ga prepisujemo. Dobro, stigli smo dobde. Dobro, ovaj smo deo prepisali, ali smo go ovde i razrešili. Tako da isto kao što smo gledali i za neterminal b, da smo se gledali iz ove drugi deo koje su odnose na neterminal s i terminal d. Dakle, naravno, first od sd počinje onim čim je počinje neterminal s, što smo već vide li označili u predhodnom delu kada smo određivali first scupove kao first od neterminal s, ali pošto je s takođe poništivo, onda naravno i ovo što se nalazi i za s, ono predstavlja malo d. Te kada sredimo ovu, dakle uvrstimo first scup od b, first scup od s iz onog što smo predhodno izrečunali i na bc i d koje smo ovde izdvojili, dobijemo ovakav i jedan scup kao follow scup za neterminal a, na njim vovca lakupne grammatike. Zatim follow scup od neterminala b. Ponemo, izvojimo sve smene kot kojih se b nalazi negde sa desna strana i to smo nam prva i 11 smenov. I pogledamo iz prve smene, dakle šta se nalazi i za neterminala b. Vidimo da se tu nalazi malo b, nakon toga neterminali c i d. A da se u 11 smeni i za malo, i za neterminala b, izvinjavom se nalazi neterminal d. Što znači da nakon b sledi ono čim je počinje neterminal d izbog toga smo uvrstili ove scup first od d. Međutim, ona što ga sada nismo videli, a što vidimo na ovom konkretnom primjero je da posaoje mogućnost, naravno da je to d takođe poništivo odnosno da taj deo sekvence ne postoji. A pošto nas u svakom zlučaju zanima čim je počinje neki deo sekvence koji se ipok nalazi i za tog b, onda osim što nas zanima first scup od d, takođe nas zanima i ono što se nalazi i za, a to će biti follow od neterminala koji je sa leve strane, a to je upravo neterminal d. Znači, first od d zbog toga, što se on nalazi prostu direktno nakon ovog neterminala b, tako da ukuliko je ovog d nešto što je ne poništivo, nas zanima koji je to scup simbola, odnosno koji je to prvi simul koji se nalazi nakon tog b. Mdl. ukuliko ovog d ja nema, dakle ukuliko je ovde prosto se menja ovom 12. smenom, znači ovog d što ovde ne postoji, onda se efektivno nakon tog b nalazi ono što se nalazi i za cele ove smen, a to je zapravo follow od d i to određujemo u celoj gramatici. Korak po korak. First od b cd će nam uvek biti terminal b, zato što ovo malo b ne može da se preskoče, nije poništivo i zbog toga će nam uvek biti to malo b. Što zdiče first od d njega smo već izračunali rani ovom zadatku, to nam je samo scup malo a i osalo nam i ošto izračunamo follow od d što ćemo uraditi u nekom modernji korak, pa ćemo u ovom momentu samo ostaviti referensu da se kasne vratimo i popunimo ovdje scup. Follow od c. Prva, šesta i deveta smena su od intoresa, zato što se na terminal c nalazi sa desna strana. Tako pogledamo šta se nalazi i za c. I sada iz prve smene vidimo da se nakon c nalazi ne terminal d, tako da će svakako, dakle u follow skupo c ući first od d. Međutim istokavo i malo pre, ovo d može da ne postoj, može da ovde dođe ova 12 smena, tako i da ovo d ne postoj. Testoga, prvo što dolazi nakon c je zapravo ono što dolazi nakon c.
 c je na ovaj smen, a to je follow od s. I sam šeste smene, ono što slijede nakon ovog c, vidimo da čak i nemamo ništo ovove smene, tako da ono što slijede nakon ovog c je ono što slijede izacelog kupne ovaj smene, znači to je follow od b. I na osnovu 9 smene, ono što slijede nakon c je malo g. Sada možemo zamjeniti first of the following of s i follow od b. I dobijemo nešto ovako, dakle first of the je malo a, follow od s, takođe imamo. Follow od b, dakle kad je da pogledamo šta slijedi zapravo izab b. I to smo već izračunoli. To smo već izračunoli ovog c. Simbolad nasno skup a i b i follow od d. Te ćemo prosto to samo zameniti ovdjel, tako skup od a i b i follow od d. I unija simbolad g. Nisto ovo morali da pišate, dakle ovoliko precizno, mogli ste samo da zamjenite sa follow od b. Sada razlog zašto je napravno je napravno ovakva referensa, tada razlog za to, što mi zapravo tamo nismo do kraja razrešili follow od b, jer je šubek nismo razrešili follow od d. Pa izbog toga napisano ovako. Kojinače, naravno, u zavisnosti odreda sa dok vam radite, mogli ste i predhodno to već izračunati, tako da ovde zameniti, naravno, odmah taj skup. I još nam je osto follow od d. Dakle, na osnovom prve i 11 smene vidimo prosto koje su nam smena tu interesantna, dakle gdenam se d na ozi sa desna trane. U prvoj smeni gdenam sam dalazi na krajim, na savom kraju ove smene. Tako da ono što se nalazi i za tog d je zapravo ono što se nalazi i za celokupne ove smene, a to zapravo follow od ovog neterminala koji podrazumeva ta smena, pa zapravo follow od s. U samu 11 smeni, takođe, ono što je i za ovog d i ono što je i za celokupne ove smene, dakle follow od d. Međutim, naravno, to je ponov o rekurzivne definicije ili tako, follow od d, follow od d, to svakako znamo. Tako da ću follow od d zapravo biti equivalentom follow od s i to već znamo šta je, tako da zamenimo. I sada već ne možemo obračiti u ovo u predhodnih, nekoliko skupovog da nam je zapravo bio potreban follow od s. i tada ćemo srediti sve ove skupove i dobit ćemo ovako pet follow skupova za ove neterminale. Sada imamo sve first i sve follow skupove i ostalo nam je ošto odredimo selektione skupove za svaku od ovih smena. Krenućemo od prve smene i rekli smo, dakla, juš jednom ajde da ponovima, da se selektioni skup neke smene, dakle, predstavlja čime zapravo počinje, odnosno koji je dakle prvi neki narodni simbol koji može početi prepoznavanje neko, odnosno, za tu konkretnu smenu, dakle koji je prvi simbol koji počinje ta neka smena. I sada to će biti ili first scoop od ove, ovde desne strane ili ukoliko cijelo ta desna strana ne postoji, odnosno može biti poništiva, može da ne postoji. Onda, dakle, šta sledi i za cele te smene, odnosno, unija follow skupa od neterminala sa lejbe strane, jer to uprvo predstavlja, dakle, prvi sledeći simbol koji će biti na ulasu. Sada oblata desna strana, jasto nije poništiva, pošto sadrži neke terminale, čim, dakle, imate neki simbol odmog znate da takon konkretna, takon konkretna sekvence ne može biti poništiva, te ćemo mi uzeti samo first scoop od svega toga i to će zapravo biti prvi simbol koji se tu nalazi, odnosno, malo a. S ostriče druge smene, ovde, dakle, nam opšte ne treba first scoop od desne strane, pošto desna strana ne postoji, tako da ćemo odmah recite to follow od lejbe strane. I zašto, dakle, zato što znamo da prvi simbol sledeći koji će se naći, upravo simbol koji se nalazi i za onoga što reprezentuje ova ovde smene. Pošto ništa ne postoji, al tako ovde pošto ona reprezentuje praznu smenu, dakle, prvi sledeći simbol koji će biti isparcirani, upravo ne koji će se naći i za ovog neterminalu s, tako da određujemo, upravo to follow scoopom od des. Znamo šta je follow scoop od des, te ćemo ga odmah zameniti ovaku, zato smo upravo izračunavali first and follow scoopove. U treću i našo smeni, dakle, ponovog ledamo first od desne strane, pošto desna strane sigurno ne poništiva, to znači da ne moramo opšte gledati follow scoop, dakle, sigurno će postoji neki simbol koji počinja ovaj ovde deo sequence i to znači biti first od des i des, što znači first od des, međutim pošto a može biti poništivo, onda i first od des, a pošto des može biti poništivo, onda sigurno terminal des na kraju. I kada to sredimo malo, odnosno znamo koji su ovi first scoopove i imamo zapravo skup koje se sastoji od 2 simbola, malo a i malo d. Sela je scoop za četvrtu smenu, pošto je to, dakle, prazna sequence, onda nam samo treba, dakle, koji će brti biti prvi naredni simbol, što znači follow od a, follow od a već imamo iltako, samo ćemo zemeniti i to je upravo naš selekcioni scoop za četvrtu produkciju. Za petu smenu, ponavu selekcioni scoop, dakle, desna strana je ne poništiva, srdrži bare jedan terminalne simbol, odnosno ovde slovce iltako, izbog toga ćemo posmatrati samo first scoop o desna strana. Sa first scoopo desa i c će biti first o des, međutem pošto je esponištivo, union first o dial a pošto je japoništivo, onda na kraju sigurno malo c. First scoopove o des i od a smo već izračunali, te ćemo i samo srediti i select scoop će izgledati upravo ovako. Za šestu smenu, dakle, čime počenje desna strana pa oveg počenje malim e, pa će nam i to u prvo biti naš selekcioni scoop. Za sedmu smenu, pošto ona zapravo značava jedno prazno sekvencu, na zanima koji je prvi sledeći simbol u toj sekvenci, tako da selekcioni scoop sedme produkcije će biti follow od b. Za osmu smenu, zanima na s čime počenje desna strana, kao što reko, čim imamo terminal, odnosno simbol bar je, da nam znamo da će ona sigurno biti neponištivo, te nam opšte ne treba follow scoop, znači firsto des će biti firsto des, ali pošto es poništivo, onda unija malo f i to kac redimo dobijemo a i f. Za devetu, dakle, ono čime počenje desna strana, c kako je c poništivo, dakle onda će to biti firsto c, ali i unija sa malim g. Znači a f i g. Deseta produkcija, sa desna strane nevamo ništa, te ćemo tražiti follow scoop od c, follow od c već smo izračunali i to će biti abcd fg i znak za kraj sekvenci. Jedanesta smena, takle čime počenje desna strana, po sigurno počenje malim, a pošto s ono nalazi odmah na početku i ne može biti preskočen. I 12, kako desna strana uopšta ne postoji, tako nam zapravo treba follow scoop od neterminala d, to znamo da klašta je i menjemo kao accdf i znak za kraj sekvenci. I time smo odredili selekciune scoopova. Još je samo ostalo da odredimo, da li naše grammatika je li jedan ili nije. I sam smo na početku retli, da bi smo otvrdili, da li je grammatika ili jedan, potrebno je da za parove, odnosno ne parove, nego za grupa, da tako kažem, smena koje se odnose na isti na terminalu provarimo, da li su njihovi selekciune scoopo vidisi uktin. Što značuje, poredi ćemo prve dve smene zbog toga što su ona odnose na neterminal s i kada pogledamo prva dva selekciune scoopa, dakle, da li su disjunktin. Znači, da li postoji preklapanje ili ne postoji preklapanja, namo, dakle, potrebno da ne postoje preklapanja ova dva scoopa, međutim, vidimo da je terminal odnosno simbol A zajednički ovim scoopojima. Te ćemo odmah ovde zaključiti da naše grammatika je nije elali jedan grammatika. Mogli bi smo naravno proveriti i traću i četvrtu, pošto su odnosno na neterminal A, ponovog, dakle, imaju zajednički presek simbola A i D, da bi smo jovde zaključili da nije disjunktno. Zatim, 5, 6 i 7 smena koje su odnosno na neterminal B, ponovog, dakle, postoji presek, te definitivno zoključujemo da ova grammatika nije elali jedan. U principu, nije potrebno proveravati za sve, dovoljno je otvrtiti da na bar jedno mestu važi da scoopovi nisu disjunktin za isti na terminali, time se dokazuje da grammatika nije elali jedan. Zbog čega, zato što, hajde još jednom da kažem, ma da će biti jasnije verujem kada budemo konkretno radili implementaciju, ovis selekcioni scoopovi se prosto koriste da kada parsiranje dođe u neku tačku, da znamo da neka određena sequencija zapravo će biti prepoznata neterminalom S, kao što, na primveru, startu znamo da krećemo upravo od neterminala S, pa pozivamo neku proceduru koja je zapravo implementirana, dakle, neka rutina za to S i onda kažemo, ako počinje, odnosno, ako je sledeći simbol koji se pojavljuje na ulesu, nekih u simbola i selekcioni scoopa prve smene, mi ćemo zapravo parsiranje nastaviti o dat, znači, prepoznaćemo u ovom konkretnom slučaju simbol A i nakon toga pozvatite proceduru za A, proceduru za B.
 i tako dađe. Ako taj simbol pripada sa elekcijnom skupu za drugu smenu, mi ćemo nastaviti naše parsiranje u okveru ove druge smene. Međutim, u koliko se ti se elekcijne skupi priklapaju, onda mi kada vidimo konkretan jedan simbol, na primjer u ovom slučaju malo, a ne znamo da li se parsiranje nastavlja prvom smenom ili drugom smenom izbog toga, o takvu gramatiku ne možemo iskoristiti za ovakvo parsiranje. Dobro, je sada u konkretnu zadatku ako vam je traženo da otkrijete samo da li je našto LL1, vi naravno i pri prvoj detekciji možete ako otkrijete da nije, ne morate prosto određivati sve ove skupove. Međutim, ako se traži da je potrebno odrejiti sve selekcijne skupove, a nakon toga odrejiti da li se radi u LL1 da gramatici, onda naravno ima potrebe da ih upravo ovako i određite. Nastavljamo sa top down parsiranje i sledići nam je zadatak broj 3. On kažu ovako, eliminisati mrtve i nedostižnih neterminala iz date gramatike sa stastim simbolom a. To je naš prvi zadatak, nakon toga ćemo vidjeti šta je šta je uroditi u okvirog zadatka. Dakle eliminacijom mrtvih i nedostižnih neterminala iz gramatike smo veći radi, tako da ćemo samo ukratko se preslešati prosto preći kroz ove zadataka. Da te prvo eliminisamo mrtve neterminale i to radimo tako što prvo odredimo koji su to živi neterminali. Inoče, dakle mali podsetnik, mrtvi neterminali su oni koji ne terminiraju. Izbog toga, mislim mrtvi, su zbog toga što zapravo neće biti korišćeni u ovej gramatici jer ne predstavljaju zapravo ni jednu konačnu sekvencu, odnosno sekvencu od neku konačnu broja konkretnih simbola. Oni opisuju neke bezkonačne sekvence, odnosno ništa što će realno se pojaviti. Žive neterminale određujemo tako što prvo posmatramo, dakle koji to neterminali se drže bari jednu smenu, odnosno postoji neka smena koja se odnosi na njih i o tako, koja se stoji sključivo od terminala ili eventualno, dakle predstavlja epsilonu sekvencu. U ovom trnutku tostvom isključivo neterminali b i d e. Znači po neterminalima b i e, dakle sekvence terminiraju, odnosno oni će biti listovi, odnosno koriće se za izvođenje samih listova u stablu izvođenja. Tako da sada obet da vi smo došli do preostalih neterminala, ponobno pogledamo i al tako koji to neterminali od preostalih, il tako završavaju, odnosno postoji neka smena koja se odnosi na neke ove druge neterminale, a koja bude podrozumeva, odnosno uključuje sve destne strane, dakle samu isključivo ove terminale koji su živi, preko kojih znamo da možemo terminirati i uspod možda, naravno, ješ neke konkretne simbole, to je uretu. Dakle živi smo nam neterminali b i e, kada pogledamo neterminal a iz prve smene, zavisi također ekruzivno i odata, ako da tu ne možemo ništa, iz druge zavisi u c, za c je još uvek ne znamo da li je mrtvo ili živo, treća, zavisi od d, također naznamo ili mrtvo ili živo i četvrta, također od d, tako da ni tu ne znamo da li je mrtvo ili živo, znači za a i dalje ništa ne možemo zaključiti, za b je već znamo da je živo, za c, ono, rekuzivno zavisi od sebe, naška ništa ne znamo i za d, što mi ostalo još da je razmotrimo, dakle, postoji deseta smena, postoji deveta smena, po kojima prosto će taj delu sekuvence biti zaminjeni sa onim što zapravo predstavlja b, pošto za b znamo da je živo, znači zaključujemo da nam je i d živo. Svada smo i d uključili u skup živih neterminala, taj u sljedeću iteraciji, kada razmatramo ponovu a i c, za a znamo da pošto postoje smene 3 i 4, može terminirati po nekoj od tih smena, teće zbog toga i a zapravo biti živo. S druge strane c ima samo jedno smenu i uvek je rekruzivno, dakle, uvek zavisi od sebe i tu nam je odmah jasno da praktično, dakle, smena nikada ne može terminirati, ako je uvek rekruzivno, uvek zavisi od sebe i nina koji način se ne može to c zameniti po jedno i drugo smeni ničim što može terminirati, onda, naravno, implicitno jasno da ove neterminal neće biti živ i da nema nikakog udalo zapravo ovada smenu. Tećemo automatski eliminisati smenu 7, ili minisaćemo sve smene koje sdržene terminode c, što znači u ovom slučaju još i drugu smenu po reto. Kad smo to uradili, dakle, ostala nam je ovakva jedna grammatika, gde smo izbacili ove dve smene. Slediće što treba da uradimo je da odradimo koji su to neterminali i dostažni koji su nedostažni i da te nedostažne ponovu eliminisamo iz ove grammatike, odnosno izbacimo sve one smene koji se drža takva nedostažna neterminali. To će značiti da ćemo krenuti od startnog neterminala koji nam je naravno uvek dostažan i svi neterminali do kojih možemo doći i stok startnog su nam takođe dostažne. Po prvoj smeni možemo da klasići do neterminala b, tako da i on dostažan, i trećo i četrto i do neterminala d, pa je i on dostažan. U principu, ostalo je što samo da vidimo da je nam je dostažan neterminal e i sada bi smo to mogli iterativno da radimo o nem klasičnim postupkom, što znači dohvatimo preostale neterminala i stok skupa trebutno dostažnih, što će biti b i d i pogledamo da se nekako iz b i d može doći do e. Međutim, ovo je ove grammatike i odmah implicitno jasno da se do e ne može doći, odmah će ovo biti nedostažan neterminal. Prosto zato što nigde ne postoji sa destna strana nije jedne od smena. Naravno i da postoji u okviru ove 11 smene ponovno ne bi se moglo doći ni iz jednog od ovih dostažnih neterminala, tezbog toga vidimo da je nedostažno. U principu, ovo inicijelnoj grammatici e je bilo dostažno, međutim, bilo je dostažno preko mrtvog neterminala i to je razlog zašto prvo određujemo koji su to mrtvi neterminali i njih uklanjamo, a nakon toga određujemo koji su dostažnih, dosta nedostažnih, da ne bi smo prosto proglasili neki neterminal kao dostažan u koliko je ono i sklučivo dostažan, i znači kako je mrtvo i kao tako neće ni biti korišćeno uparsiranju konkretne smene. Tako da smo uklonili i ovu 11 smenu i sada nam je ostavo manji broj tih smeno koje možemo vidati ovde i ovako glasi naša minimalna, od dosta naše grammatika nakon uklanjanja mrtvih i nedostažnih neterminalom. Sleće zdaci koje smo imeli u okviru ovog zadatka je da eliminisamo lebu rekursiju. Šta zapravo podrozumeva leva rekursija? Ovdje postoje neka pravila na osnovu koji se vidi kako se ta leva rekursija eliminisila, ali hajde prvo da vidimo na primeru i da vidimo uopšte dakle šta ona znači i zašto nam leva rekursija uopšte smeta. Inac je eliminacija leva rekursija predstavda jedna od načine transformacije neke grammatike u l-1 grammatiku. Šta je u principu razlog za takvo jednu transformaciju, odnosno za eliminaciju leva rekursija? Ako pogledam ovu neku grammatiku, dakle to je baš grammatika iz ovog zadatka, vidimo kako bi recimo izgledalo stablo izvođenja za neku sekuvencu, gdje je dakle ovo nije kompletno stablo izvođenja već izključujemo služi za interpretaciju ove leva rekursije i to leva rekursije koja se vidi iz prve smene. Dakle to je leva rekursija ovdje dakle podrozumava rekursivno ponavljenje neterminala a sa leve strani. To je naravno uopštevo na juš jednom primjero ovdje u slučaju osme smene kada ponovopostoji leva rekursija po neterminalu d. Kako sa ona ogleda ovdje u konkretnom primjer? Ako bi smo recimo krenuli od neterminala a radili izvođenje po toj levoj rekursiji, koristimo prvu smenu, pa ponov ovo ovdje levo a je otako menjamo neterminalom a, malim c i neterminalom d. Pa ponovog menjamo neterminalom a, malim c i neterminalom b i na kraju terminiramo po nekoj drugoj smeni. Naravno, gdje zašto kažemo, ovo nije kompletno stablo izvođenje, zato što u kompletnom stablo izvođenje, naravno moramo razviti to stablo gdje nam u listovima, dakle smaju biti isključivo terminali ili eventuolno epsilon, dakle kao specifican simbol. Ovdje smo ostavili neterminale prosto iz razloga što nije ovdje cilj da pravimo kompletno stablo izvođenje, bi ste vidimo kako funkcioniš leva rekursija i da razumimo zbog čegor nam je leva rekursija neprijatelj kada pričemo u LL1 gramatici. Dakle, iz ovom govdje primjer vidimo da zapravo, o način me će počinjati ovdje desna strana, odnosno, ono što će biti zapravo prvi simbol s prvi simbol sekvence koji opisuje takva smena, će biti ili početak 3. smene ili početak 4. Zbog toga što ovo ona kraju mora nečim terminirati. U ovom našem konkretnom slučaju mi smo zamenili ovo krajnje levo ana kraju kada smo želili da završimo ovo našu lego rekursiju da prestenemo s ovoj doponavljanjem. Po 3. smeni izmenili smo s ovim CD izbog toga kada pogledamo kako bi izgledali selekcijuni skupovi ovih naših smena, vidimo da selekcijuni skupovi prve smene će sigurno uključivati ovo čim je počinje u ovom slučaju 3. smene, a u ovo čim je počinje 4. smene. Zato što prosto neći mora završiti to
 Tako da first scoop od ovaj desne strane, ili tako će biti first to da, što je zapravo ona što vidimo i streći, odnosno četvrte smene, i na konkretnom ovom primeru vidimo da uprvo počinja u ovom slučaju je malim simbolom c za baš ovu neko konkretnu sekvencu kojoj smo ovde uzeli. Zbog toga je jasno da, vilo koja gramatika koja ima u sebi levo rekurziju, ne može biti elalijada gramatika i da takva leva rekurzija mora biti transformisena. E sam, postoje da je krepradila transformacije leva rekurzija, ali hajde da probamo da nekako zdravorazmski vidimo zapravo kako bi to izgledalo. Na osnovu ovog ovde primera izvođenja, odnosno stavila izvođenja, al tako za konkretno ovu ovde prvu rekurzimnu smenu, vidimo da ponavljamo dakle neki broje puta, ovo i na kraju ovo a terminiramo po treću ili četvrtoj smeni, u ovom konkretnom primeru smo mi uzeli baš treću smenu. Sada kako izgleda zapravo naša ta sekvenca, odnosno kako su ona formira. Vidimo da se nama tačno jednom pojavljuje o noćima smo ovdje terminirali, što znači po treću ili četvrtoj smeni, dakle ovo cd nam se pojavljio jednom ili neterminal bd, pardono za slučaj da smo terminirali po četvrtoj smeni, dok se ovaj ovde je ostatak. C neterminal b ponavlja više puta, u zavisosti je toga koliko puta smo rekurzivno imali ponavljanje ove ovde smene. Tezbog toga, ako hoćemo da naravno transformišamo ovu gramatiku ili minišamo ovu rekurziju, ono što moramo obezbediti je, naravno da nevamo nikakog gubitak, niti dobitak neki novijel, tako to znači da niti prihvatamo nove sekvence koje ova gramatika početna nije prihvatala, niti slučajno odbacimo neki broj sekvenci koje ova gramatika jeste prihvatala. Zbog toga moramo transformisati tako da gramatiki bude oklivalentne, ali da zadovoljeva formalnost odnosno strukturu takvo da ne postoji levo rekursija. U principu, kada smo napravili ovakav i jednom primjer, dakle mi zapravo vidimo čime treba da transformišamo ovaku jednu smenu, pošto nju treba izbaciti, a ono čime dakle počinju upravo sekvence koja ona predstavlja ili tako je ili ili ovo ovde, ili ovo ovde, što vidimo iz ovog stabila izbožena, dakle to je ono čime će ove krajnje levi ne terminalu, nekom trnutku, terminirati. Zbog toga, dakle, mi ćemo izbaciti ovu prvu smenu odnosno, ili kombinaciju ovog ovde i reći. Umesto ovog ovde a mi ćemo ubaciti treću i četvrtu smenu, i to smo u prvo ovde uvrade li, dakle, reći ćemo, a nam zapravo predstavlja, cd, to je ovo da abde, pa nakon toga neko aprim, ili ukoliko posmatram ovu četvrtu smenu, zapravo nam predstavlja, ne terminal d, pa nakon toga aprim. Na taj način mi smo izbacili ovu ovde a koja se nalazila krajnje levo, a mi smo izgubili informaciju čime počinju, dakle, sve te sekvenci koje će biti prepoznate kao ne terminal a. One počinju ili malim c i nakon toga ne terminal d, ili ono što buklata ne terminal d, što vidimo iz ove smene, dva aprim. Samo seš posleda piznije, dakle, šta predstavlja ovo aprim? Aprim, zapravo predstavlja, sve što se nalazi i za ovog početka, dakle, sve što se nalazi nakon ovog cd ili što se nalazi nakon ovog d. A to je zapravo rekursivno ponavljanje ovog cd, dakle, rekursivno ponavljanje terminalace i takon toga ne terminala d. Tako da nam treba zapravo da realizujemo rekursivom ovog ovde ponavljanja. I to i radimo ovom ovde trećem smenom. Dakle, rekursivno ponavljamo ovo cd. Jedino što dakle, kada biramo koja će rekursija biti u pitanju, možemo se naravno dlučiti za levo ili desno, ali jasno da ovde nikada nećemo realizovati ponav o levo rekursiju, što smo spračavali levo rekursiju da bi smo ponavu formirali levo rekursiju. Dakle, to nikada ne se pradili, tako da ponavljamo sada ovo cd. ovde rekursivno mi zapravo obavezno realizujemo to kao desnu rekursiju. I naravno moramo nekad terminirati ovu rekursiju i tu se postavlja pitanje, dakle šta je minimalna sequenc. Slično, kada smo radili mi samu konstrukciju grammatike za neki skup sequenci koje su bile po nekim pravilima opisane. Dakle, šta je minimalna sequenc i kako će ovo terminirati. Pa, vidimo i zove početne grammatike, da su minimalne sequencje, ovde upravo bila prepoznate kao 3. i 4. smena. Što znači samo cd ili samo d. Odnosno, bez ponavljanja u opšte ovog ovde dela. Dakle, ovo a je moglo biti samu prepoznato kao 3. i 4. smena bez opšte ponavljanja cb. Tezbog toga, minimalna sequenza za a prim je epsilon. I to znači, da ukoliko ubacimo upravo to e epsilon u 1. prim ili drugu prim smenu, mi ćemo dobiti ovo što inicijelno bila 3. i 4. smena, znači i time ništa nismo izgubili. A ukoliko bilo kontra nutku, želimo da terminiramo ovu 3. prim smenu, to je epsilon ubacimo u mestu ovog ovde a prim. I na taj način terminiramo zapravo ovu rekurziju i time smo obezbedili sve ono što je bilo prihvatano upravo ovom ovde prvom smenom. Te samim timu ova grammatika ovde je sada ekvivalentra. Dakle, izbacili smo 1. 3. i 4. smenu, a ubacili smo ovde 4 koje smo dobilila tako transformacijom. Ista stvar će biti iz-a osmu smenu. Tu ćemo reći, ovaj ovdaj ostatak ovde a b se zapravo ponavlja rekurzivno potunno identično način, na nakraj će ovdje d termirati ili po 9 ili po 10 smeni. Znači ili kao neterminal b, terminal b, neterminal b ili kao samo 1 neterminal b. Te ćemo prosto reći da je naš d zapravo, ono što dobijemo kada zamenimo, ovdje ovdje neterminalom d 9 ili 10 smenom, što znači b b b, pa nakon toga neko d prim ili samo neterminal b, pa nakon toga d prim, da će d prim dakle biti desna rekurzija a b d prim, a minimalno će to biti prazna sekvenca. I dakle, formalno naravno možemo jo ovako nekako zapisati te transformacije, a to znači da ćemo uzeti sve smene koje su levo rekurzivne, dakle za neki neterminal. Uzećemo sve smene koje nisu, dakle koje predstavljaju terminiranje ili tako po tom neterminalom. I zamenićemo ih. To je uprvo ono što smo uradili sa ovom prva prim i druga prim dakle ove dve smene ili tako, one predstavljaju smene u kojima smo mi ubacili ove konkretne, treće u četvrtu po kojima dakle ta rekurzija može terminiati. Tako da nam to označa bo upravo ovo je ovdje delo. I nam ko njih dolazi neko x prim. Sad x prim treba da podrži ovo ovde rekurziju, minimalno će biti epsilon i ukoliko bude zamenjenost epsilon, onda upravo tako imamo ove smene koje smo uklonili. A usuprotnom dakle realizovat ćemo to kao desnu rekurziju, gde je zapravo da smo trebamo ostatke, od poslanoj rekurzivnog dela. I naravno realizovamo to kao desnu rekurziju, da ne bi smo ponovljivali problem sa levom rekurzijom. I ovde imamo jedan ove primjer, a drugi primjer upravo sa ovim d, kao što sam rekla. Dakle, da ćemo ubaciti ove dve konkretne smene, nakon toga imamo d prim, d prim minimalno je epsilon, a u suštini predstavlja dakle ponavljanje ovoga ovde dela koji je bio ostatak je, o tako pošto se da idejo zapravo rekurzivno ponavlja, i nakon toga je, tako imamo ovo ovde d primu pravo za to rekurziju, ali obavezno kao desna rekurzija. I način, ono što smo rešavali, u oba ova slučaja je bila direktna leva rekurzija. U slučaju da postoje indirektne rekurzije, što je takođe potrebno je posebno obratiti pažnju, i na predavanjima se i radi algoritm za detekciju i rešavanje indirektnih rekursija. Da, tima smo aliminsali levu rekurziju, sljedeći naš zadatak je da izvršimo levu faktorizaciji u grammatici koji smo dobili pod već. Šta uočite sada podrazumava leva faktorizacija? Najfra naša finalne grammatika nakon ovih transformacije izgleda ovako. I sada leva faktorizacija predstavlja u principu situaciju, kao što naprima revo baš ovde za 7 prim i 8 prim smene. Kada ponemo bi smo određivali tako selekcioni skup za ove dve smene, pošto odgovaraju odnosno da odgovaraju neterminalu d, i rekli bi smo pa ove počinju neterminalom b. Što znači, u principu da oni naravno neće biti disjunktani zato što počinju jednom te istom stvari. Kako bi smo to rešili, sprovodi se leva faktorizacija praktično predstavlju veoma jednostavno pravilo, gde ukoliko postoje upravo takve neke dve smene za isti neterminalu, odnosno koje odgovaraju istom neterminalu. Takve da imaju neki zajednjički prefiks, racimo u ovom slučaju to je alfa beta, alfa gamma, da pre zajednjički prefiks je alfa, uzima se prosto najduži niz neterminala i terminala koji je zajednjički za ovakve smene, dve i vi više. Izdvaja se u poslenu smenu, tako što će se reći al tako s je upravo to alfa, pa nakon toga nešto,
 Na to nešto je prosto ili beta ili gamma. Na taj način, mi smo taj zajednički deo izdvojili u poseb novu smeno, tako da će one imati neki svoj selekcijun i skup, dok će S-prim u ovom slučaju, dakle, za ove dve smene prosto, imati disjunktne selekcijune skupove zbog toga što smo mi upravo i našli najduži prefiksio, tako pa smo ga sigurno izdvojili u okviru ovog lampta. Ko povljedamo našu ovu gramatiku, upravo po 7-8-prim smenamo, mi bi smo izdvojili na terminal B, tako da bi ostacili ovdje, tako i ovu ovdje i to bi smo izdvojili u posebne smene baš ovako. I gramatika na kraju izgleda kao što možemo videti ovako. Sad on što na kraju treba uraditi i odrediti prosto selekcijune skupove i reći da li je tako gramatika L-L-1. Dakle, tu ćemo ponoviti identičnj postupak kao malo pre, jer treba što sad nećemo raditi toliko pešičke. Dakle, kao što sam rekla, ono što vi naravno možete uraditi i odrediti prvo prs skupove nakon toga polo skupove i nakon toga prosto izkoristite te skupove za određivanje selekcijune skupove prema pravinama. Miđutemo, principale, kova vas neku samu pita u zadatku da odredite sve selekcijune skupove, onda možete neće biti potrebni svi one prsti polo skupovite, prosto možete ih određivati i u hodu prema potrebi. I upravo je to ono, kako ćemo mi uraditi ovaj zadatek da je flekako god vam je lakš. Ako se naravno samu zadatku eksplicitno traži da odredite sve prs-s-tili polo skupove, onda to jasno morate uraditi. Selekskop za prvu smeno. Dakle, gledamo čime počinje. I al tako ta prva smena, odostno koji bito bio neki konkretan prvi simbol i ona ovde uvek počinje, neterminalno c, koji prosto nikad nije poništi, odnosno ne može se preskočiti pa će to biti samo malo c. Što sviče druge smene, dakle gledamo čime počinje ova desna strana i to je f-s-t-d i ako je d-poništivo, onda i f-s-t-d-p-r-i. E sada, dali je d-poništivo, možemo pogledati na osnovu smena koje se odnose na d. I to je upravo sedma smena u ovom slučaju. Dakle koje počinje, tim bi smo rekli da je f-s-t-d zapravo f-s-t od b-d-p-r-i. Ode sekundom bar-ta. Dakle to je ovde ovdje, f-s-t-d-p-r-st od ovoga što se nalazi ovde. Međutim, kako b-nije poništivo, što vidimo iz ovde ovde dve smene, onda nam dakle ovaj drugi deo nije ni potrebar zbog toga što ćemo uvek sigurno završiti na ovom ovde b. Inače, za slučaj da nam nje d-bilo poništivo, vidimo da nam je takođe ja prim poništivo, morali bi smo da gledamo i follow od a. Dakle to bi bilo ono pravilo da uzimamo f-s-t-d-st na strane, unija follow od leve, te bi smo na ta način prširili, ovaj način skupirna zapravo zanima koji je to prvi sledeći simbol koji će se način nakon ovog nekog dela, odmuzno koji je prvi sledeći simbol na ulozio, tako u ovaj tački prsiraj. Međutim, kako b-nije poništivo, onda zapravo ćemo uokvjuru ovog f-s-t-d zapravo doći do f-s-t-d-b, a to nam je po 5 sekundom i 6 sekundom skup od b-i-d. Dobro, našto 3 smena, s desna strana uvek počin je malim simbolomce, tako da nam je to selekcioni skup. Četvrta smena, pošta s desna strana nema ništa, da kada tražemo follow od a-prim, pogledamo sve smene, kod koji se a-prim nalazi s desna strana, to su nam prva druga tereća, to je to. I z prve smene, ono što se nalazi nakon a-prim je zapravo follow od a, iz druge smene takođe, a iz treća smena follow od a-prim i istoštje follow od a-prim, to nam ne znoči mnogo, tako da zapravo ovde ne treba da stoji follow od a-prim, unija follow od a-prim, nego treba da stoji follow od a-prim, unija follow od a-prim, tako to je jasno ovo ovde iz prve smene i to se nakrajno sve splodim na samo follow od a, pošto je tako, tako ne možemo rekorzivno gledati follow od a-prim preko follow od a-prim, a šta se nalazi i za a, pogledamo sve smene i tražemo gde nam je a-negde na kraju i nemo ni u jednoj od ovih smena, međutim setimo se da ilamo i ovo nuluto smenu, gde se iz a definitivno nalazi znak za kraj sekvence, teće nam spok toga, dakle upravo biti znak za kraj sekvence, dakle jedini element našeg selekcijalnog skupa. Selekcijalni skup 5, dakle desna strana uvek počinje simbolom b, tako da je to malo b. Za selekcijalni skup 6, desna strana uvek počinje simbola malo d, selekcijalni skup 7, dakle, first od ove desna strane, počinu smo već razmatrali to, zaključili smo da je upravo ekvivalentno first skupu od b, počinu je on neponištiv i samim tim to su nam malo b i malo d, počinu smo već košto reko ga do sada zaključili. U situaciji ako recimo baš radi to ovako, je to da je predkodno ne određujete first i polu skupove za sve ove neterminale, onda, naravno, opet možete zapisati, kad prosto sebe pišate neki postupak, pa ako smo već i dakle imali first od d, u nekom od ovih izraza kao što smo videli, pa smo odredili da je to first od b i onda ste negde zapisali, tako šta je vrednost tog skupa, sada kada dope dođete u okviru nekog sledećeg selekcijalnu skupa, do recimo first od d, da je vi odmog znate koja je to zapravo ima vrednost, ilnog možete, naravno, zapisati, da se prate izvoditi do kraja. Selekcijnu skup za osmu smenu b je tako, dakle, ovo malo b neponištivo, selekcijnu skup 9 sekundom smenem je first od d prim, ali pošto je d prim poništivo, onda i unija follow skupa od d sekundom. First od d prim se određuje na osnovu desete smene je tako, zato što gledam od d, d prim sa leve strane, desete i 11, ali na osnovu 11 ništa ne možete se vidi, i ovdje se vidi da obavezno počinjem malim a. Što se vidiće follow od d prim, 10 sekundom, pardon, gledam u gde se 10 sekundom nalazi sa desetne strane i to je u 7 ovoj smeni i vidimo da se nakon 10 sekundom ne nalazi ništo, tako da ono što je izda, zapravo ono što je izda celog kupne ove smene, što znači to je equivalentan u follow od d. E zato šta je follow od d? Ponovopogledamo sve ove smene, vidimo gde se d nalazi sa desetne strane i to je situaciju prvoj i u drugoj smeni, tako da nam zapravo treba first od a prim, ja tako to je ono što se nalazi izda d, međutim kako je a prim takođe poništivo, što vidimo iz ove ovde smene, onda takođe i ono što se nalazi izda a prim u ovim ovde smenama, a o to je zapravo follow od a. Tako je. E dobra, sad šta je first od a prim? Pogledamo iz ove ovde trebče smene koje se i odnosi na a prim, to je malo c, a šta je follow od a? To smo već imali u nekom trnutku, kad smo određivali, u principu pogledamo gde je desetne strane, još i jednom nemo ove do gramacic, ali znamo da imamo ono inutno smeni, tako da će to biti znaga za kraje sequence i savim tim, ovo je naš selekcioni skup. Selekcioni skup deset desmene počinje obovezna o takom malim simbolom, a tako da to je lako. I za jedanesti, dakle to je follow od a prim, follow od a prim, čini mi se da smo baš imali možda malo pre, dakle follow od a prim, gledam u deset a prim nalazi sa desetne strane, jo tako, to je ovde, što znači ponovu follow od onog što je sljave, a to je de prim, tako to je rekursivna definicija, znači ništa, i follow od de sekundum, to je ovo ovde. Follow od de sekundum je zapravo, opet gledam u deset, nalazi sa desetne strane, follow od ovog ovde de, i da, to smo imali malo pre, zato što follow od de je uprvo bilo first of a prim unija follow od a, a to je bio ovaj ovde de, te ćemo zapravo imati c i znak za kraje sequence. I ti smo odredili sve selekcione skupove, sada kada paćemo da vidimo dalje i naša grammatika LL1, tako, sve što je potrebno, je da pogledamo. Prve dve smene, pošta su one odnosene na neterminal a, i vidimo da imaju al tako potpno disjunkne selekcione skupove. Zatim drugi je dve smene, treća i četvrta ponovu imaju disjunkne selekcione skupove, za sada je sve vredo. Sada je sve vredo, disjunkne selekcione skupove, sedma se sama odnosi na d, tako da ove to je ono koji smo dobilio leon faktorizacijom, tako da ono sigurno sama s mislim disjunkne. Zatim imamo osmo i dve tu koje se odnose na 10 sekundom, one su disjunkne i 10 i 11 koje se odnose na d, one su disjunkne, tako da smo videli da sada probavimo transformacijama koje smo ispravili, smo i napravili jednu LL1 grammatiku. I to je bio cilj ovog našeg zadatka. Ostalo nam i još da prokomentarišemo nekoliko jednostavnih grammatika koja treba transformisati u LL1 grammatike. I oddivimo 3 neke jednostavnih grammatika.
 grematike, kada povljodamo prvu grematiku vidimo da postoji neki zajednješki prefixial, tako između prve dve smena i ona u suštini ne bi bilo ljeden grematika, zato što kada bi smo odredili selekcijni skup prve smene, on bi bio malo a, kada bi smo odrediti selekcijni skup u drugi smere, takođe bi bio malo a, to nama ne od kogvora, tezbog toga ćemo primjeniti levu faktorizaciju ili tako izbojiti to malo a. I praktsično reći da je s neko malo a, pa nakon toga neko s primje ili kako ga godno zovete, a to s primje ili b, a, b ili c, s, a i tako nešto i urađeno ovde i jedino što je ne terminal nazvan x. To, prakta bi bilo nam je dobiljna jedna obična levu faktorizacija. Štičove drugie male grematike, opet možemo malo da pogledamo ili tako kako ovde izgleda. I sad vidimo da ponobno prve dve smene imaju preklapojiće selekcijne skupove. Zašto imaju preklapojiće selekcijne skupove? Pa zato što kada ubacimo ono što se odnosi na ovaj neterminal b ili tako u drugu smenu, videćemo da ak ubacimo ovu treću smenu ili tako ono počinje malim b, teće zbog toga prva i druga smena biti preklapojiće. I sušninski selekcijni skupo za drugu smenu bi smo drejili kao first od ove desne strane. First od b je b imao d, te bito b uprmo bilo preklapojiće. E sada kako ćemo to rešiće? Pa kako možemo da rešimo, možemo da uzmemo i da ubacimo upravo da eliminisamo ovo b ovde i da uzmemo i da ubacimo ovo bd umesto neterminal b, takođe ubacimo i d umesto ovog neterminala i onda je o tako izdvojimo ono što nam pravi problem. A to znači, nakru što bi smo eliminisali ovo je ovde neterminal b, da ću bacili konkretno ove dve smene, primetili bi smo da je između ove smene i one koja bi bila dobijena takvom transformacijom gde ovo bd je ubaceno ovde, postoji zajednički prefiks, stoja ovo b i njega bi smo izdvojili ponovoprimenili neku leufaktorizaciju. I to je kako je zapravo i urađeno ovo ovde, dakle, ubacene su umesto ovog neterminala b, ubacene su ovi ovde terminali, nakon toga se primeni obočan leufaktorizacija i prosto imamo ovakvu jednu gramatiku. Sada ovdje je napravljena neka greška, pošto se od jednom pojavljuje neko xypsilon, a, ovo je da, dobra, ovo je po c, ok. Dakle, ovde nema ovoj poslnji koraka koji prestiva leufaktorizaciju, pa sam zato prosto poletala, ali u suštini, ono što bi ste radili je da izdvojite ovo ovde b i imate ostatki gde je ovo c, jedvan ostatak, a ovdje c, a drugi ostatak i tu imate onda ispravnu gramatiku. Dobro. I za treću gramatiku, ovde ja sam postoji leverekurzija, kako se ta leverekurzija liminiša, tako što kažemo s je, pa ubacimo ovu smenu, ubacimo ovu što znači absprim i cdsprim, gde esprim minimalno je epsilon odnosno prazna sekvenca, a pošto znamo da se ponavlja ovdje ostatak rekurziju, imno je otako, to je xipsiloncet esprim, gde je obovezna Dakle, to iš jednom realizujemo kao desnu rekurziju i to je ono što smo uradili ovdje, nakon te transformacije možemo proviriti po selekcionu skupovima, dobilismo LL1 gramatiku. I oštimo videti par primera neki gramatika, tako što i konvinovamo po tome, da li su LL1 i da li su LL0 es LL1, da li ne znam što je ovdje zadato u zadacima, pod a kaže ovako. Tako napisati odnosno, mi ćemo pro komentari seti gramatiku koja je LL1, ali nije LL0. U principu, kada hoćete da napravite gramatiku koja nije LL0, najlekso što možete da uredite, da dodajte neku epsilon smenu, zato što ukoliko to epsilon Dakle se pojavi u nekom stanju, ukome postoji bilo koja druga smena, gde je takva prsiranja, tako da će zapravo u domode radišit, dok na prsiranje se nalazi negde unutr same smene, postojeće, naravno, konflikte, data gramatika neće biti LL0. U ovom slučaju napravili smo prosto dve neke najjednostavnije moguće smene, S, A i S epsilon. Znamo da ovo je, ste LL1 gramatika, po tom što su njihovi skupovi selekcioni disjunktni. Selekcioni skupovi smena je ovo A, a selekcioni skupo drugi smena je po lvode, što je izone nuta praktično znak za kraj sekvence, tako da zadovoljavaju pravila LL1 gramatike, međutim znate sami, dakada si sko struiša govareći parser, ovdje se vidi da praktično data gramatika nije LL0. Sleće treba da bude LL0, ali da nije LL1, znacimo moramo napraviti neke zajedničke selekcione, skupova, odnosno preklapajiće, dovoljno je bilo ubaciti neku levu rekurziju, ili dakle da postoji neki zajednički pretiks i jasno je da data gramatika neće biti LL1, pošto se radi ove jednosti negramatici koja nema epsilom prelaz, ona će biti LL0, te smutime zadovoljili početniju ustlov za datka. I još treća je bilo da jeste LL1, ali da nije SLR1. I ovdje imamo dakle primer gramatike koja ima dakle ove neki statni na terminal S, kod koji postoji sa desna strane, dva ne terminala A, koja su praćeni različitim simbolima, dakle pojavljuju su različitim kontekstima, drugi put se i za nalazi terminal A, drugi put terminal B. Nakon toga smena, koja za odgovareći ne terminal S, koja je samo jedno od ova dva dakle B. I treća koja je so odnosina naravno ne terminal A, koji ovdje nije razrađen i koji je ovdje prazna smena. Dakle, ovdje gramatika je, da li će biti LL1, odredimo selekčno skupelom za prvu smenu, čime počinje ovo ovde, počinje o nim čime počinje A, ali pošto a uvek prazna sepence, onda zapravo je otako ćemo ta ideo preskočiti pošto je poništiv, i zapravo frskup od ove desne strane će biti ovo malo A, odnosno mali simbol A. Što će druga smene, selekcioni skupi jednako ovo malo b, što se tiče treće smene, dakle follow od A, će biti na osnovu ove prve smene koji uvidimo je otako, malo A i malo b. Tako da ste strane kada smo povedali, dobiljismo da ovo jeste LL1 gramatika. I sad da li ovo SLR1 gramatika, možemo je prepoznati SLR1 parser, kada formiramo, dakle naše inicijalno stanje, ono naravno izgleda ovakva tako tačka presiranja uvek ovdje na početku, osim ove pokranju smeni koje je zapravo, koja je praza smena, tako tu je tačka presiranja na samom kraju. I sad, ovdje se postavlja pitanje, dakle kada se radi operacije shift a kada se radi operacije reduce. Jasno da će se raditi operacije shift za terminal b, to se jasno vidi ovde, dakle, ako dođe malo b na uoz, parser će raditi operaciju shift. Međutim, operacije reduce će raditi za elementa iz follow scupa od A. Kao što smo videli, follow scupa od A uprvo predstavlja malo A i malo b, te uprvo ćemo imeti konflikt po simbolu d, gde ćemo je otako, prosto imeti, dakle, shift reduce konflikt. I ovaj na primer dobar jedan primer, gde se vidi u čemu je razlika između SR, 1 i LLR, 1 parserom, zato što LLR, 1 parser bi za uprvo ovu ovde smenu po A rekao, da je to A došlo. Zbog toga što je tačka presiranja, bila ispred ovog prvog A, te bi predikacijeni skup po toj smeni, bila ono što se nalazi i za tog A. To je samo ovo malo A, jer je to malo A neponištivo, dakle ne može biti preskočeno, tako siguro nalazi malo A. Te bi se u tom stvu, je reduce radio isključivo za malo A, a u ovom stanju bi shift radio za malo b i ne bi smo imali prijateljenu grašku. Tako da bi ova gramatika govarala i kao LLR1 i kao LLR1, međutim, ne kao SLR1, uprvo vidimo zbog toga, što se prijavljuju da će se raditi reduce i za malo B i ako stuštinski u tom momentu pasiranja malo B nije može doći na ulazu. Dobro, to su dakle bili neki primari. Sledaće što je naša tema je parse po principu rekruzinog spusta, koji upravo koristi ovu logiku LLR1-gramatika i funkcioniše baš na oni način koji sam rekla, da ćemo zapravo pisati neki kod, koji je na osmog u tog simbola koji se na ulazu, dakle dođe na ulazu, treba da odluči, dakle kuda pasiranji nastavlja i to je jednom top-down parse, dakle kreće od kore na samog stavla. Međutim, dakle to je kao što rekla naša sledeća tema koji nećemo obređivati u okveru ovog časa. Zdrav svima. Još jedna oblast koja je ostala vezana za top-down parse, i jedna od njihovih implementacija koja je... i to je implementacija preko rekruzinog spusta.
 To će biti prikazano pomoću ovog zadatka 6, koja je takođe bio rađer na predavanjima. I šta kaže zadatak 6? Komsrujite ti parser na principu rekruzinog spusta, koji odgovara propoznamacu aritmetriku izraza pomoćom sljedećih produkcija. I oddijem da imaju neke smene. Ideja rekruzinog spusta je da... Pesetiraj, znači, kao što rekao, je ona načina kako se može implementirati top-down parser. Tako da svaki od neterminala predstavlja jednu funkciju, koja će onda sam po sebi zvati drugje funkcije, to jestu drugi neterminale koji se nalazu okru njegova smene. Pa od atle i ideja za naziv rekruzinog spusta. Sada bi smo mogli da implementiramo ovakav parser. Neopohodne, pre svega da vidimo da li je uopšta LL1 grammatika. Međutim, je do neklaj bilo implicirano postavno koncertat kada jeste, ali u teoriji svakako to neopohodno provjeriti. I ako nije da se onda samog radi transformacije grammatike, tako da bude LL1. No svakako, osim toga mi treba da odredimo seleksijune skupove. Seleksijune skupove su nam ovde neopohodni, da bi smo mogli da odredimo u koju smenu ćemo zapravu koristiti u zavistości od toga koji ulazni karakter je prihvaćen. E sada, hajmo onda prvod odredimo seleksijune skupove za svaku smenu. Da krenemo od prve smene. Select od 1, kao što smo već pričali, određivanje seleksijune skupa je ili funkcionirše tako da će njegom seleksijune skup neke smene biti ili prvi karakter iz te smene, ili ako je jednako s Epsilon, ono što se nalazi posle te smene, to je s follow skup od te smene. A ja sad u ovom slučaju, prvo provjeram od takla za smenu 1, to bi trebalo da bude 1st od te. Sada te ovde nije puništivo, to jest ne može biti Epsilon, pa to onda možemo primjetiti da su prvi karakteri koji se nalaze u ovih smeni, zapravo 1st od p, da je onda p predstavlja, prvi karakter je od p, mogu biti leva otvrna zagrada, i karakteri. Dalje ako gledamo seleksijune skup za drugu smenu, ovde je odmah jasno da je to samo plus. Zalicim karakter za treću smenu, već je funkcija nešta druga, što bilo na to da je ova smena puništiva, ovde će seleksijun skup biti follow od elist. E, sada šta će biti follow elist? Ade se nalazi sve elist? Nalazi se ovde u drugoj smeni, nalazi su prvoj smeni, na kraju smene za neterminal e, e posle je, šta sve može slediti? Posle je, može slediti kao što se može primetiti u smeni 7, ili zatvorni na zagrada, ili, so obzirno na to da e predstavlja početu smenu, može se nalaziti znak za kraji sekvenci. Što to bi andabio seleksj skup za treću smenu. Seleksj skup za četvrtu smenu je opet first of pay, kao što smo već videli u jednoj i odranih smena, tako da stavišu seleksj skupu za prvu smenu, tako da će to biti isto i ovde, će biti dakle otvrna zagrada i i. Seleksj skup za petu smenu prestalja znak puta, seleksj skup za, sodvjerno na to da je puta jedini način kako može krenuti ova smena, seleksj skup za šesto smenu, opet zato što je telij list ovdje poništiv, to je se jednako sa epsilon, moramo da gledamo follow skup od telij list, telij list se može način poskup, može se primjetiti, ja se naziju četvrtu smeni, tako da gledamo follow od te, follow od te je first of the list, da je list može biti plus, takođe osim plus, sobsirom na to da je list može biti poništivo, može se naći i follow od elist onda, što smo već određivali ranije, to su onda znaci za kraj sequence, kao i zatvrna zagrada. I za kraj seleksjini skupove za sedmu smenu, predstavlja otvrna zagrada, seleksjini skupove za osmu smenu, predstavlja znaki, ovdje nije bilo neki pretranitilen. Pa dobro, sada kad smo odredili seleksjini skupove za sve smene, možemo se baciti i nekom struisanje samog parsera. Ja smo odlučio ovdje da odredim u javi, čisto da bi bilo malo praktičnije, da bi ste mogli da vidite da znaista radi nešto, ne samo da je neki besmislim kod. Možete sam već implementiralo neke funcije koje nisu naročito bitne šta će tačo da rade, kao što su excepti reject, u šteni ideja da reject treba da odbija sekvencu, except treba da prikate sekvencu i je naravno ne morate da implementirate. Na ispitu već, već samo da napišite poziv ovih funcija, takođe sam napisano neko prosto funciju read koje i treba da počita sveći karakter iz ulazne sekvenci. Kako ovdje odrađeno, ovdje je da ulazno sekvencu zapravo predstavlja string koji se me ovdje statički predefiniso i panti se index dok le smo stigli sa čitanjem i onda se samo incrementira index, relikom svakopoziva read. E sada znak za kraj sekvence ovdje će biti predstavljen sa ovom uspravom crtom u mestu sa onim standardnim znakom, čisto da bi nekako prikazalo kraj sekvence, a ona i tipičan znak nemože kao i jen karakter da se prikaže barem, ne da ja znam, tako da, čisto da ga prikažemo nekako. E pa dobro, kako funkcionišo onda implementacija ovog parsera, koji će imem rekuzirom spustu. Kažem sam već napomenno, to ćemo odrajeti tako što ćemo, svaki ne terminal imati posebno proceduru i uz ambisnosti u toga koji karakter se nalazi na ulezu, odrajeti i odgovarajuću stvari. Dakle, onda krećemo od procedure E, koja predstavlja netriminal E i to je onda neka funkcija, to je s metodom da ovde se zove prot. E. Dobro, što ona treba da rady? Pa kao što se ovde mi može prehrediti, ona se sam netriminal E, se s leve strane samo nalazi u prvoj smeni, tako da samo njega gledamo, ali suštini, on samo treba da pozove netriminale T i netriminale za E list. I onda bi se to manifestovalo ovde s posebnoj manjih ovih metoda. Dakle, to su prot. T i prot. E list.
 Naravno ja neam temetode treba možno, tako da su sada ih krajiram. PST Proma, mr. Jesi uvijemon Jedno od stvari od brvama stara da pokazim u lzka u svakod ovih funkcija, to jest metoda, sa svaki od neterminala, treba da se provere koji karakter se trenalotno nalazi u noveznoj sekvencij, to jest koji karakter smo posebni pročetali. Dali je to nešto što možemo u tom trenutku da primim? Tako da, prilikom u lzka u svaki od neterminala, treba da se procesira trenaltni karakter. To ćemo onda dražiti koji še imam switch komende i onda ja sam ovdje označio sa in u zni karakter pa ću u poslednim casema obrajeti odgovarajuće situacije. Sada kukretno u ovaj situaciji, mi možemo samo da gledamo, mi samo imamo jednu smenu, imamo za neterminale, tako da ako je ispravan karakter, onaj koji smo pročetali, definitiv ulazimo u prvu smenu. E sada, koji su ispravni karakteri zapravo. Gledamo seleksioniskupeve, možemo primjetiti seleksioniskupe za prvu smenu, to je stona i da je neterminal s leve strane, seleksioniskupe su tu otvorena leva zagrada i karakteri. To znači da ćemo tako prepoznati prvu smenu i da su to onda sa intimim karakteri koji su dozvoljene sa nalazenu ulazu ako treba da suđu u ovu smenu, to jest da se prepozna neterminale i onda ćemo to prikazati ovako. Dakle ako se, ako je in karakter otvorena zagrada ili i, onda treba da se pozoluju procedure t i procedura list. Žutim šta treba se radi ako nije ništo do ovoga, pa treba da se odbije sekvence jer mi nemožemo da prikvatimo to što se nalazi ulazu onda, nije ispravno. Ovdje ćemo to prikazati sa pozijom reject metode. Ovdje mi samo tražite da dodam troz kolu zulu, zato što reject baca exception koji mi onda u main metodi obrađujemo, brati ću se kasnije na main. E sada. Dobro, to bi bila procedura e, da ovo default u suštini, u suštini predstavlja samo već znate u javi, samo predstavlja defaultnu grano. To jest ako nije, nismo ušli ni jednu drugi grana u svicu, on će ući default. Dakle ako nije ili otvorena zagrada ili on će ući od. Dobro, slučaj procedure e t. To jest ako procesiramo neterminal t, šta smo imamo da prikvatimo od karaktera na ulazu? Pa i da vidimo gde se sve t nalazi. T se nalazi samo u četvrtu smeni, tako da onda treba da gledamo seleksijunisku za četvrtu smeni. Dakle to bi bili opet iz tova dva karaktera. Mogu onda da kopiram ovo šta više. Dakle ako se na ulazu nalazi opet otvorena zagrada ili karakteri, ne treba se zove ovo, tako da ću to izbrisati. Već šta treba se desi? Treba se zove procedura p i procedura tlist. Ono sto treba se obrade tine terminali. Zabijemo se da se zove opet otvorena zagrada ili karakter. Dobro. Kako bi smo onda obradili proceduru p? Vemo da vidimo šta kako izgleda neterminal p. E pa dobro. Neterminal p izgleda tz. njegova obrada, odnosno njegova smena koja presljala smenu 7, izgleda malo drugačije. On već ovdje ima konkretne terminale. Kako su onda obradio terminali ovdje? Presega, hajmo da pogledamo za početak šta je selektionisku za sedmu smena. Za sedmu i osmu smena, da se obradio neterminal p. To su znači otvorena zagrada i karakteri, što ima smisla. To da možemo ove primetiti, ja se zaistan alazim to na ulezu. Onda možemo to prikazati ovako. Ovde već imamo više situacija, kako će se obraditi neterminal. Dakle, ako se nalazi otvorena zagrada, to će biti onda smena 7. Vrato će se na to. Ako se nalazi karakteri, to će biti osmu smena. E pa dobro. Šta onda treba da se odredi? Pa. Ajmo prvo osmu smeno da odradima. Mi znamo da se na ulezu nalazi karakteri. Sobzinalno to da smo mi zašli u ovu granu Breika. Ovde, naravno, treba da se pozovir i čekt. I ovdje treba Breika dobro svoda. A da nepravio neku naročitra razliku. Veš to da ne. Dakle, mi znamo da smo pročetali karakteri. To znači da treba da pročitamo sljedeći karakter. I onda ćemo pozvati metodurid. Da bi promenili karakter koji se nalazi na ulezu i sepenci. Er smo u neku ruku procesirali karakter. To je stvono što se nalazi tu već. Došli smo do toga konkretno šta se nalazi na ulezu. I nekako smo absolvirali u koji s meni bi se to nalazilo. Naravno, ovo nemara baš ovako da se radi. Samo je bitno pratiti tu konvenciju gde se radi ovo pozivo već rid metode. Kao što možete primjetiti. Ja sam te ridove uvek radio. Kao što možete primjetiti. Ovo te. O što bi se ovde pozvala procedura E. Rida sam radi uvek pre samog sviča. To je pre detekciju koji je to taču karakter. E pa dobra. Mi znamo da se ovde nalazi i rid. Da se ovde nalazi i. Dakle možemo preći na slajjeći karakter. To bi bio presevljone onda obradu osme smene. Kako bi smo onda sedmu smeno obradili? E pa. Šta su nju i radi? Dakle procesira se otvrna zagrada. Što smo već videli kako se procesira konkreta na terminal. Tako što pozovimo samo vidno dodu. I onda nakon toga. Treba da se pozove procedura E. Jer treba da se obradi tajne terminal. To radimo ovako. I da se dobro se nalazi. Nakraju se nalazi i ovde zatvoren na zagrada. Tako da mi treba da procesiramo i to. Kako se to radi? Pošto uzimamo da će taj karakter već biti pročitani. Jer kad dođemo do konkretnog. Pošto kad dođemo do konkretnog karaktera već neko pročite o to. Mi možemo ovde napravimo proveru ako se nalazi zatvoren na zagrada. Da se pročita novi karakter. Kao što smo odradili već za karakter i za otvornu zagrada. Šta treba se radi ako nije zatvorn na zagrada? Treba se ređaktoj seqvence. Ovo bi su što ni svičali logika kao s ovim svičom ovde. Ovo bi su što ni prestavljalo ob...
 u procedure P, onosno ne terminal P. Šta nam je još ostalo? Evo procedura T list. Switch in. Hajmo ovidimo u kojih smenama se sve je on nalazi, naziv su smenama Pt6. Hajmo ovidimo selekcije na skupove za Pt6, zvezda, znači znač puta. Ako se nalazi zvezda, to znači da ulazimo u smenu Pt. Smena Pt se obrađuje tako što procesiramo puta, tako da ćemo onda to dodarimo već na pozat način. Ako idemo novih karakter, pozovemo proceduru P i proceduru T list. Ako se nalazi u druge strane, nalazi nešto dostali. Dozvoji karakter za proceduru T list. Znači da krati se kvencija ili zatvara na zagradja. Opet naglašan na znači za kvenci ćemo ovako brađiti. To znači da ulazimo u smenu Pt6. Smena Pt6 je epsilon, tako da ovde faktički nemoramo ništa radimo, jer nema nikakaj karakter koji treba se obrađiti, samo treba se preskočio. Možemo samo brajko da napišimo. Opet poveć poziti primjerima, u default slučaju treba se ređakutuje. Procedura E list. Nalazi se u dve smene. Njegova implementacija, tako da kažem, i to je u smenama 23. Poglima s elekcijem u skupu s smenu 23. Selektivni skup sa smenu 2 je plus. Selektivni skup sa smenu 3 predstavlja zatvara na zagrada i znak za kraj seknici. Ovde ništa ne radimo, sojderamo to da je u smeni 3 elis, jednako samo sa epsilon, a u default slučaju opet ređakut. U slučaju plusa. Šta radimo? Ročitamo novik karakter. Pozolimo proceduru T i opet pozolimo proceduru E list. Ovde dodam atrovskog ozulu. I to bi presile o neku implementaciju ovih procedura, t.e. rekuzinog spusta se ogopila. E sada je za kraj, neko treba naravno pozove početnu smenu, što je ovde smena E. Šta se onda radi? Ovde za početak se pročita ulazni karakter, pozove se procedura E. I još jedna stvar je bitna na kraju do sodradi. Da proverimo šta je poslini karakter. Dalje je poslini karakter snak za kraj sekvence? Jednako i ako jeste da prihvatimo sekvencu, a ako nije da odbijemo. Ovo je zbog onega što imamo uvekono implicitnu smenu. Da je zapravo početna smena presile lepozim. Ove prve smene plus znak za kraj sekvence. E pa dobra. Ovde presile o neku implementaciju, onda rekuzinog spusta. Evo možemo na nekom primeru koji se možete prepisali. Proverimo da je ovo radi zapravo. Ovo je ispravna sekvenca, tako da zaiste i radi. Ako bih dodo drugi strane, nešto što nije ispravno. Sekvence će biti odbijena. Naravno ja sam ovu javi iskucao. Drge strane na vežbama imate ovu nekom paskaloidnom kodu napisano. Preniju presim je prilično slično. Brnio kreni. Tako da je to možete pogledati. Kako je to odrađeno tu. Da bi kod malo lepši izgledalo. Nije u sign case granama. Bilo ispisano šta treba se desi u tom slučaju. Već su bili u pomoću labela i go-tume. Bilo redirektovano na drugi deo. Ovo da je zaprav rad implementacija i hendlovanje svaki od ovih grana. Case granasviče. Naredbe. To bi bio to u suštini. Generalno šta možete očikivati na ispitu od zadataka iz ove oblastije. Da ili vi sami za neku gramatiku koja je vam je zadata da naprajte rekuzivis pust. Ili da možete čekati odrajiti suprotno da na osnovu rekuzivis pusta vi naprajte onda gramatiku. I na značnega šta već. Mislim ima to par primera koji da možete to proveš, ba ti još, ali to su neki genal najčešći tipom izadataka. To bi bilo to.
