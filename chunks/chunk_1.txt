# Lekcija o HEX fajlovima

Zdravo svima, u ovoj lekciji ćemo proći kroz proces formiranja HEX fajlova. Videćemo jedan format HEX fajlova, alate za njihovo formiranje i dotaknuti ćemo se pisanja linkerskih skripti.

## Uvod

Najpre, kao podsetnik, čemu tačno služe HEX fajlovi? Vratićemo se na primer iz prethodne lekcije u okviru koje smo instancirali jedan mikrokontroler i inicijalizovali njegovu memoriju sadržajem jednog HEX fajla, konkretno `program.hex`. Nakon inicijalizacije memorije mikrokontrolera datim HEX fajlom, mikrokontroler ispoljava sledeće ponašanje: periodično invertuje vrednost na svom pinu PC-0, čime u suštini postižemo treptanje diode. Mikrokontroler ispoljava ovakvo ponašanje zato što HEX fajl kojim smo inicijalizovali njegovu memoriju sadrži podatke i instrukcije, kao i adrese na kojima se ti podaci i instrukcije moraju nalaziti da bi se ispoljilo upravo ovakvo ponašanje.

## Format HEX fajla

Format kojim se postiže mapiranje između podataka i instrukcija, odnosno niza bajtova sa jedne strane i adresa na koje te bajtove treba smestiti, videćemo na primeru `program.hex`. Format ovog fajla nosi naziv **Intel HEX**, a njegove detalje možete jednostavno pronaći na internetu pretragom za "Intel HEX".

### Struktura Intel HEX fajla

Intel HEX fajl se sastoji od proizvoljnog broja jednolinijskih rekorda. Svaki rekord mora da odgovara precizno definisanoj strukturi, što znači da svaki rekord mora početi dvotačkom (`:`). 

1. **Veličina sadržaja**: Prve dve heksadecimalne cifre nakon dvotačke predstavljaju veličinu sadržaja rekorda, izraženu u broju bajtova.
2. **Adresa**: Naredne četiri heksadecimalne cifre predstavljaju adresu u memoriji na koju treba smestiti sadržaj rekorda.
3. **Tip rekorda**: Sledeće dve heksadecimalne cifre predstavljaju tip rekorda. Postoji veći broj tipova, a nama su od značaja tipovi `00`, `01` i `04`.
   - **Tip 00**: Označava rekord tipa "data", što u širem smislu obuhvata i podatke i instrukcije nekog programa. U konkretnom primeru `program.hex`, sadržaj svih ovih rekorda tipa `00` predstavlja podatke ili instrukcije našeg programa.
   - **Tip 01**: Označava rekord tipa "end of file", što znači da se ovakav rekord nalazi isključivo na kraju Intel HEX fajla.
   - **Tip 04**: Predstavlja rekord tipa "proširene linearne adrese". Rekord ovog tipa nam služi za prevazilaženje sledećeg problema: sa četiri heksadecimalne cifre možemo adresirati samo `2^16` bajtova, što je često manje od veličine adresnog prostora današnjih procesora. Rekord tipa proširene linearne adrese rešava ovaj problem tako što svojim sadržajem definiše dodatne heksadecimalne cifre koje učestvuju u adresiranju.

4. **Sadržaj rekorda**: Nakon heksadecimalnih cifara koje predstavljaju veličinu sadržaja rekorda, adresu i tip rekorda, nalaze se heksadecimalne cifre koje predstavljaju sadržaj rekorda. U tekstualnom editoru, one su najčešće označene crnom bojom u slučaju rekorda tipa `00`.
5. **Kontrolna suma**: Poslednje polje rekorda jeste kontrolna suma koja se nalazi na samom kraju.

### Rekord tipa proširene linearne adrese

Rekord tipa proširene linearne adrese utiče na sve sukcesivne rekorde do pojave novog rekorda istog tipa. Sadržaj ovog rekorda (npr. `0x0800`) postavlja se na najviše bitove adrese, dok se na niže bitove adrese uzima adresa iz samog data rekorda. Na primer, ako imamo rekord tipa proširene linearne adrese sa sadržajem `0x0800`, a data rekord sa adresom `0x0000`, tada će se sadržaj data rekorda smestiti na adresu `0x08000000`.

## Alati za formiranje HEX fajlova

Svi alati koji su nam neophodni mogu se preuzeti sa Moodle platforme u okviru kursa "Mikroprocesorski sistemi". U pitanju su sledeće tri arhive:

1. **GNU ARM Toolchain**
2. **Build Tools**
3. **Eclipse**

Ove tri zip arhive treba samo raspakovati. Ja ih već imam preuzete na svom računaru, tako da ću odmah preći na njihovo raspakivanje. Alate možete raspakovati na bilo koje mesto, dakle, neophodno je samo da preuzmete ove tri zip arhive i onda ih možete raspakovati gde god želite. Nakon raspakivanja, dobićete direktorijum nazvan `GNU MCU`, u okviru koga će se nalaziti alati za prevođenje, pomoćni alati i razvojno okruženje Eclipse.

### Dodavanje alata u sistemsku promenljivu

Pošto ćemo u ovoj lekciji ove alate pozivati direktno iz komandne linije, možemo putanju do ovih alata dodati u sistemsku promenljivu `PATH` kako ne bismo morali stalno da navodimo punu putanju do njih. To možemo uraditi tako što ćemo u Windows pretraživaču ukucati "environment variables" i dodati za tekućeg korisnika u promenljivu `PATH` putanju do direktorijuma `gnu-mcu\arm-none-eabi-gcc\bin`.

### Pretvaranje ELF fajla u HEX fajl

Da bismo dobili HEX fajl, neophodno nam je da imamo ELF fajl koji možemo pretvoriti u odgovarajući HEX fajl. Zato ćemo prvo krenuti od pisanja jednostavnog programa.
