 u kvaliti vesti su koristili ovu ovde tehni koji mi u gomilu broj, veliki broj proksi servera, na kome se keširaju one naslone strane, tako da kad vi čitate vesti, vi čitate te lokalne sa nekog servera, a te kada se jednom u 5 minuta promeni neka vest, onda se ode i radi se invalidacija na tim server. To se ponaša kao da vi sigaćete istu stranicu, ali li ista stranica. Morala da se napravio nekako synchronizacija u pozadini, a izmjude u tih svih koji radite čitanje i upis u suštini, to je readers writers problem samo na malo višem nivou. Napravljeno je sve ono što ćemo mi koristiti ovdje. Šta smo rekli, u čemu mi treba da vodimo račun ovde? Mi želimo da smanjimo vreme izvršavanja naših programa. Želimo da imamo mala kašnjenja, da nemojmo previše promenjivih korist koji nešto radimo i da nam se odradi neki posao. Sada taj koki će biti posao, šta može da se odradi u paraleli, to ćemo imati nešto što ćemo imati, a kors grain, medium grain i fine grain. Fine grain je onako kako smo mi do sad na učili da pišili, ili možda čak i nižno toga, kako bi se to odradila na sembleru. Doki na druge strani su protost toga, gde kašete ja želim da se ovo i onda kašete šta odradi, baš me briga kako će se to odraditi, kako će se napraviti synchronizacija. Kors grain, krupno zrno, vrlo, široko, vi kažete ja želim da se ovo odradi, baš me briga kako. Dok od fine grain, vi kažete ja želim da se to baš ovako odradi i onda do najsitnijeg detalja specificirate kako neki posao treba da se odradi. Medium grain je ono što se navoze izmiju ta dva, nećemo koristiti medium grain, ovo je na ovom predmetu, ako znamo u do detađi i ako ne znamo baš u detađ. O fault-overant sam malo čas pominio, o tome treba voditi računam, imate posivom predmet na masterstudiuma koji se bavi sistemima sa umanjenom o setlju ušću na odkaze i raznih algoritama kako se to radi. Jedan od najpoznatih algoritama je business in general problem, problem vizantijski general, kako njih synchronizovati da odradi neki posao. Mi nećemo raditi taj problem, ako je to jedan bitan synchronizacijan problem na ovom predmetu. Njega ćete, verovatno, slušati na tom predmetu, sistemi otporni na odkaze. Mi sovdaj nećemo time baviti i kako da nešto garantujemo, ne garantujemo ili obezbedimo. Ovi naši sistemi će biti raznorazni i mi ćemo probati da pravimo na taj naš sistem funkcioniše. Za projeka ćemo uglavnom praviti da to nešto funkcioniše. Na primer, rezervacija avio karata ili berezanjsko poslovanje ili radar ili distribujerana simulacije. Dok ćemo se na predavanjima i vežboma fokusirati na samosihronizaciju i komunikaciju. Ajde da vidimo jedan trivijelan problem. Nadam se da znate, da mi smo ovo služenije unibitom kakvo je programski jezik, bito nje šta može da bude rezultat izvršavanja ako su nam ovo ovde dva procesa. Znači, za sada ćemo termin proces i termin thread odosno nit koristiti kao synonime. Što se nastiča, oni mogu biti synonimi jer procesi mogu da imaju deljene stranice. Ako se slušali predmet architekturji organizacije Računara 1, tamo smo videli da više procesa mogu deliti istu stranicu. Što se nastiče, ako dva procesa mogu da dela istu stranicu, oni koriste deljene promenjive za radar, a mi imamo naše konkurentno programiranje. To što je možda malo veće vreme koje potrebno se parkira ili isparkira proces u odosno nit je nam za sada sasim sve jedno, to su neki troškovi parkiranja, isparkiravanja, to nas ovde za sada ne zanima. Ajde mi u šta je ovo jednaš program? Kaže x je jednako minus 1, y je jednako minus 1. I proces p je 1, kaže x je jednako 1, y je jednako 2, proces p je 2 treba da pročita vrednosti xy, neksme s njih lokalne promenjive, a x2 i y2. I sad nje pitanje, šta je rezultat izvršavanja ovako nečega? Šta možemo dobiti kao rezultat izvršavanja ovako nečega? Evo oddaj sam ja to sve prepisao. I sad nje pitanje, šta sve možemo da dobijemo? E, da bi smo to znali šta se možemo dobiti kao rezultat, moramo dodemo da popišemo naše instrukcije koje se izvršava. Evo oddaj smo ja popisao. Evo p0, proces 0, ono na početku što se izvršava, pa ima instrukciju 1 pa 2, pa proces 1 ima 2 neka reda, kaže x je jednako 1, y je jednako 2, pa ovaj drugi deo kaže y, x2 je jednako x i p22, y2 je jednako y. Sad nje pitanje, šta je mogući rezultat ovako nečega? Bajde, ja ću sada pišem, pošto će se uprvo izvršiti sigurno p0, pa p01 pa p02. Pitanje, šta će biti rezultat? Možda se izvrši p1. P1, 1. P1, 2. P2, 1. P2, 2. Šta je rezultat? x2 je jednako... ne imam čemu šta sam je napisala, x1 se prvi izvršio, x je jednako 1, znači x2 je jednako 1 i čemu jednako y2? y2 to je ovo ovde p22, to se izvršilo posle p12, to znači da je y2 jednako 2. Ovo je 1 mogući način sceneri izvršavanja, cada prvam da uplićem ove ovde dva procesa koji mogu da se izvršavaju u paraleli. P1, 1. Pa ovde možda se desi p2, 1. P1, 2. P2, 2. Šta je ovde rezultat izvršavanja? Ajde, ne vidimo. P1, 1. X je jednako 1. P2, 1. X2 je jednako 1. Šta se ovde desi? P1, 2. P2, 1. Ipsilon je jednako pa ovde se ništa nije promenilo. Y2 je i dalje jednako 2. Možda se desi da imamo različito učešljavanje naših istrukcija, a da dobimo isti rezultat. Ajde, p1, 1. P2, 1. P2, 2. P1, 2. Opet je moguće reto staviti izvršavanje. X je jednako... X2 je jednako... X2 je jednako X. X smo promenili ovde. Je jednako 1. Če to se ništa nije promenilo, ali što se Ipsilon atiče, Ipsilon 2 je pročito staru vrednost. Ipsilon 2 je pročito staru vrednost, stara vrednost je minus 1. I ovako mi imamo veći broj različitih načina izvršavanja. Da sam ja napisalo sad sve moguće načina izvršavanja? Nisam napisalo sam neka tri, verovatno ima još. P2, 1. P1, 1. P1, 2. P2, 1. Šta je rezultat ovdog... izvršavanja? X2 je jednako... minus 1. Čemu je jednako Ipsilon 2? Ipsilon 2 je jednako... 2. Je li ima još? Ima P2, 1. P1, 1. P2, 1. P1, 2. A to je X2 je jednako... X2 je jednako minus 1. Ipsilon 2 je jednako minus 1. Znači vidite imamo opet neki drugi red da sad izvršavanja? Ima još? Sad sam ja zaboravi ove permutacije, variacije kako ide ovo idemo. Mislim ima još. P2, 1. P2, 2. P1, 1. P1, 2. Rezultat isti kao ovdog vara. I to je valjda 6. Valjda sam izbrew sve, 1, 2, 3, 4, 5, 6. Valjda nema viš!