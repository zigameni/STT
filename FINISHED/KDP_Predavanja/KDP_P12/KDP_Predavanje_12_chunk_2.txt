 dobaralo system.out u programu skom jeziku java i učitamo paket koji se zove time da bi smo mogli da radimo u tiskinim metodu sleep ili nešto stvobi možda aličila na nešto stvom u klasi pred. Evo našo function main, ovdje imamo ključule function, imamo function main koje nema nikakvih hergovenata imamo otvorenu vipičati u Dragaradu i krećemo da navradimo šta želimo da se desi, kežemo full, dvo tačka jednako, make napravili komunikacijoni kanal beličine desi. Imo go function, znači ovog go function, a na ovom ovde mesmu smo definisali fungti, šta sam sad rekao? Napravili smo inline funciju, nemo definiciju nekog treda negdodalje, znači uspislki nijamo lambda, ovde koji smo napravili i nismo napravili naziv tepne, možemo da naprimu naziv funcija, onda kažemo go function i izbršoje se, ali ovo ovde neimenovanja funcija koje se se izvršiti u zasemom to. Kažemo go function i kažemo time, tačka, sleep iljadu i onda u one komunikacijoni kanal full kada se pisi brednost 1. Imo još jedno dole go function, isto neimenovanu funcju napravili smo je kao lambda i rekli smo go izvršili se u nezavisom tohu dole, time, tačka, sleep, spavaj jednu milisekundu i onda vrati brednost 2. Ovde ćemo ispisiti format, tačka print, first dobuci full brednost 1 i fnt, tačka print, second full, u cidrugu vrednost. Sa ide da isprvamo šta će ovaj ovdje napraviti. Ovde u govom programstvom jezike možete skimite ukuženjem, ako želite da programirate u ovom ovdje programstvom jeziku, ako od kući da pišete programa, ja će vidite ino puno nekih firmi koje koriste ovaj programstvji jezik, jedno vreme je dosta bio koristim u bumni, da se doli i dalje koriste ne znamisli se raspitivao od onda, razlog, mnogo lagu će pokrećuniti, jedno treba mi 1000 niti go i 1000 niti mogu da pokrene. Prvo jednostavno se sve to pokreće, način ako imate ogromne data centre, ovaj programstvji jezik je veoma jednostavan za kurišćenje, način imamo veoma jednostavan na način, kako možemo da pokrenemo celu ovu ovde s calameri. Neće da radim download, ja će da oddje ovde u playground, da se igra malo. I da vidimo šta radi ovaj ovde nas programčić, go1, 18, šta radimo, imamo package main, znači ono iski programčić, run, da vidimo šta će se desiti, trebamo neko vreme malo da je privede, da pusti i vidite, ispisali smo prvo first, da je jednako dva, pa second da je jednako jedan. A ovo ovde se izvršilo kao nezavisna funka, vidite, nismo napisali go function, nismo funciji dali ime, i to se izvršilo, znači nije nikakal problem što o funcije nema imelutistimi, to je, aha, kako ona napravljena. Go function, a onda dole ovde imamo, tisti nije otvornu, zatvornu, zagraditu, sa argumentima kako će to sve da se izvaši ispo dole, i ovaj ovde je pozvan da odradite. Zvršilo se da smo ovde stavili možno drugačije, da je ovaj ovde radi je slib, i dobili ispod drugačiji ispis, znači izpisali bi se prvo da se ovo ovde niti zvršilo, pa da se ovo ovde niti zvršilo. Vidite, ovo ovde dva se ne izvršavaju, sekvim celno jedan pa drugi. Ovo da ja mogu dvijet pisan sva dvijet. Hvalo. Imoli bi smo ispisano zdravo, pa onda ovo ovde dole što se dje se moži, ove sve stvari se izvršavaju u zasednim ole. Piske go function, čim je go function to je tret, znači vidite trivila način, veratno najjednostavnije od svih načine, su smo da sada gledali, da pokrenete neku njih. Ovo što je na pružu još, ovaj naš programski jezik go? Imovo mogućnost za select na aren. Samo što znači, znači, vjake spali, imali smo selectim programskom jeziku c. A, ovu baš nije namenjen o tome. Ovo ovde je ono što smo imali kao alternativnu komandu. Možemo da stavimo pri čekaj poruku i od avde, i od avde, i od avde, odnači, navedemo puno razliciti. Besta od akve želimo da čekamo naše poroke. Ista onda stvar koja je bila dobra u programskom jeziku csp ovde je implementirana. Gde možemo da kažemo, čekam da primim poruku. Čekam, tu sam zablokiran i čekam da se nešto pojavi. Znači mogu da kažem case, ako mi stigni poruka po kanalu 1, ako mi stigni poruka, nešto što nisu imali u opštom programskom jeziku java. Tamo to nisu mogu da naparimo, pa što ako jednostavno morali smo naparimo zasebne niti koje su radi bile neka čeka. Kako se sečite zadatka sa četom iz programskog jezika java, morali smo da pokranimo različite niti, gde bi jedna niti bila blokiran na natastaturi, a druga niti bila blokiran na čekanju poruka koja dolaze se internet. Ovde jednostavno možemo samo da stajemo da su to različiti ovi kanali od akve nešto dolazi i da dobijemo poruke. Da dobijemo, sad sam rekao da dobijemo poruke, zato smo s nom imali u programskom jeziku, koji se zadova CSP, ali čisto jedna mala napomena. A u programskom jeziku koji se zove GO, a mi možemo da stavimo ovo naše blokiranje, odnosno ovu alternativnu komandu. I je samo za prijem poruka, je go možemo da stavimo i za slanje poruki. Znači vidite? To je nešto što u sreštini postoji u nekim varijantama CSP-a. A mi nismo razmatrali da to tako može da se realizuje, da u alternativnu komandu možemo da stajemo i prijem i slanje. Ali varijante CSP-a u sreštini koje su opisane u ono naše tizi za ovaj prednet, koje su zove Foundation of Multitrp, Paralleland, ismice programing ili kako godo da znam. Tamo je opisane. Može i tako nešto da se... Nismo koristili varijantu bez toga, a u našem zadačima, ali postoje mogućnost i neko je napravio. Bukvalno uzio je to kako piše tamo o nek njizi i je baš identično, zato sto ovo ovdaj pake treba da liči na neki programški jezik koji je više granga. I taj programški jezik, kuzni ste gleda, to ovo dosta možda liči na C. Koristi se viti časta zagrada, imena promenjiva bi trebala da su napravljena koristići... A kako se zove... mala slova, tako da ima dosta stvari koje smo imali. Ja sad ima i nekih malih razlika. Znači vidite da postoji dvo tačka i jednako, ali ako pogledate temo desni dve vek rana, vidite ćete da postoji i jednako. Koja je razlika između dvo tačka i jednako i jednako. Ako je dvo tačka i jednako, mi je u sustini tu krejram objekati. Kao da smo odradili deklaraciju i definiciju naše promenje popunili smo. Kada kažemo to votačka i jednako, kao da smo odradili nju, odnosno napuni taj objekat napravi ga ako ne postoji. Ako pogledate dalje, ako se malo zagledate, bez neke promenjene mi čak i ne moramo da navodimo tipove. Ove ovde programski jezik je tako napravljen da može da prežiri bez dosta tipova podatak. Za komunikaciju i kanala smo mi reklji da ćemo raditi sa integerima sa celobreni veličinama, ali ako pogledate dalje, da smo napisali int, for int i jednako nula i mali od 10 plus. Piske for i dvo tačka i jednako nula. U sustini ovo ovde je ekralentno, ono me for int i jednako nula. Od dvo tačka i jednako nula kaže napravio odgovarajuću promenju. I kog je tipa, pa ako nismo definisali kog je tipa tu, one sa leve, sa desne strane bio tipa celobrojnog, to znači da ćemo prebaciti danam naša promenjiva i bude celobrojnog tipa. Šta ovde imamo? Va neka komunikaciju na kanala. A kak li su ti komunikaciju na kanale? Piske c, dvo tačka i jednako make channel int i hvijt dvo tačka i jednako make channel int. Zato što ne imamo brojkicu navedeno posle ovog tipa. Komunikaciju na kanale su u sustini veličine nula. A to znači ove dve strane moraju da se nađu da razmene taj objek. Nije ono komunikaciju na kanale veličine jedan, a je ja upišem objehat jaseni, se zablokirav, ja mogu da idem dalje. Ovo se ponoša kao da imamo veličinu nula. Ove znači one i što šalje, mora da se zablokirav, dok se ne pojavi one i što uzima, da bi nastavili zajedno danje.