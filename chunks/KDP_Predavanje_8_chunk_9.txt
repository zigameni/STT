 segmentu segmentu kad se premešla mi segmentu segmentu, fyrla jednostavno, prešla sam iz jednog segmenta u naredni segment i ništa nisam u ovom segmentu, znači uvećem za one naredni, umanjim za postojeći i onda pozovem istu stvar kao maločas. Pozovem istu stvar kao maločas. A ako uzmete da pogledate, a ovo ovde je isto kao da sam pozove metodu leave od segmentu. Če vidite, ovo ovde dva reda su isti tako da u neku i variantu i ovogo ovde je rješenja možete vidite čak i da move metoda a kaže pozove leave, da se odredi posao, pošto vidite da je posao identičan kao one posao. Maločas pošto javajći jeme ekskuzivno pravo da korišće monitora, nemoram to pravo ponovog da traži. To je sve osuštini što se monitora tiče i to je sve što se konkurentnog programiranja tiče. Nismo ovim ovde završili što se predavanja tiče, a sve ono što se odnosi na konkurentno programiranje. Počao od dolge trenutka, pa nadalje na predavanjima ćemo razmatrati isključivo distribuiranu programiranje. Za konkurentno programiranje smo mi videli više stvari. Videli smo rad sa promenivama gde nemo usluge operativnog sistema, pa smo tu videli nekih 5-6 algoritama. Više videli smo algoritam koji je koristio samo našu promenivu jednu lup i zaposlenu čekanje koje imao jednu izmenu, jedne promenive, ali to nije bilo baš mnogo pametno, nismo imali nikakav redosled i koristio i specijalnu istrukciju da postajimo set na odgovarajuću vrednost, get and set ili kako da se ne zove tam metoda, pa smo onda videli ok, ja može bez toga, videli smo da može, to je bio petersenova algoritm, pa smo videli type breaker algoritm, pa smo videli bakerie algoritm i onda smo videli i 3 algoritma koji garantuju redosled, to su bili ticket anderseno i cel ha algoritm. Nakon toga smo videli kako se koriste semafori, semafore smo razmatili sa algoritmskog stanovišta, videli smo kako se izbegava deadlock, videli smo i nekoliko tehnika koji mogu uvek da nam pomogu na kudršavanje problema, nakon toga smo vrlo kratko videli kako mogu da se koriste regioni, regeone koji izradite nam vežboma, postoje u progromskim jazicima pa zato ovu buhvaćeno time, a mi smo se ovde na predavanjima fokusirali na monitori, videli smo monitori sa disciplinom signal and wait i sa disciplinom signal and continue, videli smo da postoje neke tehnike koji mogu možda uvek da se primene, imali smo način broadcast, uslova ili smo imali covering condition koji su budili malo više ili smo imali ono minimalno budženje kod slučaja da smo imali tehniku passing the condition, videli smo da monitor ne smedase zablokira dosta dugo, jer onda zabranimo bilo, kome bilo šta drugo da radi i videli smo kako može da se realizuje rendezvous koristići ovaj ovde ping pong između naših procesa. Dali možda imate nekih pitanja? Ako ne imate pitanja, to je onda sve za danas što se predavanje tice. Prijatno, vidjenja.