 Susec broj 1, na manjem nivou nego ja, ja mogu da preskočim tog suseda. Ako je suset, taj porad mene na istom nivog da sam došao ja, onda moram da proverim da li sam ja poslednji. Ako sam ja poslednji, ja moram da čekam. Ako nisam poslednji, ja mogu da preskočim i tog suseda i da pređim na sledaču, proveram sledčih suseda. I tako dok se ne isproveram sa sim u nekom trnutku, ću ja morati možda da sačekam, zato što sam došao poslednji. A dobro. I to je to. Šta smo rekli, u svakoj iteraci čeka onej poslednji ako nije jedini. Algoritam će u svakoj iteraci izbacivati po jedan proces. Jedan proces manje to znači da će na kraju nakon n-1 iteracije biti samo jedan proces koji ulazi u kritičnu sekciju. Hajde sad dan osnovu ove pričice da probamo da rekonstruišemo, odnosno da napišemo kompletan algoritm. Šta smo reke? Imamo in. In kaže dokle sam ja stigao. Imao last koji kaže koji je došao poslednji na neki korak naše iteracije. I sad da posmatramo samo ovu ovde našu petlju, ovo spojljašnje vile. Ne moramo da posmatramo. Zato što je to ako želimo veći bude puta da ponojimo naš program. Zasadno zanima samo ovaj ovdje delo. Šta radimo? Idemo i prolazimo kroz n-iteracija. Moramo da prođemo kroz svej iteracije, zato što smo rekli, to je filtrirav u svakom koraku i spada po jedan. In od i je jednako jot. In od i kaže ja sam došao u korak jot. A last od jot je jedna koji kaže u korak jot sam poslednji došao ja. To su dve informacije koji su nam abitne. I šta nakon toga radimo? Idemo i poredimo se sa svim procesima koji su tu. Ovo je ovde algoritm zahteva poznavanje ukupnog broja procesa sa kojima mi treba da se synchronizujemo. Moramo tačno znati koliko ima drugih procesa. Dalih ima 2, 3, 5, 10. Moramo znamo tačan broj procesa sa kojima ćemo se synchronizovati. Idemo 4k, 1, 2n, kaj je jednako i. Ne proveravam sam sa ovom dok ga sam došao. I šta smo rekli maločas? Kada ja radim skip? Ako je sused uznapredoval više u odnosu na mene, ja čekam. I ako sam ja poslednji? Ako ja nisam posledni koji je naišao, ja mogu da uznapredujem. Ači mene zanima dok le sam ja došao? Ako sam ja poslednji koji je došao do nekog koraka, ja moram da čekam u tom koraku pod uslovom da nisam jedini u tom stanju koji je došao. Kako znam da li sam jedini? Pa nikom drugom neće biti ispunjen ovo i ovde u uslov. Svi će imati manje ovo ovde in u odnosu na proces koji je došao. Ako sam ja jedini, to znači da će svima in od ka biti manje od in od i. To znači mogu proći po tom uslovu. Ili ako nisam poslednji. Vlast odđot nije jedna koji. Znači neko drugi je došao dati korak posledne. U suštini ja mogu da preskocim sve procese koji se tu nalaze. Koji se nalaze na ovom ovde nivogu. Da ponavljujem šta sam sad ovde rekao, kada se ja blokiram. A blokiram se ako sam poslednji, a nisam jedini. I u svakoj iteraciji smo ostavili tako po jednog, onog koji je došao poslednji. Da ček. Možda neko u svariji nije ni došao. Znači možda se desiti ko dovol' ovde algoritma. Da samo jedan proces željuje u opšte dovdžaju u kritičnu sekciju. I taj proces će uvek imati da je last jednako i da on će uvek biti poslednji. Ali kada se upoređuje sa svim procesima koji tu postoje. A on će svaki put zaključiti da je on više uz napredova u odnosu na te druge procese. I moći će da pređe u sledeću iteraciju. Tako da ovde ne znači da svih n procesa baš sada želi da uđi u kritičnu sekciju. Ne. Mi uvek moramo da se poradimo sa svim moguće da možda ni jedan drugi ne želi da uđi u kritičnu sekciju. Dobro. Na kraju kada uđemo u kritičnu sekciju, mi smo jedan jedini proces koji u kritičnu sekciju. To nam garanto je ovaj algoritm. Rekli smo da u svakvih faziji filtrnamo po jednom proces. I na kraju kada zavrćimo ovaj ovde naš algoritm mi kažemo da in od i jednako nula. Mi više nismo u razmatranju, nismo ni u jednom od ojih end koraka našeg algoritmo. Mi se nalazimo u onom početom koraku sada bilo koo može da nas pretekne ako je neko ostalo zablokirano. I to je naš algoritm. Proma ćemo uskoro da vidimo na jednom primiru kako ovo ovde funkcioniše. E, ali jedna mala napomena. Što pruža nam ovaj ovde algoritm? I ovom pravi FIFA? Ne, ovaj ovde algoritm, ovako kako sam ga ja sad ispričao, nije FIFA algoritm. Ovaj ovde algoritm, da ponovim i uš jednom koga blokiram. Blokira poslednje kako nije jedini. Ne kaže ništa šta se dešava sa onim kojem prvi došao ili drugi došao. Možda će prvi stvarno protrčati kroz sve ovo ovde i prvi ući u kritičnu sekciju. Ali mi to ne znamo. Mi znamo da će poslednji, ako nije jedini, biti zablokiran u nekom koraku našega algoritma. Ostatak ne znamo kako će se ponašati. E, ovo ovde izračunavanje sad možda traje dosta dugo. Zamišljete da imate 32 procesa na primeru sa kojima treba da se synchronizujete. 32 procesa zahteva proveru šta radi svaki od tih procesa. To je dosta instrukcija kroz koja mi treba da prođemo, da izvršimo, da bi mogli da prođemo kroz svaku od faza. 32 procesa ako postoji koje treba se synchronizuvati, a mi moramo proći kroz 31 korak. 31 korak puta 32 instrukcije pa nije malo. To je već dosta nekih stvari, odnosno instrukcija. To su hljede nekih instrukcija, desetine hljede instrukcija, ako bi smo sve to trebali da isporadimo. Dosta vremena nam treba da mi zakličimo, da li možemo možda ući u kritišnu sekciju. A ne, da vidimo primer. Na početku imamo IN 1 je 1 konuva, IN 2 je 1 konuva. IN 2 je 1 konula, IN 3 je 1 konula. Šta je oči imamo? Pa last 1 ne znam u kojoj došao, nikoli ušu ek nije ušu u korak broj 1, nikoli nije ušu u korak broj 2 i nikoli nije ušu u korak broj 3. I mi sada hoćemo da vidimo, koji od ovdje 3 procesa će prvi ući u kritičnu sekciju. I možemo ukljenuti od procesa broj 1. Proces broj 1 možemo reći da je ušao u korak broj 1 i onda ovno ovde dole dođe i kaže u korak broj 1 je poslednji ušao proces broj 1. Šta sam sad u radio? Proces broj 1 je došao i rekao, ja sam došao u korak broj 1. I otišao je u korak broj 1 i kaže, ja sam došao tu. O ovde je in od i, a ov ovo ovde je korak u kojem se ono navazi, a ov ovo ovde je korak, a ovde je identificator. I šta sam proces broj 1 treba dođe da odradi? Treba dođe da se uporedi sa svakim od ovih preostalih procesa. Dojdemo, da je last od i, last od i je od i, od i, od i da je treba napredoviti, je jednako mom idea, vidite, ja sam poslednji, onda moram dođemo da se uporedim sa svakim preostalim procesom. Moram dođemo da se uporedim sa procesom broj 2, on se nalazi na 0, ja se nalazim u jednici, ja sam uz napredov, i sa ovom ovde, sa trojkom je trebalo da se uporedim. Uporedio se se svakim od njih, i ja sam zaključio, ja mogu dalje, i šta će ovde ovde odraditi? Ovde ću upisati 2, i ovde ću upisati da je u proces, u korak 2 došao poslednji proces broj 1. I sada zamislite da dođe scheduler, i da zaustavi naš proces broj 1. I sada ćemo pustiti na primer proces broj 2. Pro...