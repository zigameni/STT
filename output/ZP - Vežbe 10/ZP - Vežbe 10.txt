 Cjau svima. Doprodosti naš jedan čas zaštite podataka na kojem ćemo vam kolega Adreja nija pričati o zaštiti sistemom. Cjau, jedan. Super, možemo da krenamo sa elektijom. Dakle, danes ćemo vidati razne neke oblasti, odnosno pod oblasti da tako kažem koji upadaju generalno podpojem zaštite sistema. Tako da ćemo da pričemo o tome, dakle što prestavljaju uljeze, odnosno, neautorizovane korisnike nekog sistema. Kako možemo da detektuemo nekog neautorizovanog korisnika, dakle kako možemo da detektuemo neki upad u sistemi, šta se uopšta smatra upadom u sistem. Pričat ćemo o kontrolom, odnosno upravljanju samog sistema, porišćenjem šifara. Tako da kako biramo šifre, dakle malo ćemo se poceti vidi nekih stvari koje sako ima ste već upoznat i o kojima naravno znate i slušate stalno, i prosto je to se jednog malo drugačije aspekta. I nakravi ćemo pričati u jednom konkretnom napadu, odnosno dosnapadu i jego i varianti koje prestavlja distribuirani dosnapad. Prva tema, dakle su uljazi. I u principu kao što sam već rekl, dakle uljazi su neki neautorizovan i korisnici sistema, odnosno preciznije, dakle neki korisnici koji žele da pristupi odgovarajućim resursima samog sistema kojima nemaju legitiman pristup. Oni mogu obavljati različite akcije u okviru sistema i o tomi ćemo nešto kastim je malo više pričati, ali dakle pojem da je naravno da ne žalimo da dozbalimo nikome ko nema odgovarajući legitiman pristup nekom resursu u okviru sistema, da mu zapravo i pristupi. Tokom godina naravno dakle nekako su ti uljazi klasifikovan i tako ćemo mi ovdje pomenuti neki tri ostovne vrste, odnosno ostovne klase uljeza, što nam je na neki način značeno, zato što prosto na osmugu tog ratličitog pripadanja klasama, možemo da određene uljeze detektujemo, odnosno možemo da definišnemo što je to neki legitiman način, kako koristicu se ponašuje u okviru sistema i na osmugu toga prosto da detektujemo kada neko pristupa sistemu na neki način koji nije autorizovan i nije predvijegeno ostavu nekih pravila koje definiša. O tom ćemo takođe nešto kastim je malo više pričati, a u ovom trenutku ćemo vidjeti dakle koje su to neki ostane tri klase koristika, odnosno neautorizovanih koristika, odnosno uljeza. Prvo klaso prestavlja Mask Raider i to je neki pojedinac koji nije uopšta ovo lišćem da koristi neki sistem, dakle to je u potpunosti nekoko sa strane bogušava da pristupi sistemu za koji nema odgovarajuću ulogu, nema kredencijale i nema ni jedan legitivni koristicu nalak. Ukoliko hoće da pristupi sistemu, ono naravno hoće zapravo da dobije neče tuđe kredencijale, odnosno da korišćem neče tuđe koristicu naloga, pristupi odgovarajućim resursima. Druga vrsta uljeza je Miss Fizer i to je neki koristnik koji se nalazi u opviru sistema, tako da je on zapravo legitivni koristnik, tko znači ima neki svoj koristnih kinalog u opviru tog sistema. Miss Jutim i dalje nema pristup o njime resursima kojima bi žalav da pristupi. Dale se radi, recimo, o tome da prosto njegov koristnih kinalog podrazumeva pristup nekim bazičnim resursima, a da on se druge strane žali pristup nekim delovima sistema za koje su autorizovanji samo neki drugi koristic, odnosno neki mali skup koristnika, kao što su, recimo, administratori ili tako dalje. I on jako se nalazi u sistemu, pokušava da dobije praktično pristup za koji njemu nije dozvolja. I to je tako posebna klasa, zato što, naravno, ovi koristici, pošto ipak imaju neku poznavanje sistema, se ponašaju drugačije i detektuji se na drugačije načine. I treća vrsta je clandestine user, a to je neki pojedinac koji želi da zaozme neku supervisorsku kontrolu sistema, a to će značiti da zapravo može da edituje neke logove, da može da izbedne prosto da bude detektovan i da zaobiđa te neke sisteme koji služe za nadzor samog sistema i pristup odgovarajućim resursima, i da na ta načinu mogući prosto da ne bude detektovan. I tako pojedinac može da bude i neki legitimni koristnik koji inoče nema takva prava, a tako će može da bude i neko sa strane. Eto, dakle to su neke tri osnovne klase i kao što reku potrebno je poznavat i moći klasifikovati konkretan primar u neku od ovih klasa, ma da naravno nije uvek čista granica, jer se prosto na osnovno tog je kastnije oni detektuji, odnosno koriste se različiti pristupi pri likom detekcije samih uljeza i naravno njiho odstranjevanje iz samog sistema. Naravno sami napadi su različiti i oni se takođe mogu klasifikovati. Dakle napadi idu u čitalom nekom obsegu od bezazglednih napada koji često predstavljaju prosto posmatranje nekih podataka, analizu podataka, pa svedu o nekih ozbiljenih napada na sistem, dakle koji mogu predstavljati neko menjanje podataka, podmetanje podataka i tako daj. Naravno bilo koji napad svagako nije dobar i ono što cilje zaštititi se od različitih napada, ali prosto naravno napadači imaju različite resurse, napreduju, u srdu s druge stane naravno i zaštite sistema napreduju, ali stavno dakle koosto je probuju jednom i drugom smeru i onda naravno okoliko god da su oba situacije neko željne, ukoliko su napadi bezazleni, jasno je da imaju manje impacta na sam sistem od ovih drugih, dakle koji mogu ozbiljno da naštite sam sistem. Vida ćemo i nekoliko primera konkretnih napada, da je ovo neki prvi primer je iz bel laboratori, ali ono što je pojenta je kako se zapravo primećuju napadi i kako se detektuju napadi i prenevo što budemo pričane nekom formalnom načinu za detektiv, odnosno prenevo što definišamo neki skup pravila, kako možemo detektovati napade, prosto možemo da vidimo na koji način se primećuju neke neregularne situacije, na koji način se posumlja da postoji neki napad i to se kroz ovaj primer vidi prosto kroz nekih situacije koje nisu defini se neka u običaje, a to znači da postoji kopiranje ili pristup nekih file'ovima na neki način koji nije standardan za taj sistem. Recimo kopiranje file'a sa šifroma ili pozivi nekih remote procedura, nekim tempom koji nisu u običaje. Šta znači tempu koji nije u običaje? Tipečno za te neke pristupe ograničnim resursima ili resursima koji su recimo o značije za sam sistem, postoji ili neko definisan o vreme kada se pristupa, kada se kopira određeni file ili da postoji naravno često u kombinaciji sa određenim autorizovanim koristnikom, tako da postoji jedno normalno definisano vreme i onda ukoliko se recimo pristupa van tog vremena, na to je način se definiša da je to našto sumljivo, pali se neka lampica ili recimo ukoliko se određenom resursu pristupa više nego što je to u običajena, naravno do nekada postoji prosto izuzeta koji je normalan, ali te s onda stvari proveravaju i naravno postoji neke granice naostu u koji se odprđuje da li takva sumlja opravdana ili nije opravda. Osim toga, također često u okolo sistema i postoji neke mašine koje predstavljaju mamce, o tom ćemo također nešto kasnije više pričeti, i to su delove sistema koji nisu suštenski resursi koji se korista u okolo sistema, već ih slučivo služaju da imitiraju, da tako kažem, delove regularno sistema i da privuku napadač. Tako da ukoliko se napadač zalepi za njih, to će značiti da on prosto nije svestan da to nije regularni del o sistema i svaki takap pristup također predstavlja prosto neki alr, da se radi o neregularnom pristupom. Naravno kada prosto razvišlamo resursima koji se uložu za detekciju, sprečavanje i eliminaciji u uđeza, jastno ne da više resursa žalimo da potrešimo za one napade koji su opasni i po sam sistem, ali je često ne moguće u napred znaci dali neki napadač jesta opasanu smislu da li će napraviti nešto malicio znam sa samim sistemom, ili će jednostavno koristiti podatke za analizu i ako je še jednom napominjam da to nije bezazlanom, međutim u takom slučaju je opasno za sam sistem nešto mali. Pošto ne možemo to u napred znaci, naravno postrebno je uvraditi sve što je u našem mogućnosti da zaštetimo sistem od bilog kakvog napada i da na taj način sprećemo i te najmalicioznije napade koje najviše mogu naštetiti sam sistem. Juš i jedan primar napada, dakle, koji paš ilustruje ovu situaciju gde prosto neki napad može i da deluje kao bezazlan, međutim da u pozad i niko stoje neke ozbiljnije stvari koje se možda ne detektuju tek tako na prvi pogled, je takođe neka situacija koje se desila u jednom računskom centru gde prosto postojo veliki broj umrežanik racunara i gde je prosto detektovanu da je određeni broj racunara korišćen za napadera neku i drugu lokaciji putem internetu. I sva caum analizom tif napada, dakle, otkriveni su neki uljezi, otkriveni su naravno racunari koji su korišćeni za terimog napade,
 i ono što se u toj situaciji uradi je da su te mašine koje su se poristili za remote napade isključene, da su neki sigurnostni propusti koji su tim tom prilikom uočeni sređeni i to je bilo to. Znači, podrozumjevole se da je to bio neki jednostavni napad, da je on rešen i prosto nastavljeno sa normalnim paratom. Međete, našto kasnije uočeno da to nije baš tako da su se napadi nastavili, ne samo to, nego da su nešto ipak mudri i sofisticirani, uočen su na to što izgledalo na prvi pogled, odsleda na napad, samo po sebi nije bio tako bezazvet. A sasto je ose dodatno iz toga da su prosto šifre u okviru datih mašina, odosno na datih mašinama za pristup savom sistemu, bila otkrivene. I dakle da su ti filovi sa savim šifrem, ali je tome ćemo nešto kasnije pričeti, bili objavlje. Međutim šifremo su naravno i šifre za neke sigurne delove sistema, odnosno navodno sigurne delove sistema, za koje prosto ne bih smao nikose strane da ima pristup. Kad kažem da su takvi podaci objavljeni, to znači da su oni objavljeni i za napade nekim drugim na podačima, a ne isključivo na podačima koji su inicijelno napali sam sistem. I dakle to se znaziva praktično postavljeni na neke odlastne table, da je onda i drugim buljezim moguće da koriste te šifre i da napadaj sam sistem. I ukoliko, dakle, oni osobe koje državaju dati sistem, naravno nisu svesni da su njihova šifre, odnosno same mašina je na taj način kompromitovane i da su šifre dostupne i drugim na podačima, onda je jasno da može dodaće do ozbiljnih problema. U tom slučaju dakle mi prosto možemo podeliti takve napade na neke dve vrste gde prosto imamo ove preve napadače koji su došli do sami šifara i koji su koristili neke napredne tehnologije, poznaju bolje takve samo tehnologiju i došli su, provalili su odgovariti šifre i došli su do file-ova koji sadrže šifre. Međudimo, momentu kada su ti file-ovi postali dostupni, tada čak je nije potrebno imati toliko, da kažem, veliko, neko poznavanje tehnologije, dakle, ono su vešto je potrebno i je prosto eksplati da ti sistem korišće informacije koje su postala iabno dostupni. I u tom slučaju to su brute force napadi, dakle, napadi u smislu gde je potrebno sad da primenivati prosto neke različite strategije, napada na konkretne mašine, za koja poznajemo šifru i napada na delove sistemi, za koja poznajemo šifru. Dakle, tu sad da više nema, nije potrebno, neko su ofisticirano poznavanje samih tehnologije. Ali, naravno, dakle, da upravo tada sistemi postaju jako ranjivi, zato što pristup samom sistemu je iabno dostupan velikom broju na podače. Jedan od, da kažem, strategija, kako se takvih problemi rešavaju, naravno, i angažovanje timova koji upravo rešavaju, odnosno, brzo reju, rešavaju probleme kada je detektovan na neki upad i dakle, to su computer emergency response teams ili certovi, koji su zapravo timovi koji analiziraju datanapade, sa kupljeli informacije o napadima, o slavnostima sistema i naravno dostavljaju takvog informacija, ono me koje zadužen za sam sistem. I ti cert izvešta je su naravno jako značeni, zato što, ono trenutka kada neko koja je nadležna zadati sistem prosto ima neku listu analiziranih napada, onda jasno da može i ranjivosti, pardon, u sam sistemu, jasno je da može da rešava takve ranjivosti i da ih uhvanja. Među o tim tako je dakle izvešta i mogu predstavljati izvor ranjivosti dodatni, zato što, okoliko se nalaze na nekoj mašini, takve storovanji, nekom delu sisteme koji jeste kompromitovan, onda je to veoma svično kao ispailovi mašifara, dakle ako je file u šifara kompromitovan, neko ima pristu tim šiframa, okoliko naravno one dodatno nisu zaštitče na uokviru file. Isto stvari ovde, ako cert izvešta nije zaštitče neka koju uokviru saame mašine, a mašina je kompromitovana, i neko sa strane koje na padači može da dođe do datog izvešta i onda on naravno na takci njih ima sve ranjivosti datog sistemu. I tada naravno te ranjivosti može da eksplatiše, gde je onda koliko će biti uspešen u toj samo eksplataciji, naravno zavisio toga koliko su u međuvremenu popravljene ranjivosti samog sistemu. Ali naravno da se uglavnom dakle takve ranjivosti ne mogu rešiti odmah, tako da ukoliko je samo mašina kompromitovana, a to samo nije detektovanu ili prosto sistem nije stiga da reši, odnosno ljudi koji su naravno zaduženi za popravljanje, da kažem odnosno rešavanje ovih problema, odnosno ranjivosti koji su detektovani, nisu stihli prosto da ih sve adresiraju, onda jasno da omeđu vremenu je sistem naravno podloženo u prve eksplataciji tih navedenih ranjivosti. Jedan od načina dakle kako se može doći do odkomarajićih šifara na računarima i kako oni mogu postati dostupni na hvadačima, je naravno imodifikacije sofera za logovanje. Odnosno ukoliko je neko kao napadač prosto u mogućnosti da modifijek koji je, odnosno da podmetne neki sofir koji će da pratije logovanje samo koristika na mašinu, oni tako naravno mogućnosti da dobiji informacije u kredencijalima koristika koji se logovaju. I naravno u mogućnosti da i takve kredenciale negde objavi i od ome smo malo prekriča. Naravno, se svakog napadača je da dobije pristup sistemu, ali često dakle i ne samo do dobije bilo kakav pristup sistemu, već prosto da dobije neke privilegije sa kojima će moći da pristupi nekim resursima zbog kojih i napada dati sistemu. Tako da naravno ili da uopšte dobije pristup sistemu, ili ukoliko kao što smo već videli, već ima neki pristup sistemu da poveća privilegije samom sistemu. To znači da on treba neko dodojze do podata da koji su zaštićeni i kao što sam rekl, često su ti podati u vidu neki kredencijalak koji je bukvada im i šifrep. Gde i naravno, ukoliko šifrep ostano dostopne, onda više nema nikakog ničega što sprečava datog uljeza da pristupi nekom delu sistemu. Oldo on jednostavna pristupa kao legitimi koristnik sa kredencijalima neko konkretno regularno koristika. Tako da je jasno da on želi da nekako dodojze do odkuvaritvjiših šifara i koristnički kredencijalak koji se nalaze u okuro samog sistemu. A jasno je da takvi podaci su negde sačuvani u okuro sistemu, zato što da bi uokštem na bilo koji način dakle legitim i koristnik modo da se loguje na sam sistem, prosto mora postojati negde storovana informacija koja će povezati identitet koristnika sa samom šifrem. I to se često čuva da krev nekom fileu. A taka file se naravno štiti na odgovarajći način, jer ukoliko nije zaštičen, tada je celog kupna zaštita systema zapravo zavisio od toga koliko je sigurna mašina na koja se nalazi datifile. Tako da je neopokodno da i sam file bude na određeni način zaštičen i to sam može implementirati na jedan ili na oba od sledeća dva načina, a to je upotrebom jednostranih ili one-way funkcija ili upotrebom kontrole pristupa. Sa šta prestavlja svaki od ova dve stvari? Koji je jednostranih funkcija, dakle, mi smo već pričali o primeru nekih one-way funkcija i to smo radili kada smo pričali o cash funkcija. Cash funkcija prekstanja jedan dobar primer one-way funkcija. Ideja je da naostam u neku ulaznu podatka, koji prekstavlja takle ulaz u neku funkciju ili neki algoritm, dobija se neka izlazna vrednost naostam u toga i da sistem čuva isključivo tu izlaznu vrednost. Na osnovu izlazne vrednosti, čak i da ona bude kompromiktovana, se ne može reverzno dobiti ulazna vrednost, zato što tako funkcionišu u one-way funkcija. Dakle, one funkcionišu isključivo u jednom smeru. Na osnovu unete ulazne vrednosti uvek ćemo dobiti identično izlaznu vrednost i na osnovu toga uprvo funkcioniša i proverova same unete vrednosti, ali ogromno to na osnovu izlazne vrednosti ne možemo dobiti unetu vrednosti. I kao što ste videli kod hash funkcija, tipično, dakle, ta izlaz koji se generiše nešto što je na nekoj fixnu širini, što je recimo bilo 160 bita. To znači da pošto sam ulaz može biti na razvečkim širinama, ako matirate to na neku fixnu širinu, to će značiti da mi zna prvo imamo više stvari koje mapiramo na jednu isu izlaznu vrednost, izbog toga, dakle, jasno da to nije reversibilni props. Nemamo jedna na jedan mapiri. Ote, dakle, na isti način, imamo neku one-way funkciju koja se primenjuje nad unetom šifru. Tako da koristnik unosi šifru, zatim se ta šifra transformiše primjenom same funkcije i dobije se neka izlazna vrednost. Ta izlazna vrednost je ono što se čuva u samom filu, a kada koristnik unese datu šifru i ona se transformiše, naravno, proverava se, proverava se sam izlaz, ili tako u sanim što je upisano u samom filu. Tako da dakle to je način, kako se primenjuju jednostranne funkcije da bi se zaštiti lakšike. S druge strane, kod kontrole pristupa, dakle, pristup filu se ograničava na istučivo autorizovanek koristniku. I to je jedan koristnik ili neki manjibroj koristnika, koji imaju kredenciale za pristup datum fili. I prosto, dakle, unose svoje kredenciale na ostavu toga je zaštećeno sam fil, drugi koristnici sistema nemaju pristup datum fili. Pomšto je dobra stvar, je naravno da se koriste
 oba način na zaštite, ukuliko je to i kako mogući, zato što svaki nivo zaštite ime neke svoje manje. I neki od tehnika za dolaženju do šipara predstavljuju naravno napad na neke konkretne šifre. Sa jedna strana, dakle, to je naravno ono što gajste svi svesni. Pokošavanje se nekim predodređenim šifrem, dakle da su to neke šifre koje su napljede dostavljene i koje su standardizovanje. I onda, dakle, mnogih korisiciji prosto ne menjaju te neke šifre koje su dateno početku i na osnovu toga jasno, pošto su te vrednosti na neki način poznate, prosto su naravno to predstavlja ranjivo samog sistemu. Sa druge strane, dakle, neke kratke šifre, neke unapred predefinišene šifre iz razvečitih rečnika, recimo, dakle, veliki brođudi stavlja 1, 2, 3, 4, 5, 6 i tako dalje. I to su naravno na neke vrednosti, odnosno, neke šifre koje su na predpno poznate. Osim togde, dakle, čak i neke modifikacije, doldaj za koje prosto korisiciji misla da su recimo mudre modifikacije, što zapravo i nisu toliko, to recimo izmena slova a u manki, pa onda recimo kod ovih predefinišene šifara u mestu admin stavite manki, u mestu ili et, u mestu a, u mestu i 1 i tako dalje, dakle, to su sve neke variacije koje su prosto toliko dobro poznate, da je nešto, da je, da je, da je sigurno, dakle, sigurno će se naći neko ko, prosto ima tako šifru na nekom delu sistemu. Osim toga, poznavenje samih koristika je takođe značeno, zato šdern, prosto često korisiciji stavljaju nešto izličnog života, što ima nekoj smisla i značajer za njih, da bi lakše prosto zapamtili tu šifru i tako dalje. Positivno što svih imamo u glavnom analogijan na jako mnogo mesta i onda, dakle, koriste neke informacije koje su vezane, dakle, za njihovu bličnu pozad. Osim toga, dakle, prosto, postoje, kao što sam rekla, te nekih predefinisane vrednosti i to su je predstavlja jedan od načina kako se može pokušavati sa konkretnim šifra. Sa druge strane, postoje opcije korišlja nekih malicijuznih softwarea, kao što recimo je trojenski koji, koji predstavlja posebno vid malicijuznu softwarea, gde, osim, legitimno načina korišćenja nekog softwarea, postoje i neki drugi proces koji se vrti u operotog softwarea i koji radi prosto nešto što nije ostav na name na samog programa, a može se u onkog retnom slučaju koristiti da bi se premostila zabra na prilikom pristupane regulornom koristiku. Osim toga, naravno, neki monitoring, koji je remote, dakle, između nekih udaljeni koristnika sistema domačina ukoliko se šaju određene šifre, odnosno, kredencija. Ok. E, sad kao što sam rekla, dakle, prvi nekoliko načina predstavlja radičite načine za pogađenje samšifre. I ovo je relativno laku za ustavljiv nakvat ukoliko neko pokušalo brute force napadima da generiše sve moguće šifre nekog sistema, onda, naravno, dakle, da se to može resiti tako što prosto će saoganičiti broje različitih promašanih šifare na neki manji broj. I ukoliko, naravno, pređe, to što je često debijiseno sa 3-5 različitih pokušaja, prosto sistem se blokira na neko vreme i onda da bi ponovu uspostavio vezm s sistemom, napadač moram da čeka. Takvata, dakle, ovo često nije uopšte modularno, nije jednostavno i ukoliko se prosto definiše ovakvo pravilo, onda na podaču, dakle, to ne predstavlja, pameta načini za dolaženje do odgovarajuće šifre. Sa druge strane, ono što može da urodi, a što je nekada je slično u smislu brute force napada, je da ukoliko nekako može da dobije odgovarajući file sa šifrema, dakle, poko kupi taj file i da brogo lokalno ko cebe da dođe do odgovarajućih šifara. I tu onda prosto imene ograničene resurse sa tej strane, što mu prosto više nikon elimitira u kupom broj pokušaja, dači nema teg lokade, a osim toga, ono što je mnogo bitnije, dakle, može distribuirano takođe da pokušava da da šifro je šifre i na taj način, na aravno, brute force napada i se značeno ovakšavaju, posebno u danasnje vreme, kada računar imaju mnogo veću moć za izračunavanje, nego što je to bilo rani. Naravno, nimicije doći do bilo u koje šifre, već do šifra se veći privilegijama, tako da, tako da, dakle, to jeste jedna od taktika. Strovno stranži stiče scenerije za Tronensko konje, odpalimo alo tekstal i dodaćima. Kao što sam rekl, primar Tronensko konje je prosto izvršavanje neku programa, koji ima neku dodatnu funkcionalst, koja nije uskladu se primar na namenom programu. Na primar neki koristnik, neki, dakle, neko, pošljaj, recimo, nekom administratoru, neku igru. I administrator preuzme program, igra igru i program jeste igra, i to jeste njegovostom na namenom, već u tjutim ima takođe i dodatnu funkcionalst. U pozivini izvršava kod, koji recimo dokveta Fire sa šifrema i remote da prebacuje koristniku, koji je postala administratoru ovaj program. Pošlo je to, dakle, neki dodatni aktivni proces, ako administrator pokusirana igru, ako ne preti što se izvršava sve na ratoinaru, ono to naravno neće primetiti i program, odnosno, file sa šifremac, i na taj način biti transpirovan koristniku, koji dakle je poslalo ove malice uzem software. Sada u koliko dativ file nije šifrovan. Što će značiti da je isključivo sve računelo na kontrolu pristupa, gdje administrator naravno ima pravo pristupa datom file sa šifrema, onda naravno će taj file biti prosto nešto, što će sad omogućiti i ovom koristniku, da pristupi sistemu na način, na kakavo on poće, jer moja prosto sve na izvolta. Zvuk toga je dobro da po svoje kombinacije i da svakako i ostim same kontrole pristupa bude implementirano i čuvanje, odnosno šifrovanje, odnosno inkripsije samih ulaza na neki način, tako da prosto nije dovoljno da sam nelegitim i koristnik pristupi datom file, bezve nekako mora i da dokvati odgovarajuće podate. Što stiča, pristuškivanje naravno to je problem sigurnog trenosa podatka i u koliko e-gripto ima datar podate, onda istok kao iso im dokvatanja file nije prosto dovoljno dokvati odgovarajući resurs, već na kraju mora da se dođe dok konkretnog sadržaja toga što je postat. Naravno moguće je upasti u sistemi bez poznavenjašće para i to je praktično eksploatacija na nekim drugim nivojima. Nećemo toliko detaljno sada u ovom momentu pričati u tom, ali ja tu prosto navišćemo jedan od primera eksploatacije prosto nekog vaga u softwareu, odnosno u neku programu u koji je omogućio pristupojdenim delovima sistema neregularnim koristicima i on se naziva Heartbleed i predstavlja dakle neki konkretan napad koji je koristio grešku koja je postojala u okupne sa selbe bleoteke, naravno popravljane ta greška kastija, ali dakle ona se koristi za implementaciju delajs protokola i jedno vreme je napad prosto bio našto što je bilo izuzetno akulat. Dobro, ovim smo završili sa ovim pregledom u ljeza. Dale možda imate neku pitanje vezana za ovaj deoleksijep. Ok, ako nemoce pitanje, pravazimo na slajši ideo to je detekciju u podu sistem i ja ću propustiti reč, akio. E, hvala, najodali se čujem. Tu je. Hvala. Dakle, nastavljamo dalje. Dakle, sad je maja ispričala praktično šta je to sve pretnja za naše sisteme, a vezone za konkretne neke koristnike, koje nazivamo uljezima, odnosno hackerima, i videli smo neke načine, kako opšte da sprečimo da nastakvi uljezi napadno. Međutim, naravno, ono što se najčešće dešava, čak i najboljim sistemima, jeste da će prosto uljez u nevkom trenutku da nađe neki deo kroz koji može da probije našu zaštitu i uđil sistem i onda je prosto potrebno da postoji tana ka naša druga linija odbrane, koja će detektovati takav upad što preizbaciti takvog uljeza. Dakle, s jedna strana, taj upad mora da se detektuje brzo, jer prosto ako se ne detektuje na vreme, onda prosto šteta koji taj uljez može da napravi, može da bude dosta velika, tako da je to prioritet, kada pričamo o konstruisanju nekog softwarea, koji predstavlja neki detektor upada u sistem. A sa druge strane sama detekcija upada u sistem je osim toga što je bitna, dakle da bi se korisnik izbacio i sistema, kada upadne u sam sistem dosta brzo, jeste da prosto, ukoliko ona postoji, to može dodatno i da uplaši nekako potencjalne uljeze, jer prosto, ukoliko oni znaju da mi imamo neku vrstu softwarea koji detektuje upad u sistem, oni ne žele obstavda rizikuju da budu na neki način provaljeni i prosto da se pokreni na neka procedura, neki postupak protiv njih, tako da prosto što nam je nekako efikasnija ta detektu.
 a to se pročuje nekako, prosto to može više da zastraši te potencijalne uljeze i da ih nekako odvrati od tih pokušaja upada u sistem. I sa neke treće strane, čak i korisnici koji upadnu sistem kao uljezi, koji se tu u neko vreme zadrže, prosto čak i oni nam nekako doprinuse boljem, da kažem, softwareu za detekciju upada u sistem, jer prosto dobar software detekciju upada u sistem bi trebalo da čak i za te korisnike zakupi neke podatke o tome kako su oni upali u sistem, kako su se ponašali i šta su to sve tačno radili u našem sistemu, šta je to što su eksplatisali, da bi prosto neki naredni napad moh gao još brže da se detektu i opet da te neke štefte koje uljezi naprave svedemo na minime. Što se tiče same detekcije upada, naravno jasno vam je da prosto neka pretpostavka na koje se ta detekcija zasniva, jeste da je prosto ponašanje takog nelegitimnog korisnika, dosta različit od ponašanja legitimnog korisnika, dakle da ako neko provali vaše kredencijale za neki sistem, vrlo malo je verovatno da će on na tom sistemu da se ponaša baš kao što se i vi ponaša, da baš radi neke stvari koji vi radite, tako da prosto jedan od načina detekcije samog uljeza u sistemu se baš zasniva na toj pretpostavci da se ta dva punašanja razlikuju. Naravno ta neka egzakna distinkcija ne mora da postoji i pitanje koliko, jer ona da kažem nekako gruba, već prosto mora da se pretpostavi da neko preklapanje u ponašanju tog legitimnog i nelegitimnog korisnika postoji. I s ove desne strane vidimo sliku gde se baš tako nešto, nakon nekako na dosta abstraktnom nivou prikazuje da imate neku funkciju, odnosno neku, da kažem neki koordinatni sistem, da je na jednoj ovas imate kao prosto neki parametar po kojem se meri neko punašanje korisnika, što godo to bilo, misi može da bude koliko puta korisnik pristupio nekom sistemu ili koliko vremenna protiče između dva sukcesivna loga na sistem i tako dalje i sama nekada kažem verovatnoća da će to nešto da se desi po tom nekom parametru. I sada nekog legitimnog korisnika neka ta funkcija izgleda ovako, za nekog nelegitimnog korisnika ta funkcija izgleda ovako i pitanje koje se postavlja, naravno, jeste kako nekako napraviti granicu koja će na tačno određen način da odvoji ono što se smatra nekim, da kažem, nelegitimnim punašanjem i ono što se smatra nekim legitimnih punašanjem, dakle punašanjem baš tog nekog korisnika. I naravno tu, ukoliko napravimo neku labavu definiciju, da kažemo prosto, onako nekako, da kažemo, ofređe prosto definišemo šta je to normalno punašanje, šta je to nekog nelegitimno punašanje, to će dovesti do većeg bura tih lažno pozitivnih detekcija, odnosno neki levkidimni korisnici mogu tako da budu detektovanji ka uljez, jer smo prosto labavu definicili tu funkciju punašanje uljeza. Za druge strane, ako previše oštro nekako definišemo to punašanje uleza, onda je moguće da se nađe neki uljez, koji će prosto se ponašati dovoljno drugačiji od tih naših oštro definisanjih criterium, a tako da će onda nebude obšte detektovanu sistemu, odnosno biće veći broj lažno nekih negativnih detekcija. Naravno tu moramo da nađemo neki kompromis, kada pričemo o dizajnu samih sistema za detektiu. Dakle, jedna studija slučaja pokazala praktično da postoji neki način da se oni svi tipovi uljeza, o kojima smo pričali dakle na početku časa, na neki pouzdani način detektuju. Što se tiče mascarader uljeza, dakle, s obzirom da je to neki koristnik, koji nema legitiman pristup, ni jednom računaru u tom okviru nekoj korporaciji ili generalno bilo kom sistemu, onda prosto on odnosno njegovo upad može laku da se uoči, tako što se prati ponašanje svakog koristnika. I onda ukoliko prosto ponašanje nekog koristnika nije više ono njegovo uobičajeno, odnosno obstupa nekako tonovo ponašanje, te sve aktivnosti koji koristnik preduzima odstupaju od predhodnih aktivnosti koji koristnik radio na sistemu, onda prosto možemo da kažemo da je neko preuze okredenciale tog nekog legitimnog koristnika i to predstavlja neki upad u sistem. A sa druge strane, ukoliko je koristnik, baš koristnik tog sistema, pa pričamo uljezima koji su tipa Miss Feezer, onda prosto tu je detekcija dosta teža, jer praktično taj koristnik će uvek da se ponaša legitimno, jer je taj koristnik legitiman koristnik sistema, tako da praktično ovaj uljez mora da se detektuje na neke druge načine, tako da prosto nekako vidat ćemo kasnije koji su tu sve pristupi, ali nekako prosto definišemo set nekih pravila kojima ćemo prosto detektovati da li se svaki koristnik ponaša u skladu s svojom ulogom, dakle da li neki koristnici rade nešto zašta nisu autorizovanji, tako da praktično na taj način možemo da detektujemo uljeze tipa Miss Feezer. Što se tičenog trećeg tipa uljeza, dakle, oni su onako dosta kompleksni i soficicijani i tako da prosto njihova detekcija izvan nekogo upsega ovih automatizovanih teknika koji imaćemo danas da pričemo, tako da se njima nećemo baviti. Što se tiče samih pristupa detekcija upada u sistem, dakle kao što smo malo preizpomenuli kako se to detektuje jedni, kako drugi uljazi, prosto postoje različiti pristupi detekciju, zavisnosti od tih nekih konkretnih tipova uljeza. Imamo neke dve velike kategorije pristupa detekciji koji se dele na nekih nijegi izmanjih kategorija, pa prva ta veća kategorija je ste detekcija statičkih anomalija. Dakle, detekcija statičkih anomalija praktično skupja neke podatke o ponašanju koristnika i aktivnostima koristnika, vidićemo kasnije kako izgleda, da kažem, jedan primer te strukture podataka u koje se prosto čuvaju tip podacio aktivnostima koristnika i kada se prikupi određen broj, da kažem tih podataka, onda na osnovu nekih statičkih testova možemo da vidimo, tali su te aktivnosti u nekom periodu vremenskom bila legitimne ili nelegitimne, odnosno, da li one odstupaju ili ne odstupaju od neke klasične aktivnosti tog koristnika. Kada pričamo detekciju pomoću granjišnih vrednosti kao jedne vrstu detekcija statičkih anomalija, onda bi tu prosto nad tim podacima koje smo dobili, koje su vezani za aktivnosti samih koristnika, definisali neke gornje i donje gramice koje su vezane za prosto, da kažem, učestalo s nekih aktivnosti ili vremenski trinuta kada se neke aktivnosti dašavaju ili bila šta što možemo nekako da kažem brojkama da definišemo i da definišemo neke granjišne vrednosti i onda okoliko je ta konkretna aktivnost koji smo sakupili za koristnika u okviru tih granjišnih vrednosti, tada kažemo da je to legitiman koristnika. Čig nekako prosto neka aktivnost koristnika nije u okviru tih granjišnih vrednosti, onda za to koristnika i tu aktivnost kažemo da je nelegitimna odnosno da koristih nelegitiman i onda prosto preduzimamo neke akcije da izbacimo tako koristnika. I naravno, ovo metod je dosta gruba, jer postavlja se pitanje šta su to granice za te neke aktivnosti. Dakle, ako imamo na primer logovanje na sistem, pa sad prosto neko voli da se na poslu logoje 50 puta da izlazi na neke pauze pa da se vraćemo da kažemo kancelari u logove se ponova, dakle, taj koristnik će prosto više puta da pokušava da se logoju toku dana, dok neki drugi koristnik može da prosto cjo dan je ulogovan, cjo dan sedim kancelari, tako da za njega praklično bi neko učestalije logovanje predstavljalo nešto što se označava kao neki možda pokušaj upada. Tako da je to dosta onako gruba tehnika, ali se ona koristi u kombinaciji sa nekim drugim tehnikama. Sto se tiče detekcije zasnovane na profilima, to je također jedan pod tip detekcije statističkih anomalia, dakle, tu se baš na nivou svakog koristnika, da definiše prosto opet neki skup graničnih vrednosti, ali koji je vjezan za tog neku konkretnog koristnika, odnosno praklično razvija se neki profil aktivnosti za koristniki. Gde prosto za ovog koristnika važe to, to, to i to, a za ovog koristnika važi to, to, to i to. I onda kad primenjujemo ove statističke testove, onda prosto za svakog koristnika mi znamo kakve to vrednosti, tih statistički testov i treba da prikažu da bi smo mi smatrali da je taj koristnik regularno. Čim to nešto odstupa...
 od uovičajnog onda bi smo za tog korisnika smatra li da je nelegitima, ono odnosno da se desi u neki pokušaj upada. Tako da razlika praktično izmeđova 2ST, da ali prosto definišemo te neke granične vrednosti na nivou celog sistema ili na nivou jednog korisnika, odnosno razvijamo profile za korisnike. I to sve predstavlja detekciju statističkih anomah. S druge strane, dakle, detekcija koja je zastnovan na pravilima pokušava da definiš će set nekih pravila, da kažem koji su napred predodređeni ili su kroz istoriju samih aktivnosti u sistemu nekako osmišljeni, koja se prosto onda koriste da se odluči da li je neko ponašanje regularno ili neregularno i čestih nazivamo i detekciji zastnovan na potpis, jer prosto to nešto što je u napred, dakle, odrečeno. Tako da ovdje smo videli neki pregled tih pristupa, detekciju upada u sistemi, naravno, svaki pristup ćemo malo kasnije detaljnije videti, tako da je to ovdje smo samo ukratko prostonaveli neke osnovne rasljike. Što se generalno tiče pristupa detekciju upada, praktično, ono što ovaj prvi pristup, statistički pristup pokušava do urad i jeste da definiše neko normalno ponašanje. Dakle, nešto što je ubičajno očekivano dal na nivou celog sistema, pa imamo nek prvi pod tip ili na nivou koristnika, da u svakom slučaju nešto što je normalno za baš taj sistema ne mora da bude normalno za neki drugi ili nešto što je normalno za baš to koristnika ne mora da bude normalno za neku drugu. A ovaj drugi pristup, odnosno, oni pristupi bazirani na pravilima, oni ne definišu neko normalno ponašanje za taj sistem, nego neko ispravno, odnosno pravilno ponašanje. Dakle, prosto neko ponašanje, koje se odčekuje od bilo kog sistema ili bilo kog koristnika. Tako da tu prosto opet nekako malo grublje potrebno napraviti ta pravima. Što se tiče samih napadača, dakle, sad vam je od bilike jasno, dakle, skomenuli smo ih više puta, da prosto metoda koja je nekako dobra protiv napadača koji su tipa maskerader je detekcija statističkih anomalia, dakle, to je ona prva kategorija, jer prosto jako je teško da će on uspeti da imitira da kaže neke šablone ponašanja naloga na koji je upao. Jer prosto, dakle, to je neki koristnik koji je spojana pa naš sistem i jako, ako teško će on proći te statističke testove, dali za ceo sistem, a kamoli za tog konkretnog koristnika. Što se tiče, dakle, ulje za tipa missfeasor, dakle, tu ovaj prvi tip pristupa, dakle, nam neće pomoći jer će, dakle, to je legitiman koristnik i on će uvek da se ponaša, onakupako se ponaša, tako da prosto tu možemo da primenim u detekciju zasnovanu na pravilima, jer prosto ako definišemo neka pravila ponašanja za sve koristnike, on neće smeti da prekraši ta pravila, odnosno da odradi nešto zašta nije autorizovan, dakle, da pristupi nekom filu kojem ne smedaj da pristupi kao takap koristnik ili da pokuša da poveća svoje privilegije ili na neki drugi način da odradi nešto što nije, dakle, ispravno ponašanja u sistemu za njega lično, za, za taj tip koristnika. Naravno, u praksi, najbolje je koristiti neku kombinačiju oba pristubaka, prosto kako bi taj software bio efekasan protiv svih mogućih napadača. Dobro, nadalje ćemo pričati prosto o toj strukturi podataka, gde ćemo mi čuvati informacije o aktivnostima koristnika, ali prenego što nastajemo dalje, dakle, da vas pitam dalje ovo do sada bilo jasno, pa ako jeste da odemo na 15-minutnu pausa. Dakle, da li imate neku pitanje za sve što smo na ovom času prešli? Čuvajte se, do duše, kod mene jako slabu, ali ovako ja ću vas... Hajde sada. Da, nesam, da vam zapotno za projekac. Dobra. Samo par tite ne vedno ima da će kak... Da li mi pravamo učno eksportovanje privato ključa, koristnika, pošto prijatno gvijete u se u tiringu čuva kao inkeptovanu. I da li to i... Da li se smate da se jednog djena rešu pošto se zelga mala, najku u vrednosti, to jest, ku i njegu i njegov pro skorenje. Mhm. To stoj, što je jednog njegovu celog opekacije ili... Dakle, što se tiče eksportovanja privatnog ključa, možemo da kažemo da to jeste našto što u opstim slučaju ne bi trebalo da radimo sobzrvom da nažalimo nikom da pošalimo privatom ključa, ali šta ako vi želite da koristite? Dakle, taj vaš software na više racunara, morate nekako i na jednom i na drugom, da imate vaš privatni ključ. Tako da... To imaš mi, to spredi ja i našo prepozatka. Epa, da. Zajku da li se ku... Da li se ajku generišu stvakvom ovo i je to kao univezalni parametri suzmu. Praktečno, dakle, vi kad generišete nov park ljučeva, prosto trebalo bi... To se mi istio, to to isto. Dakle, neke nove vrednosti drugi. Dakle, da bezbedimo da se ajku... Ove strane postoisti ajku, to je samo bilo pitanje. Našao no... Epa, praktično nešto je del o javnog ključa, dakle sad u bokviru PGP, ja se ne znam koliko ste pratili svežbe, nekako bi trebalo dostaviti ovo i drugo i strani informacije o javnom ključu koji je korišćen. Ja, ja, ja. Tako da prosto nekako tu poruku treba konstruisati. Prosto, ja. Opo, što se malo žijena se pravpano. Ništa. Mali još neko pitanje. Dobro, ako nema pitanja, idemo 15 minuta na pauzu, pa nastavljamo dalje sa časom. Dobro, nastavljamo dalje sa časom. Daljeste možda na pauzi dobil nakon pitanje za nas. Dobro. Ako niste, idemo dalje. Ako budete imali neko pitanje, slobodno pižite u četnu svakom trenutkom, a da dosta nas je malo ovde, tako da možete da se upljučite u pauzi. Dobro, videli smo od prilike neke pristupe, detekci i upada, kako su oni kategorišu i za koja korisnike, odnosno, uljeze su oni pogodni. I sve vreme pričamo o tome, da protrebno nekako pratiti neki zapis aktivnosti za svakog korisnika. I osnovni alat za detekci i upada je praktično baš staj zapis, koji zovemo zapis osluškivanja. Prosto to je neka struktura, u kojoj čuvamo na neki način informaciju o tome šta je korisnik radio, kada je radio, kojim resursima je pristupao i koja akcija je obavljao. I postoje neka dva tipa zapis osluškivanja, to su izborni zapis osluškivanja, koji postoje na današnim, dakle svim operativnim sistemima, već ugrađeni, samim tim prosto prednosti, što nije potreba nikakododatni software da se instalira, već možemo da koristimo ono što već imamo i što nam pruža operativni sistem, ali naravno mana je ta, što prosto koliko su nam potrebne neki informacije, zapis osluškivanja i zoprotivnog sistema ne pruža, onda je prosto nam ovo ne odgovara. Ili možda imamo sve te informacije, ali oni nisu u togo arovit će formi za konkreta naš software, koji detektuje upad, tako da nekad ovi izborni zapis osluškivanja nisu ono što želimo da iskoristimo za naš software odnosno, uglavnom se nekako kombinuju oni sa konkretnim ovim zapisima osluškivanja, koji su specifični za to detektiju, to je taj drugi tip, jer prosto nekad su nam potrebno neki informacije koje već imamo dostupne u oslu, a nekad prosto treba mi ručno da napravimo neki zapis osluškivanja, koji je specifičan baž za naš system. Tako da je taj drugi tip zapis osluškivanja, baž zapis osluškivanja, koji je specifičan za to detektiju i on je kreiran nekako posebno od strane nas i vratke koje su potrebni za baš taj naš system.
 za detekciju upada. I samim tim, mamo prednost, da on ako je napravljen tako nezavisan u odnosu na platformu, po prosto je nekako portabilan i može da se prenosi na različite operativne sisteme, a MANA je naravno dodatno uprtevećenje sisteme jer prosto je potrebno instalirati neki dodatan software koji mora u svakom trnutku da bude pokrenutu vidu nekoj procesa i da prikuplja te informacije o konkretnim koristnicima. Naravno u praksi se koristi kažem neka kombinacija ovog, a što se tiče nekih primera, Denning je dao neki primer zapisa od osluškivanja koja je sadrža o sledeća polja u toj svoj struktur. Dakle, imamo subjekta, to je neki koristnik, a može da bude i proces, koji je iniciraju neku akciju. Onda naravno imamo akciju koja predstavlja to što se desilo, dakle to je neka operacija koja se izvodi nad nekim objektom i nju izvodi ovaj inicijator akcij, odnosno subjekat, to može da imamo primera logovanje, neki čitanje, ako čitanje ljupis u nekih file, ulaz, izlaz, zašavanje, štampanje, dakle šta got, dakle prosto nešto što smo odradivi na racunaru. I definiše se objekt, kad kao nešto, dakle nad čim smo i odradili tu neku akciju, kao što pročiteljismo file, kupirali smo file, pasteovali smo nekde file, ili smo izvršili neki program, ili smo, dakle, odštampali na nekom konkretnom šta paču, nešto i tako dađe. Dakle, osim ta tri, da kažem, neka glavna del ovih zapisa osluškivanja u ovom konkretnom dening ovom predlogu, imamo konkretno i uslov za izuzetak, dakle to je ono što predstavlja uslov kada će da se baci izuzetak, dakle, prosto nešto što se definiše kao nelegitimna akcija, dakle prosto neki uslov, ukoliko se on ispunja, onda se okida neki izuzetak i onda prosto naš sistem to detektuje i gleda takle tu neku konkretnu akciju malo detaljnije, da vidi prosto i da odluči da li je to bio upad ili nije na neki način. Onda imamo iskorišćenje resursa, dakle to je prosto neka brojka kolječinski, kako i koliko dugo potrebno neki resurs, dakle ili procesorsko vreme, naprim. kolko je trajala ta neka akcija ili kolječinski, dakle koliko puta smo se, naprim. logovali ili koliko put redova na šta paču smo odstampali ili koliko input output jedinica smo iskoristili i tako dać. I imamo naravno neki time stamp, dakle kada se dogodila ta akcija. I te operacije koje koristnik izvodi se uglavnom sastoji z elementarnih akcija, dakle prosto ako iliku imamo ovaj neki primer, da je koristnik želi da kopira neku igricu na neku drugu lokaciju, prosto to kopiranje, dakle podrozumeva nekoliko nekih pod operacija, to je prosto, dakle čitanje tognako konkretnog podatka, prebacivanja na drugu lokaciju i tako dalje, da sa sva pripremom kopiranja, čitanje iz jednog file upis u drugi file i tako dalje. Dakle prosto ukoliko koristnik nema, dakle pravo da kopira nestoj ili da preozme neku, neku, neki programu, evo ovom sluče neku igricu ili bilo koji resurs ili neva pravo da evo ovom primjeru, dakle upiše to u neki konkretan file, onda može da se desi neki konkretan izuzetak. Dakle ovom konkretnom primjeru on je pokušao da kopira file i pokoje izuzetak write violation, dakle prosto koristnik je pokušao da upiše nešto u file za koji nema autorizaciju. Dakle, prakčno, ono što se desava, jeste da se sve koristničke akcije kažem da kompunoju na te neki elementarne akcije i onda za svak u tih elementarnih akcija u ponekom, da kažem zapisu sluškivanja se prati šta je to što se desava kad se desava, nad čime se desava i koji je inicijator te akcije. Naravno, ovode kompozicija na elementarne akcije sa jedne strane olakšava samo implementaciju, prošće model, naravno ovom smo već i pričali, dakle, prosto s obzirom da komponovanjem akcija mi imamo mogućnost da pratimo ponašanja svih koristnika koji utiču na razne neke objekte, podatle, prosto izlačimo neke podinformacije, onda je prosto bolje da to dekomponuje što više moguće, da bi smo prosto izdvojili, tačno, ono što nam treba, naravno, prosto izbog jednostavne uniformne strukture zapisa o sluškivanja koje su specifični za detekciju, naravno, mnogo nam je lakše da dođemo do potrebnih informacija, ukoliko su one već ovako dekomponovanje i da ih eventualno mapiramo, dakle, iz onih postrećih izvornih zapisa ove naše konkretne. Dobro, sada ćemo prosto malo da prodiskutimo o svakom od onih pristupa koje smo spomenuli na početku, odnosno, na početku ove lekcije, dakle, prvo što smo spomenuli, jeste detekcija statističkih anomalia i rekli smo da to je detekcija gde prosto mi pratimo aktivnosti koristnika i sad o spovideli kako, dakle, kroz te neke zapise o sluškivanja i nad tim zapisima izvodimo neke statističke testove i onda prosto upoređemo, odnosno, gledamo rezultate testove, jedno odnosno njih odlučujemo da li je neko uljez ili nije, dakle, da li je neko upavnaš sistem. Kada pričemo detekciju pomoću granicnih vorednosti, rekli smo da tu prosto brojimo na neki način, da kažem, događe određenog tipa ili događe određenom vremskom utervalo i to upoređemo sa tim thresholdom, odnosno, sa granicama, o kojoj smo definisali za baš taj, događe i rekli smo da ova metoda dosta onako gruba, jer te granicne vrednosti su često različite za različite koristnika i za različite sistene. Kada pričemo detekciju zastnovanu na profilima, dakle, tu, na nivou svakog koristnika mi definišemo te neke granicne vrednosti, odnosno, pravimo neki profil za svakog koristnika koji se sastoji, naravno, iz mnoštva parametara, gde prosto onda kada upoređujemo zapise osluškivanja, gledamo, da li se oni na neki način poklapaju sa profilom tog koristnika ili se ne poklapaju sa profilom tog koristnika. I naravno, dakle, prednos generalnove detekcijo koji smo pričali, dakle, sada i na predkonom času malo više, jeste prosto što nije nam potrebu nikako o predhodno znanju o sigurnostnim nedostacima, nego prosto taj program za detekciju na ostnovu tih nekih naših zadatih, da kažem, vrednosti, nauči šta je to normalno za sistem ili normalno za svakog koristnika i prosto traži od udaranja od tog. Tako da, prosto, ovo je nešto što ga činio nakon dosta portabim. Sa druge strane, kada pričamo o detekciji, dakle, da ljeste smo na detekciji satisliških anomalija, kada pričamo o detekciji zasmovo i na profilima, tu su nam ovi zapis i osluškivanja, dakle, inputi na neka dva načina. Dakle, prosto, s jedne strane profil aktivnosti za nekog koristnika koji se pravi, se pravi na ostnovu baš njegovih zapis, o sluškivanja iz prošlosti. Dakle, prosto, koristnik je neko vreme već u sistemu i nek poslade nekog vremena se on nekako profiliše i onda se tačno za to koristnika zna šta on radi u kojim trenucima, koliko učestalo i prosto na daj način se definišu neke gramice za konkretno njega. Al sa druge strane, ti zapis i o sluškivanja su inputi i u sam software za detekciju upada, jer prosto svaki sledeći, da kažem svaka sledeća akcija koristnika se proverava na ostnovu svih predhodnih akcija koristnika, odnosno na ostnovu njegovog profila, tako da prosto taj zapis o sluškivanja je input i sa te strane. Naravno, prosto kada imamo kao input neki zapis o sluškivanje, želimo da proverimo dalje neka akcija u okviru tog zapisa, da bila legitimna ili nije, potrebno na ostnovu neke metrike da izvršimo tu taj statistički test. Dakle, ta metrika kao što smo spomenuli može da bude običa neki broja, tako da imemo, da li se neka akcija odradila u nekim definisanim graničnim vrednostima po broju, da kažem izvršavanja te akcija, na primer, da li koristnik koji se inače logo je jednom na danse i danas logo je jednom eventom od vaput ili se logoval 50 puta ili prosto, dakle, koliko puta se izvršava neki program, dakle, neki koristnik može da prosto neki konkretan program nine izvršava, a ukoliko je, dakle, u zapisu sluškivanja sad taj program izvršavanja jako često, prosto to može da nam bude opet neka potencijalna detekcija upada. Sa druge strane osim brojača, dakle, metrika može da bude i što perica, dakle, neki vremenski interval, gde prosto pratimo, da li je vreme između neke dve iste ili različite akcije, dakle, u granicama normale za to koristnika, naprim. vreme između neka dva uzastopna.
 logovanje i sada neka treća metrika bebila sama upotreba resursa, dakle, da li korisnik taj neki resurs upotrebljava, inače ili ga prosto neupotrebljava ili količinski, koliko prosto taj korisnik upotrebljava neki resurs, naprim. stampa čili neki konkretan program ili pristup nekom filu ili tako da. Na osnovu sad te neke metrike, dakle, mi definišemo različite testove koji pomažu da se odkrije, da li je neki korisnik legitiman ili nije, odnosno, da li on odstupa od profila tog nekog korisnika. I ovdje ćemo ukratko preći neki od tih mogućih testova, na osnovu kojih se prosto to nešto određa. S jedna strana nekako najprirodnije nam je da koristimo neke matematičke testove, koji prosto gledaju neku srednju vrednosti, neku standardno odstupanje nekog parametra ili skupa nekih parametra za neki određen i trenutak, da prosto vidimo dalje tog u granicamo normal. Dakle, dalje korisnik na nivou dana se logoje toliko i toliko puta, ili je on logovon više od tih granic i li manje od tog nekog broja, pa to smatramo detekcijem, tako da je to jedan od primera tih nekih testova. Drge strane možemo da korelišemo više tih parametara, dakle, da vidimo da naprijemo neku zavisnost između dva ili više parametara, pa tada pričemo u nekom više variacijskom modelu, gde prosto gledamo zavisnost između neka dva parametra, naprimer, zavisnost između frekvencije same logovanja i proteglog vremena između dva sukcesivna logovanja. Dakle, možda je na nivou jednog korisnika prosto postoji neka drugačija zavisnost, a dakle pojedinačno ti parametri da budu nekako profilisani na isti način. Neki treći tip ovih testova, jeste da se prosto u stanove neke varovatnoće predla za između različitih stanja, dakle korisnik je odradio nešto i jako često nakon toga odradi nešto drugo, dakle jako često nakon nekog logovanja korisnik prvo što uradijeste da otvori neki fil. Dakle, ukoliko to jako često za to korisnik, ali koliko korisnik nikad ne otvara neki fil nakon što se logoje, prosto tu upravimo neku varovatnoću prelaze između tih različitih akcija, koje su dakle definisane u zapis usluškivanja i tada pričamo Markovljevom modelu. Neki četvrati tip ovih testova je su vremenjske serie, dakle prosto tu se na osnovu vreme nagledaju, dali se neke akcija izvršavaju brzo ili sporo ili neke pojedinačne akcije, već može to da bude i set akcija, dakle, dali breviš brzo neko pokušava da se logoje na sistem, jer ako previš je brzo neko pokušava da se logoje na sistem, što nije nekako prirodno za čovek, da toliko brzo otkuca neku šifru, onda možemo da kažemo da neku tu koristi neki program koji pogađa, naprim. šifre. I pet i neki tip model je este operacijan i model koji prosto gleda nekako šta je to abnormalno, odnosno ne analizira konkretne zapise usluškivanja, već prosto definishe da kažem neka pravila, kojima se nešto smatra abnormalnim ili da kažem normalnim stvarima koje su i dašavaju u sistemu. Naprim. više puta smo skomenuli, veliki broj pokušaja logovanja u jako kratkom vremenskom intervalu je nešto što je se često smatra napadom i nema nikakve veze sa prosto sbredkonim zapisima usluškivanja, nego prosto to definisano kao pravima. Ovdje u tabeli, dakle neću da se zadržam na ovaj tabel jer imamo doha se slajdala da pređemo, dakle možete da vidite neke primere šta je to što je prosto detektovano kao pretnja, nad kojim modelom su testov izvršavani i koja nam je bila metrika, dakle da provalimo tog nekog napadača. Tako da to pogledajte sami, dakle imate lepe primere i tu, a i u kinisi. Što se tiče detekcija, zasnovane napravilimo, dakle to nam je druga velika kategorija detekcija, rekli smo da ona funkcioniše tako što prosto na osnovu nekog skupa pravila koje smo definisali na nivou sistema, prosto opet gleda nekako akcije koje korisnik izvršava i gleda, da li te akcije su po tim pravilima ili nisu odnosno krše, ta pravilena osno u toga definišamo neko korisnika kao legitimnog ili kao makar sumnjivog, a u krajnim slučaju, dakle, ne legitimnog. I tu imamo takođe neki dve podkategorije. Imao prvu podkategoriju, to je detekcija anomalia, ali koja je ovog puta zasnovana na pravilima, a ne na statistici, ali je slična kao detekcija statističkih anomalia. Naravno i ovde se koriste zapis i osluškivanja, ali ovde se oni koriste da ne definišu neke granice, dakle, učestalosti nekih akcija, nego prosto definišu odnosno iz njih nekako se generišu pravila koje opisuju šablone, koji se često pojavljuju u tim zapisima osluškivanja, odnosno gleda se na nivou sistema ili koristnika. Šta je to što se često dešava, dakle, neka sekvenca akcija? Šta je to što ne smedda se desi, nakon čega prosto se desio neka detekcija upada i tako dalje? I na osnovu svega toga se prosto automatski nekako generišu pravila, i onda na osnovu tih pravila se dalje u budućnosti gleda, dalje neka nova, neki nov set akcija, odnosno sekvenca akcija, nešto što je po tim pravilima ili nija. Naravno, ne zahteva se nikako predpodno opoznavanje bezbednostnih propusta sistema, već prosto se sve zastniva na, da kažem, nekim historijskim zapisima osluškivanja, na osnovu kojih se prosto generišu i neki testovi, odnosno ta neka pravila. Naravno, da bi sve ovo bilo uspešno, potrebno da imamo jako veliku u količinu tih pravila, odnosno veliku bazu podataka sa samim pravilima. S druge strane druga neka podkategori ove detekcije, jesti identifikacija proboja koja je zastvojana na pravilima i ona prosto koristi tehnologiju eksperskih sistema za detekciju upada u sistem. Dakle, prosto ona se zastniva na tome da se identifikuju neka sumnjeva ponašanja, čak i ako su okviru stanovoljanih šablona korišćanja, tako što nekih stručnjaci prosto analiziraju nekako sam sistem, dakle, ceodistribujeranih sistem, tako što, naprimer, intervjuviš u administratore sistema osoblje i sami stručnjaci definišu ta pravila. Dakle, razlika u odnosnu na predhodnu podkategoriju je ste što se ovde pravila ne generišu automatski nostmo u zapisu osluškivanja nego, dakle, strane nekog stručnjaka ili nekog eksperskog sistema, tako da se praktično jačina ovog pristupa direktno zastniva na umjeću kako sastavlja ta pravila, dakle, ali detekcija sama je ista, prosto imamo pravila koja ovo puta neku drugi napravio i čim se neka sekvenca akcija nekog koristnika krši sa nekim pravilom, odnosno, kosi sa nekim pravilom, onda se to smatra nekim, da kažem, probujom u sistem. Primjer jedne heuristike, naprimer koja može da se koristi u ovakom sistemu za detekciju proboja ili penetracija, jeste da prosto koristnici ne bi trebalo da čitaju filovi s foldera drugih koristnika, dakle, to je nesto što nije dozvoljeno ili da upisuju filovi drugih koristnika ili da bude ulogovanu više od jednog računara ili više od jedan put na istom sistemu, ili da pravi kopi nekih sistemcih programa, dakle, prosto to su neke stvari koje se jako redko oddešavaju pa samim time može neki, da kažem, stručne kada ovo, da kažem, iskoristi kao neka pravila. Posto jedan primjer še me koja se davno koristila u ovakoj detekcija zasnivala se na analizi zapisa o sluškivanja svakog koristnika, pa više pričamo detekciju anomalija zastnovojnoj napravilima, dakle, prosto, ukoliko se neki zapis o sluškivanja poklopi sa pravilom, odnosno, takažem, koo si sa nekim pravilom, nešto što koristnik ne smedara, i onda prosto, u mesto što odmah nekako njega definišamo kao nekom nelegitimnu koristnika, prosto mera sumnje za to koristnika se povećava. I onda kada ta mera sumnja doraste do nekih konkretne vrijednosti koja predodređena, eteko onda se koristnik nekako značao kao napadač i pokreća se postupak za izbacivanjem tog nekoliko koristnika. Dobro. Sada svoj vreme pričamo nekako o detekciju upada u konkretan jedan sistem, dakle, jedan racunar, ali naravno prosto nekako logičnije nam je kada pričamo većim korporacijama da nekako ustanojimo kako to sad sve ovo što smo naučili na napirati u neku distribuiranu.
 detekciju upada. Jer naravno, jako je sve ovo moguće iskoristiti, tako što ćemo prosto sve ove tipove detekcija koje smo videli, na svakom zasebnom računaru, odnosno u sistemu nekako instalirati, prosto efikastnije odbrana bi bila da se prosto nekako distribuira na ostnu neke šeme vrši, da kažem, da je detekcija upada u sistem. Tako da prosto distribuira na detekciju upada u sistemu nekako drugačije nekog tipa, nego ona klasična detekcija upada. I ono što moramo da definišujemo, ono čemu moramo da razmislimo kada pričamo u dizajnu takvih sistema, jeste da prosto sa jedne strane da kažem, postoji potreba na neki način da imamo mapiranje različitih formata zapise usluškivanja u neki konkretan format koji koristimo, jer različiti delovi sistema sa jedne strane mogu da koriste različite operativne sisteme, ja su druge strane da imaju instalirane različite software koje skupljaoje one neke konkretne, neke custom, da kažem, zapise usluškivanja, tako da to nešto što moramo da razmotrimo kao potencijalni problem. So druge strane, prosto ideja je da, s obzirom da će sigurno neki konkretni čvorovi u mreži biti zaduženi za zakupljanje ovih informacija o zapisima usluškivanja i za neku obradu samih zapisanostno u kojih se detektu neki upad. Dakle, postavlja se jedno pitanje koje je vezano za konkretan, da kažem, konkretno sigurnost slanja takvih podata kroz mrež. Irono što može da se desi, jeste ako ja imam problem na momraču narud, dok taj zapis usluškivanja stigne do deke centralne jedinice koja to analizira, jeste da se neka treća strana neki napadač prosto izmeni te podatki na taj način maskira praktično svoj upad u sistem, tako da prosto moramo da razmotrimo pitanje sigurnog slanja podata kako razmrežu i sa strane poverljivosti, dakle, inkripsija neka i sa strane, naravno, integritet. I naravno, kada pričamo o samu architekturiji, možemo da pričamo joj centralizovanu i da je decentralizovanu o architekturiji, da je prosto koj centralizovan je, dakle, jedna jedinica radi sve, dakle, i prijima izvešta i analizira ih, al naravno tu se, da kažem, povećava mogućnost da se, ukoliko se desi napada na taku tačku sistema prosto, sama zaštita celog sistema nekako svedena nulu i prosto da to mogući neke dodatne napade u budućnosti, tako da je sve, da kažem, zastnovan ono to jednoj jedinici, a da je prosto koj decentralizovan je prosto, da kažem, architektura, imamo više tih tajkeh centara koja analiziraju zapise osluškivanja, ali naravno tu imamo onda problem komunikacija između njih jer prosto i oni moraju da iskomuniciraju da bi detektowali neki upad, tako da i o tome treba prorazmisleti. Jedan primer koji je na nekom universitetu sad mislim da u Kaliforniji, ali slago ću vas, osmišljen je ste datna slici s desne strane, dakle to je jedan distribuirani sistem koji se koristi za detekciju upada, koji se sastoji iz nekoliko komponenti. Naravno, odijemo neki razni računare u raznim LAN-WAN-MREŠAMA, prosto svaki od tih računara konkretnih, odnosno hostova, u sebi ima ovaj neki host agent module, dakle to je neki model koji na nivou jednog hosta skuplja informaciju o zapisima osluškivanja i praktično na taj način nekako on za sam za sebe te zapise osluškivanja nakon što ih skupi, šalje to je neku i centralnoj jedinici. Sa druge strane imamo i LAN-Monitor agent module, dakle to je jedan model koji funkcioniša na isti način kao i ovih host agent module, samo što on skuplja zapise osluškivanja ne nivou jedne LAN-MREŠA, odnosno gleda šta je to što se dešava na samoj MREŠI, kako a komunikacija se odvija, dalje ona u skladu ili nji u skladu sa nekim predefinisanim, da kažem, dešavanjima na MREŠI, i opet te zapise osluškivanja o samoj MREŠI, dakle ako komunikacijama uokviru LAN-a između hostova, isto šalje to i centralnoj jedinici i na kraju imamo baš tu centralnu jedinicu koja prijima izvešta i od LAN monitora i od host agenta i na neki način procesira i povezu ovo izvešta je i odlučuje, dakle to nam je mozak nekako celo operacije, ona odlučuje, da li se desio upad ili se nije desio upad u sistem. Na nivou svakog od ovih agenta se dešava prosto sledeći tok, da kažem, obrade na dojim zapisima i sluškivanja, dakle agent prosto sve vreme prati aktivnosti koje se dešavaju na nekom hostu ili na nekom LAN monitoru i nakon skupljanja tih zapisar, sluškivanja, ona na neki način prosto treba za filtrira ono što je od interesa za sigurnos, dakle prosto nešto što deluje sumnivo ili nešto što nije dosada uočeno i tako filtrirane podatke, da kažem, šalje dalje u ovaj neki tok. Nakon što se podaci filtrira i ono što je potrebno uraditi, jeste da ih prosto formatiramo u neki format koji je jasan onom centralnom menadžeru, tako da prosto ovo sve mora da prođi kroz neku format funkciju, koja prosto podatke, zapisimo sluškivanja u nekom formatu, prebacaju format koji posle ona centralna jedinica može da izanalizira, dakle to je neki u napred određen format, neki standardizovan format koji se naziva host audit record. Zatim se prosto nad svim tim podacima nekako u nizu nekih akciju utvrđuje, da li je aktivnost sumniva ili nije, dakle s jedne strane prosto gledaju se i prošli događe i da li prosto je ovo nešto što je standardno za to koristnika ili nije, sa druge strane nevezano za prošle događe je, dakle gledaju se sve one neke karakteristične situacije u kojima bismo zabilo kog koristnika rekli da je njegovo ponašanje nelegitim, odnosno da to nelegitiman koristnik, kao što neospošan pristup, filo, pristup sistemskim filo ima i tako dalje, i na kraju prosto agent straži ponašanja koja odudare od direktnod profila tog nekog koristnika i sve to što odradi prosto šalje centralno jedinici u koliko za tako neku situaciju definiš, ako neku tako situaciju definiš je kao sumnije. Tako da sama centralna jedinice tada može da alertuje ceo sistem da se desio upad, nakon čega se pokreće prosto postupak izbacivanja i samog sistema ili dodatno da traži neke dodatni informaciju vidu nekih upita, u vidu nekih kverija samom neku magentu koji onda prosto naosnu svoji zapislo sluškivanja šalje neke dodatne stvari koje isprva nije smatrao bitnima za sigurnost, ali sada kada je centralna jedinica malo istražila te podatke, sada to treba takođe da se analiziram. Naravno, istava šeima se definišuje i na LAN monitoru, dakle samo što je ideja da se podaci koje se skupljaju, skupljaju, dakle, a vezani su za samom rešu. I za kraj kod ove detekcije upada u sistem da ispričamo i to šta su to čupovi sa medom odnosno honey pots, dakle maja na predkonom času malo ispomenula ovo, dakle to su prosto nekih sistemi koji doska onako liče na legitim delove sistema, ali su nekako namerno osmišljeni tako da izgledaju primamljivo za napadača, odnosno predstavljio nekako mama sisteme i dizajni radni baž da privuku napadače da oni namerno nekako upadnu u taj sistem. Zašto je to tako pa, ukoliko se neko nađe u takom sistemu, onda smo mi sigurni za tako korisnik da nije legitima, jer prosto taj sistem i ako na izgled deluje da on legitiman i da se tu nešto dešava, on je baš namerno napravljen da ukvoti nekog, da kažem, ne legitimnog korisnika. Onda ako se neki ne legitimnog korisnik tu nađe, to onda znači da on nema predstavu da je ovo baš mama sistem i onda prosto, ono što mi možemo da odradimo tu, jeste da izbacimo tog napadača kojih smo uvatili u mamcu, jer smo sigurni da je on napadač, nema potreba da nešto tu analiziramo, ali možemo i namerno da ga nekako ostavimo u tom sistemu dovoljno dugo da nekako skupimo podatke o njegovima aktivnostima i da prosto administratori mogu na neki način da reaguju, da prosto obezbeda ostatak sistema u koliku se on zadrži dovoljno dugo. Tako da oni ti sistemi su generalno napunjane izmišljenim podacima, tako da sviti podaci izgledaju značen, no zapravo...
 nisu ni značeni, niti imaju smisla, tako da prosto svaki pristup o ovim podacima je dosta nekako sumnit. I sami sistemi su opravljani dosta osetljimi v imagentima zapračenje koje imaju prikuplače informacija o zapisima osluškivanja za svako korisnika koji se tu nađe, tako da praktično na ovaj način osim što možemo da privučemo na padača u neki drugi del sistema koji nam netreba i na taj način ga odmah ili milišemo sistema, mi možemo ovo znanje o samom na padaču da iskoristimo kasnije, da upodpunimo naš software za detekciju upada u naš sistem koji jeste regularan, tako što ćemo prosto i svih ovih informacija o ovim korisnicima koji su se zakačili za ovaj mamac da izvučemo neka karakteristična ponašanja koje će nam kasnije pomoći da slične na padače izbacimo iz regularnog sistema. Dobro. Dalje imate neko pitanje ovom trenutku? Dobro, ako nemate pitanje, ja ću sada prepustiti rečima i pa prosto dok le stignemo sa ovom na nadrednom lekcijem koje je vezana za upravljanje konkretnim šiframa na sistemima. Kako? Ok, dakle, nastavimo da pričemo o šiframa i prve neka linija zaštite samog sistemo od bilo kog neautorizovanog koristika su naravno kredencijali koristika koji se zastoja od nekog njegovog user nemo, odgosto identifikator, odgosto koristnečko gimena i neke šifre koji unosi, dakle tipično to je takvo i nekoj form. Dakle i kredencijali, dakle, naravno, pomažu ga se selektuju legitimi koristici od određanih drugih koristika i naravno oni služaju i drugim svrhajman, dakle, ne samo izključivo da li koristik može da pristupi sa ovom sistemu, nego nekog koji da ograniči prava pristupa u okviru sistema. Zato što, dakle, ovo je prvi neke filtr, da li očite koristnik može da pristupi sa lokogram sistemu, naravno, nam je svim ončim gleder. Miđetimo, osim toga, na ostavu koristickog gimena se određuju i neke privilegije i sami znate, naprimer, recimo, na muzlu kada ste ulogovani u okviru neko kursa, dakle, vi, kao sa vašim koristničkim kredencijalima kao studenti, možete da vidite materiale, ali nemate prava pristupa testuvi, ma u smislu uređivanja testova, postavljanja, pitanja i tako dan. Sa druvi strane, dakle, opet za isti takav primver, dakle, nekog koja ima određenog koristničku ulogu, naprimer koristnička uloga je nastavnika na nekom kursu, na muzlu, može prosto da dodali određena prava pristupa nekom skupu studenta i onda, naprimer, svi studenti koji pripadaju nekoj grupi koja je upisana na određeni kurs, kima je u pravo da vide materiale vezane za taj kurs, dobro, naprimer, studenti koji su sa neku drugu fakulteta ili čak ni to, ali koji nemaju pristup datom kursu, opet nemaju prava da vide određene Dakle, doda zve nešto što se može selektovati na onstnovu kredencija lakoristnika. Sada da je prešto stiče same šeme čuvanja šifara, pričali smo nešto više o tom da u okoru prvog dela danasnji elekcije. To je da se tipično, dakle, šifre čuvaju u nekom filo i nekog ko su zaštičene u samom sistemu i da se šifre u glavnom nek ne čuvaju u nekom izvornom obliku jer bi time bilo je otako ne zaštičene. Već da prosto koristimo neki odpravila za čuvanje samih šifara i sada ćemo vidjeti jednu od šena koja se koristio u Oksunioniks operativnog sistemaca zaštetu gde prosto želimo da vidimo dakle kako funkcioniše celo taj koncept zaštete šifara, odgospa kako izgleda proces čuvanja same šifre i zatim samog unasa šifre i provere da li je odgovareći kredencijal i zapravo odgovari u nekom legitimnom poristiku, či zapis čuvamo u okviru nekog fila. Dakle, svaki koristnik bira neku šifru i u okviru ove še me ona je dužina do osam nekih printable karakterom gde se, ali se način svaki od tih karakter, odnosno svaka ta vrednost se konvertuje u neke kojdenačne sedmobitne karaktere, koji u su principu mapiraju na onaj osnovni skup ASCI kod ovo koji su sedmobitni kao što znajte. I onda dakle to nam služi kao gljuč za inkripsiju za neki algoritm koji je baziran na DES algoritmu i koji da se sada ovdje ima e-56 bitna vrednost. Ta i DES je modifikovan korišnjem neke dodatne vrednost. I ta vrednost se naziva slana vrednost ili SOPT. I u principu, dakle, postoje neka generalna upotreb ove dodatnih vrednosti kako bi se sam algoritm ojačal nekim dodatim parametrom koji se tu koristi. Tako da u ovom slučuje to neka 12 bitna dodatna vrednost i ona se zastneva na vremenu dodanivanja šifra koristiku, tako da je to prosto, dakle, na neki način modifiku i algoritm, tako da on ne zavisi od više nekih nepoznatih informacije. DES algoritm se primenjuve naravno sa nekim ulazom i odgovarićim ključom koje smo videli kako je formiran. A ti ulazni podaci koji predstavljaju blomkove sami podata kako i se šifroju da bi se na kraju došlo do odgovarići ključa, naravno moraju biti neki šte deset sčetvorovitne vrednosti koja je su na početku ovečni blomkovi nola, a ceo algoritm egrifcija predstavlja jedan iterativni proces koji ima 25 iteracija i gde svaka predhodna iteracija, odnosno njen izlaz predstavlja ulaz sledaće iteracije egriftove. Tako da nakon svih ovih iteracija na kraju imamo neki blok podata kako je nekašto deset četiri bita, oni se na određeni način prevodili u sekvencu od 11 karaktera i to predstavlja našu šifru koja je provučena proz ovaj sistem i storovan na kraju u odgovarajućom file. Među otim, ovo što se još dodatno mora snimiti je i salt vrednost, zato što prosto, na početku, vidjet ćemo to do duše malo kastnije, kako se zapravo reprodukuje, odnosno kako se unosi šifra i kako se proverova, da li je ta šifra kompatibilna, kako da mi zapravo ovdje moramo zapnaciti sve one vrednosti koje nisu u napret predefinisani. Naprimer znamo da su blokov i nešto što je fiksno i samim tim to ne moramo da čuvamo, ali prosto, naravno, moramo zabunititi sve one informacije koje je jesu dodaceni parametri algoritma na osnovu kojih je mogući reprodukova i verificovati šifra. Ok, ovo je grafici prifes, kako zapravo čuvamo je o tako šifru, tako da vidite na uloz o ovdje algoritma, prosto dobodimo neku šifru, koji smo formirali na načinu, kako smo to opisali, konverzijom iz onih inicijalnih karaktera vaskih podove i proširivanjem ovih neku salt vrednosti, u ovom slučaju su na 12 tita i to se predstavlja neke uoz u modificovanji des algoritm, koji se potem ponavlja u 25 iteracija, ovo predstavlja neki blok od 64 bita, koji se pomirtaju karaktera, koji se potem pamte u ovom filu za šifra. I kao što vidite, do direktna vrednost koja se čuvam, vezano za nju, naravno čuva se koristničko ima nekog koristnika i u slučaju da praktično ima i više koristničkih imena, se moraju neko selektovati odgovarajići ulozi u ovom filu. Osem doga čuva se i slana vrednost, zato što pretstavlja jedan parametar koji je dodatni ulaz i nešto što nije u napredi predepinisano i što ima neko svoj specijalno vrednost. S odrvima strane, kada unosimo šifro, naravno mora se provariti da li koristnik ima odgovarajiću šifru. Selektujemo prema koristničkom imenu, prema nekom identifikatoru zapravo, a takođe je potrebno uneti, takle pročitati odgovarajiću slanu vrednost iz ovo guleza i uneti je kao parametar samog algoritma. Šifra se unosi i u ovom sluči je to taj one way, zato što, takle koristnik unosi šifru sa standardno guleza, a onda se potom ta šifra, zajedno sa ovom slanom vrednošću, provlači kroz sam algoritm na identična način i na kraju se nešto dobije kao output. To što se dobije kao output, proveri se sa ovom vrednošću koja je zapravo upisveno u samoj tabeli i ukoliko postoji poklapanje, znavo da je koristnik unio ispravnu šifru. Ukoliko ne postoji poklapanje, takle koristnik nije autorizoma. E sad, naravno, znate da u prak si moguće da je došlo do greške prilikom, ono su šifre, poko postoji više pokušle, ali u principu, takle, opšte pravilo, ako nema poklapanje, koristnik jednostavno u tom pristupu nema pravo pristupa samosite. Ova slana vrednost tipičnosti koristi kao dopuna različitim algoritmima, zato što usložnjava sam algoritm, tako što to predstavajuš jedan dodatvij paravet. Osim to da otežava brute force napade, zato što zapravo ne mogućeva harvirski implementaciju, odnosno, harvirski napad, a ovaj des algoritm odnosno...
 Svoj su, u sovcirsku implementacije nešto sporia, što na račitu možete primjetiti po tom što se bonavlja 25 puta. Dakle, u 25 iteracija, sovcirsku implementacije desa algoritma, jasno je da brutfor snapad je izuzetno neskodan. Iako, naravno, sa većim napretkom i hardwarea i tehnologije, implementacije su brže, tako da se te strane i algoritm je nešto manje odporan u odnusu na pretkode. Dakle, možemo da razimiramo da imamo neke dve glavne pretnje. Prva pretnja je da prosto neki koristnik može da pristupi datoj mašini i da može da pogadja šifre na datoj mašini i ukoliko dokvati praktično file koji sadrži šifre, onda takođe ne mora to nide radi na datoj mašini, već može lokalno da probada da je šifru je odgovarajuće ulaze i da tako prikupi koristnečke imena i šifre, ili može to da radi, da je bez ikakve kontrole koliko puta je pokušao da pogodi neku šifre. A sa druge strane, naravno, slova tačka je ljudski faktor uvek, zato što kada got koristnic imaju pravno da slobodno biraju na neki način šifre, onda videli ste, da oni imaju cendenciju da uglavim i zaberu neki šifre koje se mogu jednostavno poboditi. Dakle, da li bude u pitanju prosto neke kraće šifra ili bude u pitanju nešto što je njima blisko i na taj način su to prosto neke predefinisane vrednosti koji se češće koriste i dakle jako često ljudski faktor prestavlja generalno slavost razlačitih sistem. Još jedno malo rekapitulacija za strategije, zapogađenješ i pare i ako je to nešto što smo već pričali u okviru ono prvog dela kada smo pričali u uljezima, je da prosto može da se pokušava sa nekim inicijalnim vrednostima, koje su napredpoznete, nekim šiframa koje se često pojavljuju postanala za u nekim rečnicima ili nekim lišnim informacijama sa koristnicima, gde se možete probati sa nekim permutacijama, recimo ima prezime ili prezime ime, sa modifikacijama pojedinočnih karaktera u neke specijalne karaktere ili cifre, velika mala slova, dodavanje prosto nekih cifara uz neka lična imena i tako dalje da je preto slone neki standardni način i zapogađanje še paja. U principu jedan od načinu da se spreča napodina cifre je naravno da se zabrani pristup dom filo sa ciframa, da ne može neko da prosto preuzme dati filo sa ciframa i to se naravno rešava kontrolom pristupa kao što smo pričali, znači se možete pristup samom filo mogućen samo autorizovanim koristicima i u tom slučaju naravno ukoliko bilo u koji koristnik nema kredencijal i toga autorizovanog koristika, on ne može nida dohvati taj filo. Mnijeđu da naravno manje ove strategije u konkretnu, dakle i sklučivo, primene kontrole pristupa je da ukoliko neko može da pristupi bilo u kakvom nalogunosistemu, onda može da pokušava i dođe da se dođe do naloga se većim privilegima i naravno ukoliko i po uspe da dođe do takvog naloga, onda neometano može da pristupi dati filo, zato što će imati otvarići kredencijale za pristup filo sa ciframem. Osem toga, također može da se desi i da ovo po remeti dati filo sa ciframa pa da na taj načinu ne mogući pristupi drugim legitimnim koristicima. I dakle, ono još do dodatelo što možete, nisam pomenalo da osadali svoj u neku ruku i jesam. To je da nekako dosta nas, budime iću vidu da koristimo razvečite neke sisteme na koje se logujemo. Ima tendenciju, recimo da koristi identične kredencijale, ili bar dakle šifre, istena nekoliko razvečitih platform. I to dakle, rade posebno, dakle, ljudi koji nisu toliko možda i osvašćeni o tome koliko je bitno da imamo razvečite šifre. Zbog tog što u principu, u koliko koristite identične kredencijale ili identične šifre za logovanjera razvečite sisteme, onda sama sigurnost neku sistema nezavisi ni toliko od zaštite to konkretnog sistema, već zapravo od zaštite onog sistema, koji je najslabija kareka u tom čitelom skupu zaštitečenih sistema istošima. Jer u koliku se dođe do te šifre na bilo kom sistemu, onda se koristi više puno, dakle, tada nini bitno koliko drugi bolji sistem bolje zaštitečen, u koliko prosposno napadač nekako došao do dati šifre kojem je neki koristnički na od zaštitečenih. Naravno jedno od strate, odnosno, po svoj više strategija, kako zapravo možemo koristni kao svestiti ili kako go možemo ubeviti do tog, okažemo da koristiti bolje šifre, dakle, postoje različite tehnike. S jedno strane je, naravno, edukacija koristnika, zatim u jume o računerski generisane šifre, okoliko uopšta ne žalimo da koristimo, mogućimo da formira šifre, zato što znamo da će uglavnom napraviti neke šifre koje su lake za pamćenje, koje su jednostavne, ali, osim, toga, postoji i sofverska provera i postoji reaktivna provera i proaktivna provera. Samo edukacije, naravno, znamo da podrozumeva osješćivanje koristnika, odnosno, obježnjavanje koristnicima zašto je biteno da imaju dobre šifre. Osim, toga, je, naravno, koji su ispravni način izregenerisanje šifara. I tako dalje, međutim, to rećko kada daje prave rezultate, zato što prostom novo koristnik, ako jednostavno nisu upućeni u to koliko je opasno imati jednostavne šifre, prosto neće dovoljno ozbiljno schvatiti tako edukacije. Sa druge stranjem, računovski generisane šifre su dobre u jednom aspektu, a to je zato što su, u glavnom izregenerisane na neki slučaj način i samim tim nisu nešto što može biti pogođeno na jedan od načina koje smo upravo opisali prekhodno. Međutim, naravno, da takođe imaju problem, zato što u koliku su skroz slučajne, onda i koristnici takođe neće jednostavno bantiti. Pa će ih ili negde čuvati ili će imati neko aplikaciju okoru koja banta ili će prosto čuvati na neku mestu koja će biti dostupno drugim ljudima i samim tim opacito nije dovoljno sigurno. Što svičlavi s osvirskih problem. Kao što sam rekl, jedna je reaktivna problema šifara i ona podrozumeva podizvanje periodičnog procesa u sistemu koji ide kroz razvečite kredenci aleg koristnika i pronaozi šifara koje nisu dobre prema nekim standardizovanim pravi. Tako je naravno šifara, odostno kredenciali su izbančeni, koristici se jasno alarmiraju obove štavo i da treba da izabijemo nešto drugo i na taj način su eliminisene ove najjednostavnije šifara koje mogu biti izbjena. Međutim problem tako i k systema je prvo što sloni periodični, tako da naravno od toga kolika je zapravo perioda, kako se savisi i u kontrenutku će se deseti provera, a od momentu kada se formira od guvarajuću šifara, pada u momentu kada se proveri, sistem je ranjata. Sa druge strane, sama provera za uzima neke resursa, znači to je tipično neki algoritm koji mora da ida po neku jeuristici i provere šta je uopšta loša šifara za neki sistem i na ostavu toga da radi od guvarajuću selekciju. Sama takvak jeuristika naravno podrozumeva o na pravilu, o koji smo pričali, zatim neke rečnike, vrednosti koji smo treba tražiti, raditi pretragu i tako dalje. I to sve naravno uzima dosta resursa. Sa druge strane, pošto to nije primar na funkcionalnu sistema, sistem jasno ne može odrediti glavne resurse za ovakvu jednu funkcionalnost. Već je to neka sajt svar koja pomožu sigurnosti sistemu, ali nije glavna funkcionalnost. Sa druge strane, nekako napada sistem, njemu je to glavna namera i on će u opštom slučaju ožiti više resursa da dođe da odguvarajući šifara. Zvuk toga ovakvi sistemi u principu ne mogu detektovati sve ranjive šifre, ali mogu jedan deo svakakovi selektovatje. Poslanje je proaktivno provira šifara i ona se možda smatra i najboljom i najčešće implementirana. A to znači da je koristnik podozvoljeno da izabera svoju šifru, međutim, ukoliko šifra nije adekvatna, ona se u toku samo izbora odbacuje. Dakle reaktivna u nazad provira proaktivna u napred. To znači da sistem na ostavu nekih definisanih pravila odbacuje ili dopušta šik. I ovo je nešto što smo svi videli, gde je naravno prosto definisane su neka pravila i to je, dakle, ono što uglavno mi viđete, retimo da šifra minimalno mora imati osam karaktera, da mora imati bari jedno veliku slovo, da mora imati neki specialne karaktere, da, retimo, ne smet biti šifra koji ste već imali, da se mora, retimo, radlikovati u određenom broju karaktera u odnosno šifru koji ste predhodno imali, dakle, sve su to neka pravila. Osim toga, retimo, ima neki šifarnik, kroz koji prolazi, pa vidi, e ove šifra su često upotrebi, ne treba ih koristiti. I sada naravno da, ukoliko sistem se previše buni, onda se mi svi iznerviramo. I to isto nije dobro, ali, s druge strane, ukoliko sistem ima veoma jednostavan algoritm, onda opet postoji ozbiljna opasnost, da će upasti neke šifre koje sam je po sebi nisu prihvative i nisu dovoljno sigurne za sam sistem.
 Tako da kao u svem vrtrema naći neki balanc i naći neku ispravnu sredinu na osnovu koje će, ovaj sistem dahve dobro naditi, odbacivati šifre koje nisu dobre, a opet naravno ne biti previše rigorozan u tom stvim stvarnosti. Ok, ovdje smo stihli, znači, i doda distribujaovi do vas napada, za koje danas nema ovremena, pa ćemo to nasaviti sledeći put. Recite mi, da li imate nekih pitanja vezano za dalštje lekciju? Ok, ako ne, onda hvala na pažni i vidimo se sledeći put. Znači, vam se vam prvi tine za projektat, ako nije prvno samo. Oža, oža.
