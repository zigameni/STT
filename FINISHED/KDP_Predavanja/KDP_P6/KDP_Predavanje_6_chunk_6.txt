 A vidjet ćemo da to ne mora da bude tako, vidjet ćemo jednu tehniku koja se zove passing condition, a da ćemo možda to malo druga čije realizuje. Znači, mi ćemo ove vidjeti nekoliko tehnika kako mogu da se koristimo onitori, u zavisnosti od toga kako imi implementacije u posadini, koji su, takažem, obšte tehnike, šta može da se radi? A sad na program heroj da će pogrešiti ili neće pogrešiti. Ove samo opis kako bi nešto mogu da se realizuje. Ihajde da krenemo od prve stvari. A to je diagram stanja, kroz koja je prolazi jedan monitor. Monitor prolazi kroz ovdje tri stanja. Na početku kada dođe, a on ulazi u entry queue, kaže, ja čekam da dobijem eksklusivno pravo pristupa monitoru. Kad ja dobijem uđemo neku monitorsku metodu, to je međusobno isključivanje napravljeno. Znači to je dnjego inisientno osobina. Imamo međusobno isključivanje. Ako je monitor slobodan, iz ovog entry queuea se prelazi u stanje da ja mogu da izvršavam neku metodu. Znači iz ovog ovdje ulazno queuea prelazi se u stanje izvršavanjem. Tata nit radi neki posao nad monitorom. Tata nit ima eksklusivno pravo pristupa datom objektu. Nikodrugi nema pravo pristupa. I sada je pitanje, a šta ćemo raditi tu što radimo? Pa ako neamo nikakvog blokiranja, a mi ćemo i nikakve synchronizacije, mi ćemo samo izlaći na polje. Ovo je ovdje izlazak na polje, kaže, ja napuštam eksklusivno pravo pristupa. A ja sam napuštam eksklusivno pravo pristupa, to znači da neko drugi, kočuči ovdje u entry queue će dobiti pravo da uđi u monitor. Ako iko čekam, a i nalazi se u tom entry queue, taj neko će dobiti pravo da uđi u monitor. Ali ako nikon ne čekam, ništa se neće desiti. Čekaj će se da neko nov dođe. E, sad imamo još nekoliko stvari. A ako sam ja izvršalo po svoj par čekoda i najđem na wait metodu, ja bezuslovno napuštam izvršavanje i prelazim u red čekanja na datu i usnovnoj promenji. Znači svaka usnovnoj promenjiva ima svoj red čekanja. I ja čekam... Šta čekam? Čekam da neko pozove metodu signal. I sad je pitanje, a gde ću ja preći istanje blokiranih, ako neko pozove metodu signal. To zavisi od toga, da li se radi od disciplini signal on wait ili od disciplini signal and continue. Ako se radi od disciplini signal and continue, kad neka nit, ovde najđe na signal deo, nad nekom usnovnom promenju, a ovo je naš gore blokiranih, prelazim u entry queue. Či taj iz liste blokiranih prelazim u entry queue, pa će nekada dođi na red. Ako ima disciplini signal and wait, šta se dešava? Ko disciplini signal and wait, ovaj što je odradio signal, kaže uf, ja napuštam ekskuzivno pravo, a ona i kog budim, dolazi ima pravo da se izvršava. I ovu ovde diagram stanja, koji opisuje kako monitor radi. Ima tri stanja, jedno je entry queue, gde si moraju na početku da budu, on kaže da mi pravo da dođem i da uđemo monitor. Da budem jedini. Kada dobija ekskuzivno pravo, ja ulazim u ovde stanji za izvršavanji. Tu radim neki posao. Šta govada, odnosno ja. To nije i tradi neki posao. Koji je taj neki posao, takav da nemanih signalizacije, bilo kakvi signalizacije, nego jednostavno treba da uvećam nekim promenjimu, manji mneki promenjimu, ok. Ja ću samo da napustim ekskuzivno pravo i da postim nekog drugog. Ja se bezuslovno prepuštam ovom ovde sistemu, kojom je prebacuje iz liste iz ovog prava da se izvršam u listu blokiramih na dato i u sluvenoj promenju. Ja sam zablokiran, kraje. Dobro, šta se onda dešava? Kada me neko probudi u zavisnosti o disciplina, ja ću preći ili u entry queue ili ću ja dobiti pravo da se izvršavam. E sad, šta je onda razlika? A, koji imam disciplinu Signal & Weight? Onaj što budi! Ime pravo, ko disciplinu Signal & Weight continui da probudi prvog drugog, drugog, tredjeg, četvrtog. Ništa nije mogu da se promene između trenutka kada se je probudio prvog, drugog, tredjeg i četvrtog. A oni što se bude, oni će morati da provere dali njihov i uslovi i dalje važno, zato što se možda nešto promene. Umeđu vremenu. Šta se onda desi ko disciplinu Signal & Weight? Onaj što budi! A, može da probudi jednog. Ali kad je probudio jednog, on se zablokiralo. Otišao je u Q. Pa sveći put kad obje pravo da se izvršava. Ha, možda se nešto promenilo stavnje monitora, pa će verovatno opet morati da proveri. Ali ja smetim da probudim drugog, tredjeg, četvrtog. Či je to, to mi treba razmišljati kada se projektuje monitor. Kod disciplinu Signal & Weight onaj što se budi, mora da proveri dalje i dalje važi u oslov od ono kako me probudio. A onaj što budi kod disciplinu Signal & Weight ako treba da probudi više od jednog. Treba da proveri to što je važilo malo, čo znaja, smetim da probudim dva. Znači da ja i dalje smetim da probudim dva. Jer ko znaš, šta je moglo se desi u među vremenu. Ja sam prešu o entry Q, a kad sam došu o entry Q ja ne znam koji ću biti po redu. Ako ima disciplinu Signal & Weight ja znam da ću biti prvi nared. Ako ono samo napusti monitor, ako ono tamo zove neko u gunutra, pa zove neko u gunutra da nem pojma šta će se desiti. Ali ako ne zove nikog, ja sam prvi nared, neče postoji taj entry Q. A ono smo taj Q, urgent Q kako se nasiva. Dobro, i šta sad? Ništa, ovo ovde je opis, ovo je naši monitori. Videli smo da ko signal & continu, onaj što se budi, mora da proveri uslov, ko signal & weight, onaj što budi, ako treba da probudi više od jednog, treba da proveri, dali za drugog, tretje, četvrtog i dalje važi uslo budinja, jer ne znam okoliko vremena je protekla. Dali je garantovan svi forredo sved prilikom budinja? Ne. Svi forredo sved prilikom budinja, i ako bi trebalo da je to podrazumeva na procedura za rad ovih kiova. Da, redovi čekanja na ustovnim promenjevama a rade po FIFO principu. I prvi programski hezik, koji budemo gledali programski hezik, nje radi tako. Zamišljano po knjigama, to bi trebalo da bude napravljeno da, ali nije napravljeno da onaj ko se budi, bude prvi proces koji će biti propućeno. Tako da ćemo možda morati da razmistimo i o nekom drugu mehanizmu, da mi napravimo iznutra nekako drugačije garantovanje redo sleda. I videte ćemo da, mi možemo da koristimo i odgovarajući red nad našom usnovnom promenjem. Znači nećemo se oslanjati na taj podrazumevani red, nego ćemo mi možda moći da napravimo samo stavno sortiranje tog red. Da bi to sve lepo funkcionisalo. Epovo, koog reda? O kojim redom ima ja pričam sada? Pričam o redu blokiranih na usnovnoj promenjivi. Ako li kovdimo redova, imamo red ove čekanja na usnovnim promenjama, ali nemojte zaboraviti da imamo i ovaj ovde entry queue. A može se desiti da uslovna promenjava radi savršeno po FIFO redo sledu. Ali nije garantovano da će i entry queue biti po FIFO redo sledu. Znači videte, tu imamo 2 nivoa. Jednosti redovi čekanja blokiranih na usnovnoj promenjivi gde imamo signal and wait i drugoje gde čekamo na entry queue gde nema, nikakvog signal and wait. Imano čekamo da dođemo sa ekskuzivnim pravom da odradimo neki pasav. Kako izgledaju ti redovi? Imamo entry queue. Tu čekamo dok neduđimo do našeg monitora. A onda imamo gomil od nekih monitorjskih metodab koje pišemo nakoko pišemo. Imamo kod za inicializaciju dobro ili imamo još neke queueove imamo za svaku usnovnu promenjuvu mi imamo pojedan red čekanja. A ako imamo monitor sa disciplinom signal and urgent wait signal and urgent wait, onda ćemo imati još jedan ovde red čekanja to će biti ove urgentni queue urgentni red čekanja. Sa dalje prijateljetnja on je urgentni. Tu mora da se doći. I taj služi da probudi prog na rednog. To je ona i što me ne probudio taj treba da bude prvi naredni koji će nastaviti dalje se postoš. Šta ako imamo u njegi zdavanje nema pojima koji će biti ove do prvi naredni. Entry queue.